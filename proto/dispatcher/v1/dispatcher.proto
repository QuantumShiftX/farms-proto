syntax = "proto3";

package dispatcher.v1;
option go_package = "./pb/v1";


message DispatcherReq {

}
message DispatcherReply {}



// 异步任务（需要调用客户端触发）
service DispatcherAsync {
  // 发财树状态检查，推送
  rpc UpdateFortuneTreeStatusCheck (UpdateFortuneTreeStatusCheckReq) returns (DispatcherReply) {};

  // 农场作物状态检查,推送
  rpc UpdateCropStatusCheck (UpdateCropStatusCheckReq) returns (DispatcherReply) {};

  // 用户在线时长奖励监测
  rpc UpdateOnlineRewardTask(UpdateOnlineRewardTaskReq) returns (DispatcherReply) {};

  // 用户注册事件触发
  rpc TriggerUserRegistrationEvent (UserRegistrationEventReq) returns (DispatcherReply);

  // 用户登录事件触发
  rpc TriggerUserLoginEvent (UserLoginEventReq) returns (DispatcherReply);

  // 用户充值事件触发
  rpc TriggerUserRechargeEvent (UserRechargeEventReq) returns (DispatcherReply);

  // 用户提现事件触发
  rpc TriggerUserWithdrawEvent (UserWithdrawEventReq) returns (DispatcherReply);

  // 用户好友操作事件触发
  rpc TriggerUserFriendActionEvent (UserFriendActionEventReq) returns (DispatcherReply);

  // 心跳检测事件触发
  rpc TriggerHeartbeatEvent (HeartbeatEventReq) returns (DispatcherReply);
}

message UpdateFortuneTreeStatusCheckReq {
  int64 user_id = 1;  // 用户id
  int64 tree_id = 2;  // 发财树id
  int64 operation_at = 3; // 下次状态检查执行的时间

}

message UpdateCropStatusCheckReq {
  int64 user_id = 1;  // 用户id
  int64 plant_id = 2;  // 种植id
  int64 operation_at = 3; // 下次状态检查执行的时间
}

message UpdateOnlineRewardTaskReq {
  repeated UserOnlineDuration user_online_duration = 1;
}
message UserOnlineDuration {
  int64 user_id = 1;  // 用户id
  int64 duration = 2;  // 在线时间长度秒
  string stat_date = 3; // 统计的日期年月日
}

message UserRegistrationEventReq{
  int64 user_id = 1;
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
}

message UserLoginEventReq {
  int64 user_id = 1;
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
  int64 last_login_time = 3;                       // 上次登录的时间
  int64 is_first_login = 4;    // 是否是今天第一次登录 1 ：是 2： 不是
}

message UserRechargeEventReq {
  int64 user_id = 1;
  int64 amount = 2;                       // 充值金额
}

message UserWithdrawEventReq {
  int64 user_id = 1;
  int64 amount = 2;                       // 提现金额
}

message UserFriendActionEventReq{
  int64 user_id = 1;
  int64 type_code = 2;
  int64 sub_type = 3;
}

message HeartbeatEventReq {
  int64 user_id = 1;
}

// 定时任务
service DispatcherTimer {
  // 发财树状态检查
  rpc CycleFertileTreeStatusCheck(DispatcherReq) returns (DispatcherReply) {};
  // 农场作物状态检查
  rpc CycleCropStatusCheck(DispatcherReq) returns (DispatcherReply) {};
  // 农场作物状态更新
  rpc CycleCropStageUpdate(DispatcherReq) returns (DispatcherReply) {};
  // 公告消息检查
  rpc CycleBulletinMsgCheck(DispatcherReq) returns (DispatcherReply) {};
}
