syntax = "proto3";

package user.v1;
option go_package = "./pb/v1";


message UserReq{

}
message UserReply{

}
message MsgData {

}
// RequestClientInfo 客户端信息结构体
message RequestClientInfo {
  string ip = 1;            // 客户端IP地址
  string platform = 2;      // 平台：Windows、Linux等
  string os = 3;            // 操作系统
  string browser = 4;       // 浏览器信息
  string browser_ver = 5;   // 浏览器版本
  bool   is_mobile = 6;       // 是否是手机端
  string user_agent = 7;    // 完整的User-Agent
  string device_id = 8;     // 设备ID
  string device_type = 9;   // 设备类型
  string app_version = 10;  // 应用版本 (如果是App)
  string screen_size = 11;  // 屏幕尺寸
  string language = 12;     // 语言
  string timezone = 13;     // 时区
  string referrer = 14;     // 引荐来源
  int64 request_time = 15; // 请求时间（时间戳）
}



message UserRegisterReq {
  string account = 2;                 // 账号
  int64 verify_type = 3;              // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string password = 4;                // 密码：字母/符号/数字 的随机组合，最大长度为100个字符
  string confirm_password = 5;
  string captcha = 6;                 // 验证码：暂定为6位数字
  string invite_code = 8;             // 推广邀请码
}

message UserSignInReq {
  string account = 2;                 // 账号
  int64 login_type = 3;              // 登录方式：1-用户名，2-手机，3-邮箱，4-其他
  int64 verify_type = 4;              // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string password = 5;                // 密码：字母/符号/数字 的随机组合，最大长度为100个字符
}


// UserLoginResp 用户认证响应
message UserLoginResp {
  string token = 1;        // 认证令牌
  int64 expire_at = 2;     // 过期时间（时间戳）
}


// ForgotPasswordReq 忘记密码请求
message ForgotPasswordReq {
  string account = 2;       // 账号
  int64 verify_type = 3;              // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string captcha = 4;      // 验证码
  string password = 5;     // 新密码（最大100个字符）

}

// VerifyAccount 验证账号请求
message VerifyAccountReq {
  string account = 2;       // 账号
  int64 verify_type = 3;              // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string captcha = 4;      // 验证码
}

message UserSignOutReq {
  int64 user_id = 1;
}



service UserAuthService {
  rpc Register (UserRegisterReq) returns (UserReply) {}
  rpc Login (UserSignInReq) returns (UserLoginResp) {}
  rpc ForgotPwd (ForgotPasswordReq) returns (UserReply) {}
  rpc VerifyAccount (VerifyAccountReq) returns (UserReply);
  rpc LoginOut (UserSignOutReq) returns (UserReply) {}
}

// 植物状态请求
message PlantStatusRequest {
  int64 plant_timestamp = 1;  // 种植时间
  int64 harvest_timestamp = 2;  // 预期收获时间
  int64 default_growth_minutes = 3;  // 默认生长时间(分钟)
}

// 植物状态响应
message PlantStatusResponse {
  int64 status = 1;  // 植物当前生长阶段(1-6)
}

// 时间减少计算请求
message TimeReductionRequest {
  PlantInfo plant_info = 1;  // 植物信息
  bool is_self_action = 2;  // 是否是自己的操作
  bool is_watering = 3;  // 是否是浇水操作(否则为施肥)
}

// 时间减少计算响应
message TimeReductionResponse {
  int64 time_reduction_minutes = 1;  // 减少的时间(分钟)
}

// 生长阶段时间计算请求
message StageTimelinesRequest {
  int64 user_id = 1; // user ID
  int64 plant_id = 2; // 种植ID
}

// 生长阶段时间点
message StageTime {
  int64 plant_id = 1;
  int64 user_id = 2;
  int64 farm_id = 3;
  int64 land_id = 4;
  int64 stage_number = 5;  // 阶段编号(1-6)
  int64 expected_time = 6;  // 预计达到时间
  bool is_reached = 7;  // 是否已达到
}

// 生长阶段时间计算响应
message StageTimelinesResponse {
  repeated StageTime stage_times = 1;  // 各个阶段时间点
}

// 收获时间调整请求
message AdjustHarvestTimeRequest {
  PlantInfo plant_info = 1;  // 植物信息
  bool is_self_action = 2;  // 是否是自己的操作
  bool is_watering = 3;  // 是否是浇水操作(否则为施肥)
}

// 收获时间调整响应
message AdjustHarvestTimeResponse {
  int64 new_harvest_time = 1;  // 新的收获时间
  int64 time_reduced = 2;  // 减少的时间(秒)
}

// 维护需求检查请求
message MaintenanceNeedsRequest {
  int64 user_id = 1;
}

// 维护需求检查响应
message MaintenanceNeedsResponse {
  repeated MaintenanceNeeds maintenance_needs = 1;
}


// 维护需求检查请求
message CheckCropsNeedsRequest {
  repeated int64 user_id = 1;
}
// 维护需求检查响应
message CheckCropsNeedsResponse {
  map<int64, MaintenanceNeeds>  maintenance_needs = 1;
}

// 维护需求检查响应
message MaintenanceNeeds {
  int64 needs_water = 1;  // 是否可浇水 1可以，2不行
  int64 needs_fertilizer = 2;  // 是否可施肥 1可以，2不行
  int64 position = 3;  // 土地坐标
  int64 land_id = 4;  // 土地ID
  int64 plant_id = 5;  // 种植ID
}


// 生长进度请求
message GrowthProgressRequest {
  int64 plant_time = 1;  // 种植时间
  int64 harvest_time = 2;  // 收获时间
  int64 current_time = 3;  // 当前时间(如果为0则使用服务器时间)
}

// 生长进度响应
message GrowthProgressResponse {
  double growth_percentage = 1;  // 生长进度百分比(0-100)
  int64 remaining_time = 2;  // 剩余生长时间(秒)
}

// 植物当前状态请求
message PlantStateRequest {
  int64 user_id = 1;
}

// 植物当前状态响应
message PlantStateResponse {
  map<int64, PlantStateInfo> plant_states = 1;
}

// 植物当前状态响应
message PlantStateInfo {
  int64 current_stage = 1;  // 当前生长阶段(1-6)
  double growth_percentage = 2;  // 生长进度百分比(0-100)
  int64 ready_to_harvest = 3;  // 是否可以收获
  int64 needs_water = 4;  // 是否需要浇水
  int64 needs_fertilizer = 5;  // 是否需要施肥
  int64 time_to_next_stage = 6;  // 距离下一阶段的时间(秒)
  int64 time_to_harvest = 7;  // 距离收获的时间(秒)
  int64 next_stage = 8;  // 下一个生长阶段
  int64 land_id = 9;  // 土地ID
  int64 land_status = 10;  // 土地状态
  int64 land_position = 11;  // 土地坐标
  UserPlantingDetail plant_info = 12; // 当前的植物信息
}

// 植物信息
message PlantInfo {
  int64 plant_id = 1;
  int64 user_id = 2;
  int64 farm_id = 3;
  int64 land_id = 4;
  int64 plant_time = 5;  // 种植时间
  int64 growth_time = 6;  // 生长时间(分钟)
  int64 harvested_at = 7;  // 预期收获时间
  int64 water_count = 8;  // 已浇水次数
  int64 fertilizer_count = 9;  // 已施肥次数
  int64 is_harvested = 10;  // 收获状态
  int64 status = 11;  // 当前状态
  int64 watering_frequency = 12;  // 浇水频率(分钟)
  int64 fertilizing_frequency = 13;  // 施肥频率(分钟)
  int64 self_time_reduced_per_water = 14;  // 每次自己浇水减少的时间
  int64 self_water_reduction_percentage = 15;  // 自己浇水减少时间的百分比
  int64 self_time_reduced_per_fertilizer = 16;  // 每次自己施肥减少的时间
  int64 self_fertilizer_reduction_percentage = 17;  // 自己施肥减少时间的百分比
  int64 friend_water_time_reduction = 18;  // 好友浇水减少的时间
  int64 friend_water_percentage = 19;  // 好友浇水百分比
  int64 friend_fertilizer_time_reduction = 20;  // 好友施肥减少的时间
  int64 friend_fertilizer_percentage = 21;  // 好友施肥百分比
}

service UserPlantGrowthService {
  // 计算植物当前生长阶段
  rpc CalculatePlantStatus (PlantStatusRequest) returns (PlantStatusResponse);

  // 计算操作减少的时间
  rpc CalculateTimeReduction (TimeReductionRequest) returns (TimeReductionResponse);

  // 计算所有生长阶段时间点
  rpc CalculateStageTimelines (StageTimelinesRequest) returns (StageTimelinesResponse);

  // 调整收获时间
  rpc AdjustHarvestTime (AdjustHarvestTimeRequest) returns (AdjustHarvestTimeResponse);

  // 检查是否需要浇水/施肥
  rpc CheckMaintenanceNeeds (MaintenanceNeedsRequest) returns (MaintenanceNeedsResponse);

  // 检查是否需要浇水/施肥
  rpc CheckMaintenanceNeedsMap (CheckCropsNeedsRequest) returns (CheckCropsNeedsResponse);

  // 获取植物当前生长进度
  rpc GetGrowthProgress (GrowthProgressRequest) returns (GrowthProgressResponse);

  // 获取植物当前状态的综合信息
  rpc GetPlantCurrentState (PlantStateRequest) returns (PlantStateResponse);

}
// 修改用户余额请求结构
message UpdateUserBalanceReq{
  int64 user_id = 1; // 用户ID
  int64 amount = 2; // 变动余额
  string order_no = 3; // 订单号
  int64 wallet_type = 4 ; // 钱包类型 1：用户钱包,2：代理钱包,3：奖励钱包,4：USDT
  int64 category = 5 ; // 账变大类
  int64 sub_category = 6; // 账变小类
  string remark = 7;// 备注
  int64 trade_time = 10; // 交易时间
  string related_id = 11; // 关联的id 如游戏id等
}

// 修改用户余额返回结构
message UpdateUserBalanceResp{
  int64 balance = 1; // 修改后余额
  int64 wallet_type = 2; // 钱包类型 1：用户钱包,2：代理钱包,3：奖励钱包,4：USDT
  int64 status = 3; // 状态 0 失败,1 处理成功,2 余额不足
}

// 请求和响应消息定义
message AddGrowthRequest {
  int64 user_id = 1;
  int64 action_type = 2;
  int64 action_value = 3;
}

message RewardFertilizerReq {
  int64 user_id = 1;
}

service UserGeneralInnerService {
  // 修改用户余额
  rpc UpdateUserBalance(UpdateUserBalanceReq)returns (UpdateUserBalanceResp);

  // 增加用户成长值
  rpc AddGrowth(AddGrowthRequest) returns (UserReply) {}

  // 奖励用户肥料
  rpc RewardFertilizer(RewardFertilizerReq) returns (UserReply) {}

}




message GetOnlineUserListReq{
  int64 page = 1;
  int64 pageSize = 2;
}

message GetOnlineUserListReply{
  int64 total = 1;
  repeated int64  user_id = 2;
}

message CheckOnlineStatusReq{
  repeated int64  user_id = 1;
}

message CheckOnlineStatusReply{
  map<int64, int64> user_online = 1;
}


service UserRpcInnerService {
  // 获取在线用户ID信息
  rpc GetOnlineUserList (GetOnlineUserListReq) returns (GetOnlineUserListReply) {}
  // 批量检查用户在线状态
  rpc BatchCheckOnlineStatus (CheckOnlineStatusReq) returns (CheckOnlineStatusReply) {}

}




message UserIdReq {
  int64 user_id = 2;
}

message UserAuthenticationReq {
  string token = 2;
}
message UserAuthenticationReply {
  int64 user_id = 1;
}




service UserInnerService {
  // 用户连接
  rpc UserConnected (UserPersonalInfoMsgReq) returns (MsgReply) {}
  // 用户断开连接
  rpc UserDisconnected (UserPersonalInfoMsgReq) returns (MsgReply) {}
  // 用户认证
  rpc UserAuthentication (UserAuthInfoMsgReq) returns (UserAuthInfoMsgReply);
  // 用户各种事件触发
  rpc UserEventInfoMsg (UserEventInfoMsgReq) returns (UserEventInfoMsgReply);
  // 用户个人信息
  rpc UserPersonalInfo (UserPersonalInfoMsgReq) returns (UserPersonalInfoMsgReply) {}
  // 修改个人信息
  rpc UserEditPersonalInfo (UserEditPersonalInfoMsgReq) returns (UserEditPersonalInfoMsgReply) {}
  // 修改个人敏感信息
  rpc UserEditSensitiveInfo (UserEditSensitiveInfoMsgReq) returns (UserEditSensitiveInfoMsgReply) {}
  // 用户仓库信息
  rpc UserStorageInfo (UserStorageInfoMsgReq) returns (UserStorageInfoMsgReply) {}
  // 用户农场信息
  rpc UserFarmInfo (UserFarmInfoMsgReq) returns (UserFarmInfoMsgReply) {}
  // 用户土地信息
  rpc UserLandInfo (UserLandInfoMsgReq) returns (UserLandInfoMsgReply) {}
  // 用户操作农场
  rpc UserFarmOps (UserFarmOpsMsgReq) returns (UserFarmOpsMsgReply) {}
  // 获取好友列表及排名
  rpc UserFriendRankingInfo (UserFriendRankingInfoMsgReq) returns (UserFriendRankingInfoMsgReply) {}
  // 获取全局用户列表和排名
  rpc AllUserRankingInfo (AllUserRankingInfoMsgReq) returns (AllUserRankingInfoMsgReply) {}
  // 查看用户农场信息
  rpc LookUserFarmsInfo (LookUserFarmsInfoMsgReq) returns (LookUserFarmsInfoMsgReply) {}
  // 用户购买商品
  rpc UserPurchaseGoods (UserPurchaseGoodsMsgReq) returns (UserPurchaseGoodsMsgReply) {}
  // 用户的发财树信息
  rpc UserFortuneTreeInfo (UserFortuneTreeInfoMsgReq) returns (UserFortuneTreeInfoMsgReply) {}
  // 用户收获发财树
  rpc UserOpsFortuneTree (UserOpsFortuneTreeMsgReq) returns (UserOpsFortuneTreeMsgReply) {}
  // 校验二级密码
  rpc VerifySecondaryPassword (VerifySecondaryPasswordMsgReq) returns (VerifySecondaryPasswordMsgReply) {}
  // 币商列表
  rpc GetMerchantList (GetMerchantListMsgReq) returns (GetMerchantListMsgReply) {}
  // 币商金币汇率设置
  rpc SetMerchantExchangeRate (MerchantExchangeRateMsgReq) returns (MerchantExchangeRateMsgReply) {}
  // 提交兑换
  rpc SubmitForRedemption (SubmitForRedemptionMsgReq) returns (SubmitForRedemptionMsgReply) {}
  // 用户农场交易操作记录
  rpc FarmTransactionRecords (FarmTransactionRecordsMsgReq) returns (FarmTransactionRecordsMsgReply) {}
}

// 用户事件触发信息请求
message UserEventInfoMsgReq {
  string token = 1;  // 用户身份验证令牌，必填
}

// 用户事件触发信息响应
message UserEventInfoMsgReply {
  int64 user_id = 1;                   // 用户ID
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
  string language_code = 3;            // 语言代码
  string currency_code = 4;            // 币种代码
  int64 current_time = 5;               // 当前服务器时间戳
}


// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// -------------------------------------------------------------------------------------消息定义----------------------------------------------------------------------------------------- //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

// 枚举类型定义
// ------------------------------------

/**
 * 土地状态枚举
 * 定义土地的各种可能状态
 */
enum LandStatus {
  LAND_STATUS_UNSPECIFIED = 0;  // 未指定状态
  UNCULTIVATED = 1;             // 未开垦
  CULTIVATED_EMPTY = 2;         // 已开垦未种植
  PLANTED = 3;                  // 已种植
}

/**
 * 作物收获状态枚举
 * 定义作物是否已被收获
 */
enum HarvestStatus {
  HARVEST_STATUS_UNSPECIFIED = 0;  // 未指定状态
  NOT_HARVESTED = 1;               // 未收获 （没成熟）
  HARVESTED = 2;                   // 可收获（已成熟）
  WAIT_HARVESTED = 3;              // 已收获
}

/**
 * 作物生长状态枚举
 * 定义作物的生长阶段
 */
enum GrowthStatus {
  GROWTH_STATUS_UNSPECIFIED = 0;  // 未指定状态
  SEED_STAGE = 1;                 // 种子阶段
  SPROUTING_STAGE = 2;            // 发芽阶段
  GROWTH_STAGE = 3;               // 成长阶段
  FLOWERING_STAGE = 4;            // 开花阶段
  FRUITING_STAGE = 5;             // 结果阶段
  MATURE_STAGE = 6;               // 成熟阶段
}

/**
 * 农场操作类型枚举
 * 定义可在农场上执行的操作类型
 */
enum FarmOperationType {
  OPERATION_UNSPECIFIED = 0;  // 未指定操作
  PLANTING = 1;               // 播种 - 在指定土地上种植作物
  WATERING = 2;               // 浇水 - 为指定土地上的作物浇水
  FERTILIZING = 3;            // 施肥 - 为指定土地上的作物施肥
  HARVESTING = 4;             // 采摘 - 收获指定土地上成熟的作物
  READ_MESSAGE = 5;           // 读消息 - 读取作物相关的消息或通知
}

/**
 * 钱包类型枚举
 * 定义用户钱包的类型
 */
enum WalletType {
  WALLET_TYPE_UNSPECIFIED = 0;  // 未指定类型
  USERS_WALLET = 1;              // 用户钱包
  AGENT_WALLET = 2;             // 代理钱包
  REWARD_WALLET = 3;            // 奖励钱包
  USDT_WALLET = 4;              // USDT钱包
}

/**
 * 钱包用途类型枚举
 * 定义钱包的使用用途
 */
enum WalletUsageType {
  USAGE_TYPE_UNSPECIFIED = 0;  // 未指定用途
  DEPOSIT_ONLY = 1;            // 仅存款
  WITHDRAWAL_ONLY = 2;         // 仅提款
  DEPOSIT_AND_WITHDRAWAL = 3;  // 存款和提款
}

/**
 * 是否状态枚举
 * 通用的是否状态枚举（用于多个字段）
 */
enum BooleanStatus {
  BOOLEAN_UNSPECIFIED = 0;  // 未指定
  NO = 1;                   // 否
  YES = 2;                  // 是
}

/**
 * 商品类型枚举
 * 定义商店中商品的类型
 */
enum ProductType {
  PRODUCT_TYPE_UNSPECIFIED = 0;  // 未指定类型
  SEED = 1;                      // 种子
  FERTILIZER = 2;                // 肥料
  OTHER = 3;                     // 其他道具
}

/**
 * 所有请求消息的基础结构，可根据需要扩展
 */
message MsgReq {
  // 暂无字段，可根据需要扩展
}

/**
 * 所有响应消息的基础结构，可根据需要扩展
 */
message MsgReply {
  // 暂无字段，可根据需要扩展
}



// 鉴权相关消息
// ------------------------------------

/**
 * 获取用户请求是否合法
 * 用token校验用户身份
 */
message UserAuthInfoMsgReq {
  string token = 1;  // 用户身份验证令牌，必填
}

/**
 * 鉴权响应
 * 用token校验用户身份
 */
message UserAuthInfoMsgReply {
  int64 user_id = 1;                   // 用户ID
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
  string language_code = 3;            // 语言代码
  string currency_code = 4;            // 币种代码
  int64 current_time = 5;               // 当前服务器时间戳
}


// 用户相关消息
// ------------------------------------

/**
 * 获取用户个人信息请求
 * 用于查询当前用户的基本个人信息
 */
message UserPersonalInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
}

/**
 * 用户个人信息响应
 * 包含用户的详细个人信息
 */
message UserPersonalInfoMsgReply {
  int64 user_id = 1;                   // 用户ID
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
  string username = 3;                 // 账号名称
  string language_code = 4;            // 语言代码
  string currency_code = 5;            // 币种代码
  VipInfo vip_info = 6;              // 会员等级信息
  string remark = 9;                  // 用户备注
  int64 last_login_time = 10;          // 最后登录时间（Unix时间戳）
  string invitation_code = 11;         // 用户的邀请码
  string invite_addr = 12;         // 用户的邀请链接
  string avatar = 13;                  // 用户头像URL
  string phone = 14;                   // 用户手机号
  string email = 15;                   // 用户邮箱
  repeated UserWallet wallets = 16;    // 用户的钱包地址列表
  repeated UserBalance balances = 17;  // 用户的各类钱包余额列表
  int64  enable_secondary_pwd = 18;  // 是否设置二级密码（1：设置，2：未设置）
}

message VipInfo {
  int64 vip_level_id = 1;              // 会员等级ID（关联user_vip_levels表）
  int64 vip_level_val = 2;              // 会员等级值
  string vip_level_name = 3;              // 会员等级名称
  int64   current_xp = 4; // 当前经验值
  int64   next_level_xp = 5; // 升级需要的经验值
}


/**
 * 编辑用户个人信息请求
 * 用于更新用户的个人信息设置
 */
message UserEditPersonalInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  string avatar = 2;        // 用户形象(头像信息)
  string farm_name = 3;           // 农场名称，可选，修改时使用
  BooleanStatus has_completed_tutorial = 4;  // 新手教程状态（YES:已完成, NO:未完成）
  BooleanStatus has_received_free_gift = 5;  // 是否领取免费种子（YES:已完成, NO:未完成）
  string language_code = 6;  // 编辑语言
  string  currency_code = 7; // 编辑币种
}


message UserEditPersonalInfoMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

/**
 * 编辑用户个人信息请求
 * 用于更新用户的个人敏感信息设置
 */
message UserEditSensitiveInfoMsgReq {
  int64 category = 1;  // 1：修改密码，2：修改设置二级密码 ，3：验证账号（传3单独验证账号，2：设置二级密码的时候必须验证账号，1：不用验证账号）
  int64 user_id = 2;  // 用户身份验证令牌，必填
  string old_password = 3;  //旧密码
  string new_password = 4;  //新密码
  string account = 5;       // 账号
  int64 verify_type = 6;    // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string captcha = 7;       // 验证码
}


message UserEditSensitiveInfoMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}
/**
 * 用户钱包地址信息
 * 表示用户的各种加密货币钱包地址
 */
message UserWallet {
  int64 id = 1;                              // 主键ID
  int64 user_id = 2;                         // 用户ID
  string wallet_address = 3;                 // 钱包地址
  string wallet_name = 4;                    // 钱包名称/备注
  string wallet_type = 5;                    // 钱包类型(ETH/BTC等)
  WalletUsageType usage_type = 6;            // 用途类型
  BooleanStatus is_default_deposit = 7;      // 是否默认存款地址
  BooleanStatus is_default_withdrawal = 8;   // 是否默认提款地址
}

/**
 * 用户余额信息
 * 表示用户在各类钱包中的余额状态
 */
message UserBalance {
  int64 id = 1;                  // 主键ID
  WalletType wallet_type = 2;    // 钱包类型
  int64 user_id = 3;             // 用户ID
  int64 balance = 4;             // 可用余额
  int64 locked_balance = 5;      // 锁定余额（如提现中等）
}

// 用户仓库相关消息
// ------------------------------------

/**
 * 获取用户仓库信息请求
 * 用于查询当前用户的仓库库存信息
 */
message UserStorageInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  int64 page = 2;
  int64 page_size = 3;
  ProductType product_type = 4;
}

/**
 * 用户仓库信息响应
 * 包含用户仓库中的所有物品
 */
message UserStorageInfoMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated UserStorageDetail rows = 5;  // 用户仓库物品列表
  string extend = 6;
}

/**
 * 用户仓库物品信息
 * 表示用户仓库中的单个物品详细信息
 */
message UserStorageDetail {
  int64 id = 1;                         // 自增主键
  int64 storage_id = 21;                // 仓库物品ID
  int64 user_id = 2;                    // 用户ID，关联到用户表
  ProductType product_type = 3;         // 商品类型
  int64 product_id = 4;                 // 商品ID，关联到对应产品配置表
  string product_name = 5;              // 商品名称快照，保存购买时的名称
  string product_image_url = 6;         // 商品图片地址快照，保存购买时的图片URL
  int32 product_quantity = 7;           // 商品数量，表示用户拥有的该商品数量
  int64 sku_id = 8;                     // 商品SKU ID，关联到商品SKU配置表
  string sku_name = 9;                  // SKU名称快照，保存购买时的SKU名称
  int64 price = 10;                     // 商品价格快照，保存购买时的价格（单位：ustd）

  // 以下字段仅对种子类型有效
  int64 growth_time = 11;               // 生长时间快照（单位：分钟）
  int64 coin_reward = 12;               // 成熟后的收益快照（单位：代币）
  int64  watering_frequency = 22; // 浇水频率（次/天）
  int64  fertilizing_frequency = 23; //施肥频率（次/天)

  // 自己操作相关字段
  int64 self_time_reduced_per_water = 13;       // 自己每次浇水减少的时间快照（单位：分钟）
  int64 self_water_reduction_percentage = 14;   // 自己浇水减少时间的百分比快照（0-100）
  int64 self_time_reduced_per_fertilizer = 15;  // 自己每次施肥减少的时间快照（单位：分钟）
  int64 self_fertilizer_reduction_percentage = 16; // 自己施肥减少时间的百分比快照（0-100）

  // 好友操作相关字段
  int64 friend_water_time_reduction = 17;       // 好友每次浇水减少的时间快照（单位：分钟）
  int64 friend_water_percentage = 18;           // 好友浇水减少时间的百分比快照（0-100）
  int64 friend_fertilizer_time_reduction = 19;  // 好友每次施肥减少的时间快照（单位：分钟）
  int64 friend_fertilizer_percentage = 20;      // 好友施肥减少时间的百分比快照（0-100）

}

// 农场相关消息
// ------------------------------------

/**
 * 获取用户农场信息请求
 * 用于查询当前用户的农场状态信息
 */
message UserFarmInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
}

/**
 * 用户农场信息响应
 * 包含用户农场的基本信息
 */
message UserFarmInfoMsgReply {
  int64 id = 1;                         // 主键ID
  int64 farm_id = 2;                    // 农场ID
  int64 user_id = 3;                    // 用户ID
  string farm_name = 4;                 // 农场名称
  int64 total_land_count = 5;           // 农场总土地数量
  int64 water_limit_per_day = 6;        // 每日浇水限制次数
  int64 fertilizer_limit_per_day = 7;   // 每日作物施肥限制次数
  int64 total_reward_coins = 8;         // 农场总收益金币
  BooleanStatus has_received_free_gift = 9;  // 是否已领取新用户免费商品
  BooleanStatus has_completed_tutorial = 10; // 是否已参加过新手教程
}

// 用户土地相关消息
// ------------------------------------

/**
 * 获取用户土地信息请求
 * 用于查询当前用户的土地信息
 */
message UserLandInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  int64 page = 2;
  int64 page_size = 3;
}


/**
 * 用户土地信息响应
 * 包含用户所有土地的信息列表
 */
message UserLandInfoMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated UserLandDetail rows = 5;  // 用户土地信息列表
  string extend = 6;

}

/**
 * 用户土地详细信息
 * 表示用户的单块土地的详细状态
 */
message UserLandDetail {
  int64 id = 1;                    // UUID
  int64 land_id = 2;                // 土地ID
  int64 user_id = 3;                // 用户ID
  int64 farm_id = 4;                // 农场ID
  int64 plant_id = 5;               // 种植记录ID
  int64 position = 6;               // 土地位置编号（1-20暂时）
  LandStatus status = 7;            // 土地状态
  optional UserPlantingDetail planted_plant = 8;  // 种植信息，当status为PLANTED时才有值
  // 一些土地状态描述
  string crop_need_water = 9; // 农作物待浇水
  string crop_can_harvest = 10; // 农作物待收获
  string seed_wait_plant = 11; // 种子待种植
  string crop_need_fertilize = 12; // 农作物待施肥
  string buy_seed = 13; // 购买种子
  // 好友操作的描述
  string friend_farm_name = 14; // 操作好友的农场名称
  int64 watering_time_reduction = 15; // 浇水减少的时间 秒

}


/**
 * 用户种植记录详细信息
 * 表示用户种植的单株作物的详细信息
 */
message UserPlantingDetail {
  int64 id = 1;                    // 自增ID
  int64 plant_id = 2;               // 种植记录ID
  int64 user_id = 3;                // 用户ID
  int64 farm_id = 4;                // 农场ID
  int64 land_id = 5;                // 土地ID
  int64 storage_id = 6;               // 用户的仓库物品ID
  int64 plant_time = 29;             // 种植时间（Unix时间戳）
  int64 water_count = 8;            // 已浇水总次数
  int64 fertilizer_count = 9;       // 已施肥总次数
  HarvestStatus is_harvested = 10;  // 是否已收获
  int64 harvested_at = 11;          // 收获时间（Unix时间戳）
  int64 coins_earned = 12;          // 作物产生的金币数量
  GrowthStatus status = 13;         // 生长状态
  // 快照字段
  string product_name = 28;  // 种植时商品名称快照
  int64 crop_id = 7;         // 作物ID（对应商店信息中的sku_id或者种子信息中的id）
  string crop_name = 14;  // 种植时作物的作物名称快照
  int64 price = 15;  // 种植时作物的价格快照
  int64 growth_time = 16;  // 种植时作物的生长时间快照
  int64 coin_reward = 17;  // 种植时作物的金币奖励快照
  int64 watering_frequency = 18;  // 种植时作物的浇水频率快照
  int64 fertilizing_frequency = 19;  // 种植时作物的施肥频率快照
  int64 self_time_reduced_per_water = 20;  // 种植时每次自己浇水减少的时间快照
  int64 self_water_reduction_percentage = 21;  // 种植时自己浇水减少时间的百分比快照
  int64 self_time_reduced_per_fertilizer = 22;  // 种植时每次自己施肥减少的时间快照
  int64 self_fertilizer_reduction_percentage = 23;  // 种植时自己施肥减少时间的百分比快照
  int64 friend_water_time_reduction = 24;  // 种植时好友浇水减少的时间快照
  int64 friend_water_percentage = 25;  // 种植时好友浇水百分比快照
  int64 friend_fertilizer_time_reduction = 26;  // 种植时好友施肥减少的时间快照
  int64 friend_fertilizer_percentage = 27;  // 种植时好友施肥百分比快照
}

/**
 * 用户农场操作请求
 * 用于对自己或他人的农场进行各种操作
 */
message UserFarmOpsMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  FarmOperationType operate_type = 2; // 操作类型，必填
  int64 op_to_user_id = 3;           // 被操作的用户ID，必填（可以是自己或好友ID）
  int64 op_to_farm_id = 4;           // 被操作的农场ID，必填
  int64 op_to_land_id = 5;           // 被操作的土地ID，必填
  int64 op_land_position = 6;        // 被操作的土地位置编号，必填
  int64 storage_id = 7;  // 仓库物品ID（里面包含操作的作物详情）
}

message UserFarmOpsMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

/**
 * 用户全局排名
 * 展示所有用户的排名和自己的排名
 */
message AllUserRankingInfoMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
}
// 用户排名列表响应
message AllUserRankingInfoMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated FriendRankingInfo rows = 5;  // 用户排名列表
  MyRankingInfo my_ranking = 6;            // 我的排名信息
}


/**
 * 用户好友排名
 * 展示所有好友的排名和自己的排名
 */
message UserFriendRankingInfoMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
}
// 好友排名列表响应
message UserFriendRankingInfoMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated FriendRankingInfo rows = 5;  // 好友排名列表
  MyRankingInfo my_ranking = 6;            // 我的排名信息
}


// 单个好友排名信息
message FriendRankingInfo {
  int64 user_id = 2;          // 用户ID
  int64 friend_id = 3;        // 好友ID
  string username = 4;        // 用户名
  string avatar_url = 5;      // 头像URL
  int64 vip_level_id = 6;     // VIP等级ID
  int64 vip_level_val = 7;              // 会员等级值
  string vip_level_name = 8;              // 会员等级名称
  int64 coin = 9;             // 金币数量
  int64 updated_at = 10;       // 更新时间戳
  int64 rank = 11;             // 排名位置
  string farm_name = 12;             // 农场名称
  int64 water_interaction_status = 13;   // 互动浇水状态 0：未任何操作，1：帮他人浇水，2：他人帮自己浇水，3：互相浇水
  int64 can_water_num = 14; // 可浇水次数
}

// 我的排名信息
message MyRankingInfo {
  int64 user_id = 1;          // 我的用户ID
  string username = 2;        // 我的用户名
  string avatar_url = 3;      // 我的头像URL
  int64 vip_level_id = 4;     // 我的VIP等级ID
  int64 vip_level_val = 5;              // 会员等级值
  string vip_level_name = 6;              // 会员等级名称
  int64 coin = 7;             // 我的金币数量
  int64 rank = 8;             // 我在好友中的排名位置
  int64 total_friends = 9;    // 好友总数
  int64 total_water_count = 10;    // 总共浇水次数
  int64 daily_water_limit = 11;    // 可浇水次数
}



/**
 * 用户产看他人农场的操作请求
 * 表示查看他人的信息
 */
message LookUserFarmsInfoMsgReq {
  int64 user_id = 1;  // 查看用户ID
  int64 viewed_user_id = 2;  // 被查看用户ID
}
message LookUserFarmsInfoMsgReply {
  // 用户相关信息
  int64 user_id = 1;                   // 用户ID
  int64 parent_id = 2;                       // 上级ID（邀请用户的ID）
  string username = 3;                 // 账号名称
  string language_code = 4;            // 语言代码
  string currency_code = 5;            // 币种代码
  VipInfo vip_info = 6;              // 会员等级信息
  string remark = 7;                  // 用户备注
  int64 last_login_time = 8;          // 最后登录时间（Unix时间戳）
  string avatar = 9;                  // 用户头像URL
  // 农场相关信息
  int64 farm_id = 10;                    // 农场ID
  string farm_name = 11;                 // 农场名称
  int64 total_land_count = 12;           // 农场总土地数量
  int64 water_limit_per_day = 13;        // 每日浇水限制次数
  int64 fertilizer_limit_per_day = 14;   // 每日作物施肥限制次数
  int64 total_reward_coins = 15;         // 农场总收益金币
  // 土地信息
  repeated UserLandDetail land_detail = 16;  // 用户土地信息列表
  UserFortuneTreeInfo fortune_tree = 17;  // 用户的发财树信息

}

/**
 * 购买商店商品信息
 *
 */
message UserPurchaseGoodsMsgReq {
  int64 user_id = 1;
  int64 id = 2;
  BooleanStatus is_free = 3;
  int64 goods_num = 4;

}
message UserPurchaseGoodsMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

message UserFortuneTreeInfoMsgReq{
  int64 user_id = 1;
}


message UserFortuneTreeInfoMsgReply {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
  int64 vip_level_id = 3; // VIP等级ID，影响金币产出和生产周期
  int64 cycle_start_time = 4; // 当前周期开始时间（时间戳，秒）
  int32 is_ready_to_harvest = 5; // 是否可以收获标志：1-不可收获，2-可收获
  int64 last_harvest_time = 6;  // 上次收获时间（时间戳，秒）
  int64 next_harvest_time = 7; // 下次可收获时间（时间戳，秒）
  int64 cycle_harvested_icon = 8; // 当前周期可收获的金币
  int64 total_harvested = 9; // 历史总收获金币数量统计
  int64 created_at = 10; // 发财树创建时间（时间戳，秒）
  int64 updated_at = 11; // 发财树信息最后更新时间（时间戳，秒）
}


/**
 * 用户发财树详细信息
 * 表示用户的发财树详细信息
 */
message UserFortuneTreeInfo {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
  int64 vip_level_id = 3; // VIP等级ID，影响金币产出和生产周期
  int64 cycle_start_time = 4; // 当前周期开始时间（时间戳，秒）
  int32 is_ready_to_harvest = 5; // 是否可以收获标志：1-不可收获，2-可收获
  int64 last_harvest_time = 6;  // 上次收获时间（时间戳，秒）
  int64 next_harvest_time = 7; // 下次可收获时间（时间戳，秒）
  int64 cycle_harvested_icon = 8; // 当前周期可收获的金币
  int64 total_harvested = 9; // 历史总收获金币数量统计
  int64 created_at = 10; // 发财树创建时间（时间戳，秒）
  int64 updated_at = 11; // 发财树信息最后更新时间（时间戳，秒）
}

message UserOpsFortuneTreeMsgReq {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
}

message UserOpsFortuneTreeMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
  int64 harvested_icon = 3;                     // 收获的金币
}


// 校验二级密码请求
message VerifySecondaryPasswordMsgReq {
  int64 user_id = 1;          // 用户ID
  string password = 2; // 用户输入的二级密码
}

// 校验二级密码请求
message VerifySecondaryPasswordMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}


// 获取币商列表请求
message GetMerchantListMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
  string merchant_name = 4; // 币商名称（可选过滤条件）
}

// 获取币商列表响应
message GetMerchantListMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated MerchantInfo rows = 5;  // 用户排名列表
}

// 币商信息
message MerchantInfo {
  int64 id = 1; // 币商ID
  string name = 2; // 币商名称
  string logo = 3; // 币商LOGO
  int64 exchange_rate = 4; // 汇率(代币->USDT)
  string protocol = 5; // 币商协议
  int64 balance = 6; // 库存余额(USDT)
}

// 币商汇率请求
message MerchantExchangeRateMsgReq {
  int64 merchant_id = 1; // 币商ID
  int64 user_icon = 2; // 平台金币
  int64 user_id = 3; // 用户ID
}

// 币商汇率响应
message MerchantExchangeRateMsgReply {
  int64 cover_ustd = 1; // 换成的ustd
  int64 current_ustd = 2; // 总ustd
}

message SubmitForRedemptionMsgReq{
  int64 merchant_id = 1; // 币商ID
  int64 user_icon = 2; // 平台金币
  int64 cover_ustd = 3; // 兑换成的ustd
  int64 user_id = 4; // 用户ID
}
message SubmitForRedemptionMsgReply{
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

message FarmTransactionRecordsMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  int64 page = 2;
  int64 page_size = 3;
  int64 category = 4;   // 操作类型：1-收获种植 2-购买种子 3-收获发财树
}

message FarmTransactionRecordsMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated FarmTransactionRecord rows = 5;
}

message  FarmTransactionRecord {
  int64 id = 1;                 // 记录ID
  string order_no = 8;               // 订单编号
  int64 user_id = 2;             // 用户ID
  string username = 3;
  int64 farm_id = 4;             // 农场ID
  int64 wallet_type = 6;         // 账变钱包 1:用户钱包 2:代理钱包 3:奖励钱包 4:USTD钱包
  int64 category = 7;            // 操作类型：1-收获种植 2-购买种子 3-收获发财树
  int64 operated_at = 9;         // 操作时间（Unix 时间戳）
  int64 amount = 10;                 // 变动金额, 单位:微
}

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// -------------------------------------------------------------------------------------消息定义----------------------------------------------------------------------------------------- //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
