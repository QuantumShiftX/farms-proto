syntax = "proto3";

package mqtt.v1;
option go_package = "./pb/v1";

/**
 * MessageWrapper 消息包装结构
 * 所有消息的外层包装，包含消息ID和消息内容
 */
message MessageWrapper {
  MessageID msg_id = 1;       // 消息ID
  bytes payload = 2;          // 消息内容，经过序列化的二进制数据
  int64 timestamp = 3;        // 消息时间戳
  string session_id = 4;      // 会话ID
  repeated string tags = 5;   // 消息标签
}

// =========================================
// 基础消息结构定义
// =========================================

/**
 * MQTT请求消息基础结构
 * 所有请求消息的基础结构，可根据需要扩展
 */
message MsgReq {
  // 暂无字段，可根据需要扩展
}

/**
 * MQTT响应消息基础结构
 * 所有响应消息的基础结构，可根据需要扩展
 */
message MsgReply {
  int64 code = 1;                     // 响应状态码
  string msg = 2;                     // 响应消息
}

// =========================================
// 枚举类型定义
// =========================================

/**
 * MessageID 枚举
 * 定义系统中所有消息类型的唯一标识符
 */
enum MessageID {
  // 未知消息
  MESSAGE_ID_UNSPECIFIED = 0;

  // 基础消息 (1-99)
  DEMO = 1;
  USER_AUTH_INFO_MSG = 2;
  USER_PERSONAL_INFO_MSG = 3;
  USER_EDIT_PERSONAL_INFO_MSG = 4;
  USER_FRIEND_RANKING_INFO_MSG = 5;
  ALL_USER_RANKING_INFO_MSG = 6;
  USER_FORTUNE_TREE_INFO_MSG = 7;
  USER_EDIT_SENSITIVE_INFO_MSG = 8;
  VERIFY_SECONDARY_PASSWORD_MSG = 9;
  SUBMIT_FOR_REDEMPTION_MSG = 10;



  // 钱包相关消息 (100-199)
  USER_WALLET = 100;
  USER_BALANCE = 101;

  // 商店相关消息 (200-299)
  FARMS_STORE_INFO_MSG = 200;
  STORE_INFO = 201;
  CROPS_INFO_LIST_MSG = 202;

  // 仓库相关消息 (300-399)
  USER_STORAGE_INFO_MSG = 300;
  USER_STORAGE_DETAIL = 301;
  USER_PURCHASE_GOODS_MSG = 302;

  // 农场相关消息 (400-499)
  USER_FARM_INFO_MSG = 400;
  USER_LAND_INFO_MSG = 401;
  USER_PLANTING_DETAIL = 402;
  USER_FARM_OPS_MSG = 403;
  LOOK_USER_FARMS_INFO_MSG = 404;
  USER_OPS_FORTUNE_TREE_MSG = 405;


  // 配置相关信息 (600-699)
  VIP_LEVEL_INFO_MSG = 600;
  RECHARGE_CHANNELS_INFO_MSG = 601;
  USER_RECHARGE_INFO_MSG = 602;
  USER_WITHDRAW_INFO_MSG = 603;
  USER_WITHDRAW_CHANNEL_INFO_MSG = 604;
  GET_MERCHANT_LIST_MSG = 605;
  MERCHANT_EXCHANGE_RATE_MSG = 606;



  // 主动推送消息messageID (800-899)
  USER_NOTIFICATION_INFO_MSG = 800;  // 公告
  USER_BALANCE_INFO_MSG = 801; // 用户余额相关
  USER_LAND_STATUS_INFO_MSG = 802; //用户土地变更相关




  // 心跳连接
  USER_HEART_BEAT_MSG = 8888;

  // 错误消息 (500500+)
  ERR_COMMON = 500500;        // 通用错误
  ERR_PACKET = 500501;        // 数据包错误
  ERR_PARAM = 500502;         // 参数错误
  ERR_USER_NOT_EXIST = 500503; // 用户不存在
  ERR_USER_AUTH = 500504;      // 认证失败
}



/**
 * 土地状态枚举
 * 定义土地的各种可能状态
 */
enum LandStatus {
  LAND_STATUS_UNSPECIFIED = 0;  // 未指定状态
  UNCULTIVATED = 1;             // 未开垦
  CULTIVATED_EMPTY = 2;         // 已开垦未种植
  PLANTED = 3;                  // 已种植
}

/**
 * 作物收获状态枚举
 * 定义作物是否已被收获
 */
enum HarvestStatus {
  HARVEST_STATUS_UNSPECIFIED = 0;  // 未指定状态
  NOT_HARVESTED = 1;               // 未收获 （没成熟）
  HARVESTED = 2;                   // 可收获（已成熟）
  WAIT_HARVESTED = 3;              // 已收获
}

/**
 * 作物生长状态枚举
 * 定义作物的生长阶段
 */
enum GrowthStatus {
  GROWTH_STATUS_UNSPECIFIED = 0;  // 未指定状态
  SEED_STAGE = 1;                 // 种子阶段
  SPROUTING_STAGE = 2;            // 发芽阶段
  GROWTH_STAGE = 3;               // 成长阶段
  FLOWERING_STAGE = 4;            // 开花阶段
  FRUITING_STAGE = 5;             // 结果阶段
  MATURE_STAGE = 6;               // 成熟阶段
}

/**
 * 农场操作类型枚举
 * 定义可在农场上执行的操作类型
 */
enum FarmOperationType {
  OPERATION_UNSPECIFIED = 0;  // 未指定操作
  PLANTING = 1;               // 播种 - 在指定土地上种植作物
  WATERING = 2;               // 浇水 - 为指定土地上的作物浇水
  FERTILIZING = 3;            // 施肥 - 为指定土地上的作物施肥
  HARVESTING = 4;             // 采摘 - 收获指定土地上成熟的作物
}

/**
 * 钱包类型枚举
 * 定义用户钱包的类型
 */
enum WalletType {
  WALLET_TYPE_UNSPECIFIED = 0;  // 未指定类型
  USERS_WALLET = 1;             // 用户钱包
  AGENT_WALLET = 2;             // 代理钱包
  REWARD_WALLET = 3;            // 奖励钱包
  USDT_WALLET = 4;              // USDT钱包
}

/**
 * 钱包用途类型枚举
 * 定义钱包的使用用途
 */
enum WalletUsageType {
  USAGE_TYPE_UNSPECIFIED = 0;  // 未指定用途
  DEPOSIT_ONLY = 1;            // 仅存款
  WITHDRAWAL_ONLY = 2;         // 仅提款
  DEPOSIT_AND_WITHDRAWAL = 3;  // 存款和提款
}

/**
 * 是否状态枚举
 * 通用的是否状态枚举（用于多个字段）
 */
enum BooleanStatus {
  BOOLEAN_UNSPECIFIED = 0;  // 未指定
  NO = 1;                   // 否
  YES = 2;                  // 是
}

/**
 * 商品类型枚举
 * 定义商店中商品的类型
 */
enum ProductType {
  PRODUCT_TYPE_UNSPECIFIED = 0;  // 未指定类型
  SEED = 1;                      // 种子
  FERTILIZER = 2;                // 肥料
  OTHER = 3;                     // 其他道具
}

// =========================================
// 鉴权相关消息
// =========================================

/**
 * 获取用户请求是否合法
 * 用token校验用户身份
 */
message UserAuthInfoMsgReq {
  string token = 1;  // 用户身份验证令牌，必填
}

/**
 * 鉴权响应
 * 用token校验用户身份
 */

message UserAuthInfoMsgReply {
  int64 user_id = 1;                  // 用户ID
  int64 parent_id = 2;                      // 上级ID（邀请用户的ID）
  string language_code = 3;           // 语言代码
  string currency_code = 4;           // 币种代码
  int64 current_time = 5;             // 当前服务器时间戳
}


// =========================================
// 心跳相关消息
// =========================================

/**
 * 获取用户请求是否合法心跳
 * 用token校验用户身份心跳
 */
message UserHeartBeatMsgReq {
  string token = 1;  // 用户身份验证令牌，必填
}

/**
 * 心跳响应
 * 用token校验用户身份
 */
message UserHeartBeatMsgReply {
  int64 user_id = 1;                  // 用户ID
  string language_code = 2;           // 语言代码
  string currency_code = 3;           // 币种代码
  int64 current_time = 4;             // 当前服务器时间戳
}

// =========================================
// 用户相关消息
// =========================================

/**
 * 获取用户个人信息请求
 * 用于查询当前用户的基本个人信息
 */
message UserPersonalInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
}

/**
 * 用户个人信息响应
 * 包含用户的详细个人信息
 */
message UserPersonalInfoMsgReply {
  int64 user_id = 1;                  // 用户ID
  int64 parent_id = 2;                      // 上级ID（邀请用户的ID）
  string username = 3;                // 账号名称
  string language_code = 4;           // 语言代码
  string currency_code = 5;           // 币种代码
  int64 vip_level_id = 6;             // 会员等级ID（关联user_vip_levels表）
  int64 vip_level_val = 7;            // 会员等级值
  string vip_level_name = 8;          // 会员等级名称
  string remark = 9;                  // 用户备注--
  int64 last_login_time = 10;         // 最后登录时间（Unix时间戳）
  string invitation_code = 11;        // 用户的邀请码
  string invite_addr = 12;            // 用户的邀请链接
  string avatar = 13;                 // 用户头像URL
  string phone = 14;                  // 用户手机号
  string email = 15;                  // 用户邮箱
  repeated UserWallet wallets = 16;   // 用户的钱包地址列表
  repeated UserBalance balances = 17; // 用户的各类钱包余额列表
  int64  enable_secondary_pwd = 18;  // 是否设置二级密码（1：设置，2：未设置）
}

/**
 * 编辑用户个人信息请求
 * 用于更新用户的个人信息设置
 */
message UserEditPersonalInfoMsgReq {
  int64 user_id = 1;                         // 用户身份验证令牌，必填
  string avatar = 2;                         // 用户形象(头像信息)
  string farm_name = 3;                      // 农场名称，可选，修改时使用
  BooleanStatus has_completed_tutorial = 4;  // 新手教程状态（YES:已完成, NO:未完成）
  BooleanStatus has_received_free_gift = 5;  // 是否领取免费种子（YES:已完成, NO:未完成）
  string language_code = 6;  // 编辑语言
}

message UserEditPersonalInfoMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

/**
 * 编辑用户个人信息请求
 * 用于更新用户的个人敏感信息设置
 */
message UserEditSensitiveInfoMsgReq {
  int64 category = 1;  // 1：修改密码，2：修改设置二级密码 ，3：验证账号（传3单独验证账号，2：设置二级密码的时候必须验证账号，1：不用验证账号）
  int64 user_id = 2;  // 用户身份验证令牌，必填
  string old_password = 3;  //旧密码
  string new_password = 4;  //新密码
  string account = 5;       // 账号
  int64 verify_type = 6;    // 验证方式：1-密码验证，2-短信验证，3-邮箱验证，4-图片验证码
  string captcha = 7;       // 验证码
}


message UserEditSensitiveInfoMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}


// 校验二级密码请求
message VerifySecondaryPasswordMsgReq {
  int64 user_id = 1;          // 用户ID
  string password = 2; // 用户输入的二级密码
}

// 校验二级密码请求
message VerifySecondaryPasswordMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}


/**
 * 用户钱包地址信息
 * 表示用户的各种加密货币钱包地址
 */
message UserWallet {
  int64 id = 1;                              // 主键ID
  int64 user_id = 2;                         // 用户ID
  string wallet_address = 3;                 // 钱包地址
  string wallet_name = 4;                    // 钱包名称/备注
  string wallet_type = 5;                    // 钱包类型(ETH/BTC等)
  WalletUsageType usage_type = 6;            // 用途类型
  BooleanStatus is_default_deposit = 7;      // 是否默认存款地址
  BooleanStatus is_default_withdrawal = 8;   // 是否默认提款地址
}

/**
 * 用户余额信息
 * 表示用户在各类钱包中的余额状态
 */
message UserBalance {
  int64 id = 1;                  // 主键ID
  WalletType wallet_type = 2;    // 钱包类型
  int64 user_id = 3;             // 用户ID
  int64 balance = 4;             // 可用余额
  int64 locked_balance = 5;      // 锁定余额（如提现中等）
}

// =========================================
// 用户仓库相关消息
// =========================================

/**
 * 获取用户仓库信息请求
 * 用于查询当前用户的仓库库存信息
 */
message UserStorageInfoMsgReq {
  int64 user_id = 1;          // 用户身份验证令牌，必填
  int64 page = 2;             // 页码
  int64 page_size = 3;        // 每页项目数
  ProductType product_type = 4; // 商品类型筛选
}

/**
 * 用户仓库信息响应
 * 包含用户仓库中的所有物品
 */
message UserStorageInfoMsgReply {
  int64 page = 1;                        // 当前页码
  int64 page_size = 2;                   // 每页项目数
  int64 total = 3;                       // 总项目数
  int64 total_page = 4;                  // 总页数
  repeated UserStorageDetail rows = 5;   // 用户仓库物品列表
  string extend = 6;                     // 扩展信息
}

/**
 * 用户仓库物品信息
 * 表示用户仓库中的单个物品详细信息
 */
message UserStorageDetail {
  int64 id = 1;                         // 自增主键
  int64 storage_id = 21;                // 仓库物品ID
  int64 user_id = 2;                    // 用户ID，关联到用户表
  ProductType product_type = 3;         // 商品类型
  int64 product_id = 4;                 // 商品ID，关联到对应产品配置表（商品ID）
  string product_name = 5;              // 商品名称快照，保存购买时的名称
  string product_image_url = 6;         // 商品图片地址快照，保存购买时的图片URL
  int32 product_quantity = 7;           // 商品数量，表示用户拥有的该商品数量
  int64 sku_id = 8;                     // 商品SKU ID，关联到商品SKU配置表(对应作物ID)
  string sku_name = 9;                  // SKU名称快照，保存购买时的SKU名称（对应作物名称）
  int64 price = 10;                     // 商品价格快照，保存购买时的价格（单位：ustd）

  // 以下字段仅对种子类型有效
  int64 growth_time = 11;               // 生长时间快照（单位：分钟）
  int64 coin_reward = 12;               // 成熟后的收益快照（单位：代币）
  int64 watering_frequency = 22;        // 浇水频率（次/天）
  int64 fertilizing_frequency = 23;     // 施肥频率（次/天)

  // 自己操作相关字段
  int64 self_time_reduced_per_water = 13;       // 自己每次浇水减少的时间快照（单位：分钟）
  int64 self_water_reduction_percentage = 14;   // 自己浇水减少时间的百分比快照（0-100）
  int64 self_time_reduced_per_fertilizer = 15;  // 自己每次施肥减少的时间快照（单位：分钟）
  int64 self_fertilizer_reduction_percentage = 16; // 自己施肥减少时间的百分比快照（0-100）

  // 好友操作相关字段
  int64 friend_water_time_reduction = 17;       // 好友每次浇水减少的时间快照（单位：分钟）
  int64 friend_water_percentage = 18;           // 好友浇水减少时间的百分比快照（0-100）
  int64 friend_fertilizer_time_reduction = 19;  // 好友每次施肥减少的时间快照（单位：分钟）
  int64 friend_fertilizer_percentage = 20;      // 好友施肥减少时间的百分比快照（0-100）
}

// =========================================
// 商店相关消息
// =========================================

/**
 * 获取用户商店信息请求
 * 用于查询当前用户的商店相关信息
 */
message FarmsStoreInfoMsgReq {
  int64 user_id = 1;        // 用户身份验证令牌，必填
  int64 page = 2;           // 页码
  int64 page_size = 3;      // 每页项目数
}

/**
 * 商店信息响应
 * 包含商店内可购买的商品列表
 */
message FarmsStoreInfoMsgReply {
  int64 page = 1;                  // 当前页码
  int64 page_size = 2;             // 每页项目数
  int64 total = 3;                 // 总项目数
  int64 total_page = 4;            // 总页数
  repeated StoreInfo rows = 5;     // 商品信息列表
  string extend = 6;               // 扩展信息
}

/**
 * 商店商品信息
 * 表示商店中的单个商品信息
 */
message StoreInfo {
  int64 id = 1;                    // 自增主键
  ProductType product_type = 2;    // 商品类型
  string product_name = 3;         // 商品名称
  string product_image_url = 4;    // 商品图片地址
  int64 sku_id = 5;            // 物品ID
  int64 stock = 6;                 // 库存数量，-1表示无限
  int64 sort = 7;                  // 排序字段
  BooleanStatus is_free = 8;       // 是否可以免费领取
  BooleanStatus is_enabled = 9;    // 是否启用
  string crop_name = 12;                           // 作物名称
  int64 crop_price = 13;                           // 作物价格（单位：USTD）
  int64 estimated_value = 26;                           // 作物预估价值（作物代币*固定比例能换多少USTD 单位：USTD）
  int64 maturity_income = 14;                      // 成熟收益（代币）
  int64 maturity_period = 15;                      // 成熟周期（单位：分）
  int64 watering_frequency = 16;                   // 浇水频率（次/天）
  int64 fertilizing_frequency = 17;                // 施肥频率（次/天）
  int64 self_watering_decrease_time = 18;          // 自己每次浇水减少时间（单位：分）
  int64 self_watering_decrease_percentage = 19;    // 自己每次浇水减少百分比（0-100）
  int64 self_fertilizing_decrease_time = 20;       // 自己每次施肥减少时间（单位：分）
  int64 self_fertilizing_decrease_percentage = 21; // 自己每次施肥减少百分比（0-100）
  int64 friend_watering_decrease_time = 22;        // 好友每次浇水减少时间（单位：分）
  int64 friend_watering_decrease_percentage = 23;  // 好友每次浇水减少百分比（0-100）
  int64 friend_fertilizing_decrease_time = 24;     // 好友每次施肥减少时间（单位：分）
  int64 friend_fertilizing_decrease_percentage = 25; // 好友每次施肥减少百分比（0-100）
}

/**
 * 购买商店商品信息请求
 * 用于购买商店中的商品
 */
message UserPurchaseGoodsMsgReq {
  int64 user_id = 1;           // 用户ID
  int64 id = 2;                // 商品ID
  BooleanStatus is_free = 3;   // 是否为免费商品
  int64 goods_num = 4;         // 购买数量
}

message UserPurchaseGoodsMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}



// 种子相关消息
// ------------------------------------

/**
 * 获取系统种子相关信息请求
 * 用于查询当前系统设置的种子相关信息
 */
message CropsInfoListMsgReq {
  int64 page = 1;
  int64 page_size = 2;
}

/**
 * 种子信息响应
 * 包含系统可使用的种子列表
 */
message CropsInfoListMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated CropsProductInfo rows = 5;  // 种子信息列表
}

/**
 * 种子信息
 * 包含系统可使用的单个种子的详细信息
 */
message CropsProductInfo {
  int64 id = 1;                              // 作物ID
  string name = 2;                            // 作物名称
  int64 price = 3;                           // 作物价格（单位：ustd）
  int64 maturity_income = 4;                 // 成熟收益（代币）
  int64 maturity_period = 5;                 // 成熟周期（单位：分）
  int64 watering_frequency = 6;              // 浇水频率（次/天）
  int64 fertilizing_frequency = 7;           // 施肥频率（次/天）
  int64 self_watering_decrease_time = 8;     // 自己每次浇水减少时间（单位：分）
  int64 self_watering_decrease_percentage = 9; // 自己每次浇水减少百分比（0-100）
  int64 self_fertilizing_decrease_time = 10; // 自己每次施肥减少时间（单位：分）
  int64 self_fertilizing_decrease_percentage = 11; // 自己每次施肥减少百分比（0-100）
  int64 friend_watering_decrease_time = 12;  // 好友每次浇水减少时间（单位：分）
  int64 friend_watering_decrease_percentage = 13; // 好友每次浇水减少百分比（0-100）
  int64 friend_fertilizing_decrease_time = 14; // 好友每次施肥减少时间（单位：分）
  int64 friend_fertilizing_decrease_percentage = 15; // 好友每次施肥减少百分比（0-100）
  BooleanStatus is_available = 16;                  // 是否上架（1 = 上架, 2 = 下架）
  int64 sort = 17;                          // 排序（用于显示顺序）
  BooleanStatus is_enabled = 18;                    // 是否启用（1 = 启用, 2 = 禁用）
}


// =========================================
// 农场相关消息
// =========================================

/**
 * 获取用户农场信息请求
 * 用于查询当前用户的农场状态信息
 */
message UserFarmInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
}

/**
 * 用户农场信息响应
 * 包含用户农场的基本信息
 */
message UserFarmInfoMsgReply {
  int64 id = 1;                                // 主键ID
  int64 farm_id = 2;                           // 农场ID
  int64 user_id = 3;                           // 用户ID
  string farm_name = 4;                        // 农场名称
  int64 total_land_count = 5;                  // 农场总土地数量
  int64 water_limit_per_day = 6;               // 每日浇水限制次数
  int64 fertilizer_limit_per_day = 7;          // 每日作物施肥限制次数
  int64 total_reward_coins = 8;                // 农场总收益金币
  BooleanStatus has_received_free_gift = 9;    // 是否已领取新用户免费商品
  BooleanStatus has_completed_tutorial = 10;   // 是否已参加过新手教程
}


/**
 * 获取用户土地信息请求
 * 用于查询当前用户的土地信息
 */
message UserLandInfoMsgReq {
  int64 user_id = 1;  // 用户身份验证令牌，必填
  int64 page = 2;     // 页码
  int64 page_size = 3; // 每页项目数
}

/**
 * 用户土地信息响应
 * 包含用户所有土地的信息列表
 */
message UserLandInfoMsgReply {
  int64 page = 1;                      // 当前页码
  int64 page_size = 2;                 // 每页项目数
  int64 total = 3;                     // 总项目数
  int64 total_page = 4;                // 总页数
  repeated UserLandDetail rows = 5;    // 用户土地信息列表
  string extend = 6;                   // 扩展信息
}


/**
 * 用户土地详细信息
 * 表示用户的单块土地的详细状态
 */
message UserLandDetail {
  int64 id = 1;                              //
  int64 land_id = 2;                          // 土地ID
  int64 user_id = 3;                          // 用户ID
  int64 farm_id = 4;                          // 农场ID
  int64 plant_id = 5;                         // 种植记录ID
  int64 position = 6;                         // 土地位置编号（1-20暂时）
  LandStatus status = 7;                      // 土地状态
  optional UserPlantingDetail planted_plant = 8;  // 种植信息，当status为PLANTED时才有值
  // 一些土地状态描述
  string crop_need_water = 9; // 农作物待浇水 (为空就是不展示)
  string crop_can_harvest = 10; // 农作物待收获 (为空就是不展示)
  string seed_wait_plant = 11; // 种子待种植 (为空就是不展示)
  string crop_need_fertilize = 12; // 农作物待施肥 (为空就是不展示)
  string buy_seed = 13; // 购买种子 (为空就是不展示)
}

/**
 * 用户种植记录详细信息
 * 表示用户种植的单株作物的详细信息
 */
message UserPlantingDetail {
  int64 id = 1;                    // 自增ID
  int64 plant_id = 2;               // 种植记录ID
  int64 user_id = 3;                // 用户ID
  int64 farm_id = 4;                // 农场ID
  int64 land_id = 5;                // 土地ID
  int64 storage_id = 6;               // 用户的仓库物品ID
  int64 plant_time = 29;             // 种植时间（Unix时间戳）
  int64 water_count = 8;            // 已浇水总次数
  int64 fertilizer_count = 9;       // 已施肥总次数
  HarvestStatus is_harvested = 10;  // 是否已收获
  int64 harvested_at = 11;          // 收获时间（Unix时间戳）
  int64 coins_earned = 12;          // 作物产生的金币数量
  GrowthStatus status = 13;         // 生长状态
  // 快照字段
  string product_name = 28;  // 种植时商品名称快照
  int64 crop_id = 7;         // 作物ID（对应商店信息中的sku_id或者种子信息中的id）
  string crop_name = 14;  // 种植时作物的作物名称快照
  int64 price = 15;  // 种植时作物的价格快照
  int64 growth_time = 16;  // 种植时作物的生长时间快照
  int64 coin_reward = 17;  // 种植时作物的金币奖励快照
  int64 watering_frequency = 18;  // 种植时作物的浇水频率快照
  int64 fertilizing_frequency = 19;  // 种植时作物的施肥频率快照
  int64 self_time_reduced_per_water = 20;  // 种植时每次自己浇水减少的时间快照
  int64 self_water_reduction_percentage = 21;  // 种植时自己浇水减少时间的百分比快照
  int64 self_time_reduced_per_fertilizer = 22;  // 种植时每次自己施肥减少的时间快照
  int64 self_fertilizer_reduction_percentage = 23;  // 种植时自己施肥减少时间的百分比快照
  int64 friend_water_time_reduction = 24;  // 种植时好友浇水减少的时间快照
  int64 friend_water_percentage = 25;  // 种植时好友浇水百分比快照
  int64 friend_fertilizer_time_reduction = 26;  // 种植时好友施肥减少的时间快照
  int64 friend_fertilizer_percentage = 27;  // 种植时好友施肥百分比快照
}

/**
 * 用户农场操作请求
 * 用于对自己或他人的农场进行各种操作
 */
message UserFarmOpsMsgReq {
  int64 user_id = 1;                  // 用户身份验证令牌，必填
  FarmOperationType operate_type = 2;  // 操作类型，必填
  int64 op_to_user_id = 3;            // 被操作的用户ID，必填（可以是自己或好友ID）
  int64 op_to_farm_id = 4;            // 被操作的农场ID，必填
  int64 op_to_land_id = 5;            // 被操作的土地ID，必填
  int64 op_land_position = 6;         // 被操作的土地位置编号，必填
  int64 storage_id = 7;               // 仓库物品ID（里面包含操作的作物详情）
}

/**
 * 用户农场操作响应
 * 用于对自己或他人的农场进行各种操作
 */
message UserFarmOpsMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}

// 批量生成农场名称
message GenerateFarmsNameMsgReq {
  int64 user_id = 1;
}

message GenerateFarmsNameMsgReply {
  repeated string farms_name = 1;
}



/**
 * 用户产看他人农场的操作请求
 * 表示查看他人的信息
 */
message LookUserFarmsInfoMsgReq {
  int64 user_id = 1;          // 查看用户ID
  int64 viewed_user_id = 2;   // 被查看用户ID
}

/**
 * 查看他人农场信息响应
 * 包含他人农场的详细信息
 */
message LookUserFarmsInfoMsgReply {
  // 用户相关信息
  int64 user_id = 2;                   // 用户ID
  int64 parent_id = 3;                       // 上级ID（邀请用户的ID）
  string username = 4;                 // 账号名称
  string language_code = 6;            // 语言代码
  string currency_code = 7;            // 币种代码
  int64 vip_level_id = 8;              // 会员等级ID（关联user_vip_levels表）
  int64 vip_level_val = 9;             // 会员等级值
  string vip_level_name = 10;          // 会员等级名称
  string remark = 11;                  // 用户备注
  int64 last_login_time = 12;          // 最后登录时间（Unix时间戳）
  string avatar = 14;                  // 用户头像URL

  // 农场相关信息
  int64 farm_id = 15;                    // 农场ID
  string farm_name = 17;                 // 农场名称
  int64 total_land_count = 18;           // 农场总土地数量
  int64 water_limit_per_day = 19;        // 每日浇水限制次数
  int64 fertilizer_limit_per_day = 20;   // 每日作物施肥限制次数
  int64 total_reward_coins = 21;         // 农场总收益金币

  // 土地信息
  repeated UserLandDetail land_detail = 5;  // 用户土地信息列表
  // 发财树信息
  UserFortuneTreeInfo fortune_tree = 22;  // 用户的发财树信息
}


/**
 * 用户发财树详细信息
 * 表示用户的发财树详细信息
 */
message UserFortuneTreeInfo {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
  int64 vip_level_id = 3; // VIP等级ID，影响金币产出和生产周期
  int64 cycle_start_time = 4; // 当前周期开始时间（时间戳，秒）
  int32 is_ready_to_harvest = 5; // 是否可以收获标志：1-不可收获，2-可收获
  int64 last_harvest_time = 6;  // 上次收获时间（时间戳，秒）
  int64 next_harvest_time = 7; // 下次可收获时间（时间戳，秒）
  int64 cycle_harvested_icon = 8; // 当前周期可收获的金币
  int64 total_harvested = 9; // 历史总收获金币数量统计
  int64 created_at = 10; // 发财树创建时间（时间戳，秒）
  int64 updated_at = 11; // 发财树信息最后更新时间（时间戳，秒）
}


// =========================================
// 排名相关消息
// =========================================

/**
 * 用户全局排名请求
 * 展示所有用户的排名和自己的排名
 */
message AllUserRankingInfoMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
}

/**
 * 用户排名列表响应
 * 包含全局排名和自己的排名
 */
message AllUserRankingInfoMsgReply {
  int64 page = 1;                         // 当前页码
  int64 page_size = 2;                    // 每页项目数
  int64 total = 3;                        // 总项目数
  int64 total_page = 4;                   // 总页数
  repeated FriendRankingInfo rows = 5;    // 用户排名列表
  MyRankingInfo my_ranking = 6;           // 我的排名信息
}


/**
 * 用户好友排名请求
 * 展示所有好友的排名和自己的排名
 */
message UserFriendRankingInfoMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
}

/**
 * 好友排名列表响应
 * 包含所有好友的排名和自己的排名
 */
message UserFriendRankingInfoMsgReply {
  int64 page = 1;                        // 当前页码
  int64 page_size = 2;                   // 每页项目数
  int64 total = 3;                       // 总项目数
  int64 total_page = 4;                  // 总页数
  repeated FriendRankingInfo rows = 5;   // 好友排名列表
  MyRankingInfo my_ranking = 6;          // 我的排名信息
}

/**
 * 单个好友排名信息
 * 表示单个好友在排名中的详细信息
 */
message FriendRankingInfo {
  int64 user_id = 2;          // 用户ID
  int64 friend_id = 3;        // 好友ID
  string username = 4;        // 用户名
  string avatar_url = 5;      // 头像URL
  int64 vip_level_id = 6;     // VIP等级ID
  int64 vip_level_val = 7;    // 会员等级值
  string vip_level_name = 8;  // 会员等级名称
  int64 coin = 9;             // 金币数量
  int64 updated_at = 10;      // 更新时间戳
  int64 rank = 11;            // 排名位置
  string farm_name = 12;             // 农场名称
  int64 water_interaction_status = 13;   // 互动浇水状态 0：未任何操作，1：帮他人浇水，2：他人帮自己浇水，3：互相浇水
  int64 can_water_num = 14; // 可浇水次数
}

/**
 * 我的排名信息
 * 表示当前用户在排名中的详细信息
 */
message MyRankingInfo {
  int64 user_id = 1;          // 我的用户ID
  string username = 2;        // 我的用户名
  string avatar_url = 3;      // 我的头像URL
  int64 vip_level_id = 4;     // 我的VIP等级ID
  int64 vip_level_val = 5;    // 会员等级值
  string vip_level_name = 6;  // 会员等级名称
  int64 coin = 7;             // 我的金币数量
  int64 rank = 8;             // 我在好友中的排名位置
  int64 total_friends = 9;    // 好友总数
  int64 total_water_count = 10;    // 总共浇水次数
  int64 daily_water_limit = 11;    // 可浇水次数
}



/**
 * 用户发财树请求
 * 展示用户的发财树信息
 */
message UserFortuneTreeInfoMsgReq {
  int64 user_id = 1;          // 请求用户的ID
}

/**
 * 用户发财树响应
 * 包含用户的发财树信息
 */
message UserFortuneTreeInfoMsgReply {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
  int64 vip_level_id = 3; // VIP等级ID，影响金币产出和生产周期
  int64 cycle_start_time = 4; // 当前周期开始时间（时间戳，秒）
  int32 is_ready_to_harvest = 5; // 是否可以收获标志：1-不可收获，2-可收获
  int64 last_harvest_time = 6;  // 上次收获时间（时间戳，秒）
  int64 next_harvest_time = 7; // 下次可收获时间（时间戳，秒）
  int64 cycle_harvested_icon = 8; // 当前周期可收获的金币
  int64 total_harvested = 9; // 历史总收获金币数量统计
  int64 created_at = 10; // 发财树创建时间（时间戳，秒）
  int64 updated_at = 11; // 发财树信息最后更新时间（时间戳，秒）
}


message UserOpsFortuneTreeMsgReq {
  int64 id = 1; // 发财树唯一标识ID
  int64 user_id = 2; // 用户ID，唯一约束保证每个用户只有一棵树
}

message UserOpsFortuneTreeMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}



// =========================================
// VIP等级相关消息
// =========================================
/**
 * VIP等级信息请求
 * 包含系统中所有VIP等级的配置信息
 */
message VipLevelInfoMsgReq {
}


/**
 * VIP等级信息响应
 * 包含系统中所有VIP等级的配置信息
 */
message VipLevelInfoMsgReply {
  repeated VIPLevelInfo rows = 1;  // VIP等级信息列表
}

/**
 * VIP等级详细信息
 * 表示单个VIP等级的配置和奖励信息
 */
message VIPLevelInfo {
  int64 id = 1;                          // 等级ID
  string level_name = 2;                 // 等级名称
  int64 level_val = 3;                   // 等级值
  int64 is_default_level = 4;            // 是否为默认等级
  int64 growth_value = 5;                // 升级所需成长值
  int64 upgrade_reward_fertilizer_num = 6;    // 升级奖励肥料数量
  int64 upgrade_reward_tree_maturity_period = 7;  // 升级奖励树木成熟周期
  int64 upgrade_reward_tree_num = 8;     // 升级奖励树木数量
  string remarks = 9;                    // 备注说明
  int64 is_enabled = 10;                 // 是否启用
}

// =========================================
// 币商转换提现相关消息
// =========================================

// 获取币商列表请求
message GetMerchantListMsgReq {
  int64 user_id = 1;          // 请求用户的ID
  int64 page = 2;             // 页码，从1开始
  int64 page_size = 3;        // 每页数量
  string merchant_name = 4; // 币商名称（可选过滤条件）
}

// 获取币商列表响应
message GetMerchantListMsgReply {
  int64 page = 1;
  int64 page_size = 2;
  int64 total = 3;
  int64 total_page = 4;
  repeated MerchantInfo rows = 5;  // 用户排名列表
}

// 币商信息
message MerchantInfo {
  int64 id = 1; // 币商ID
  string name = 2; // 币商名称
  string logo = 3; // 币商LOGO
  int64 exchange_rate = 4; // 汇率(代币->USDT)
  string protocol = 5; // 币商协议
  int64 balance = 6; // 库存余额(USDT)
}

// 币商汇率请求
message MerchantExchangeRateMsgReq {
  int64 merchant_id = 1; // 币商ID
  int64 user_icon = 2; // 平台金币
  int64 user_id = 3; // 用户ID
}

// 币商汇率响应
message MerchantExchangeRateMsgReply {
  int64 cover_ustd = 1; // 换成的ustd
  int64 current_ustd = 2; // 总ustd
}

message SubmitForRedemptionMsgReq{
  int64 merchant_id = 1; // 币商ID
  int64 user_icon = 2; // 平台金币
  int64 user_id = 3; // 用户ID
}
message SubmitForRedemptionMsgReply{
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}



// =========================================
// 充值提现相关消息
// =========================================

// 充值通道列表响应
message RechargeChannelsInfoMsgReq {

}

// 充值通道列表响应
message RechargeChannelsInfoMsgReply {
  repeated RechargeChannel rows = 4;  // 充值通道列表
}

// 充值通道信息
message RechargeChannel {
  string currency_code = 7;                 // 币种
  string recharge_channel_code = 8;         // 充值通道编码
}

message UserRechargeInfoMsgReq {
  int64 user_id = 1;          // 用户ID
  int64 amount = 2;           // 充值金额(分) 100 = 1元（大于0的整数）
  string channel_code = 4;  // 通道
  string extra = 9;           // 扩展域

}

message UserRechargeInfoMsgReply {
  string pay_url = 4;         // 支付URL
}


message UserWithdrawInfoMsgReq {
  int64 user_id = 1;          // 用户ID
  int64 amount = 2;           // 提现金额(分)
  int64 withdraw_account_id = 5;       //提现账号
  string extra = 11;          // 扩展域
}

message UserWithdrawInfoMsgReply {
  int64 code = 1;                     // 响应状态码  200 正常
  string msg = 2;                     // 响应消息    success 成功
}


message UserWithdrawChannelInfoMsgReq {
  int64 user_id = 1;          // 用户ID
}

message UserWithdrawChannelInfoMsgReply {
  repeated WithdrawChannel rows = 4;  // 提现通道列表
}

// 提现通道信息
message WithdrawChannel {
  int64 withdraw_account_id = 1;       //提现账号
  int64 user_id = 2;       //用户ID
  string currency_code = 3;                 // 币种
  string account = 4;                 //  提现账号/地址
  int64 account_type = 5;                 // 账号类型 1:手机号 2:银行卡 3:PIX 4:电子钱包
  int64 verify_status = 6;                 //  验证状态 1:已验证 2:验证失败 3:未验证
  int64 is_default = 7;                 //  是否默认账户 1:是 2:否
}


// =========================================
// 通知相关消息
// =========================================
// UserNotification 用户通知结构---公告信息body
// UserNotification represents user notification structure USER_NOTIFICATION_INFO_MSG
message UserNotificationInfoMsgReply {
  int64 user_id = 1;  // 用户ID | User ID
  NotificationType type = 2;  // 通知类型 | Notification type
  NotificationSubType sub_type = 3;  // 通知子类型 | Notification subtype
  string title = 4;  // 通知标题 | Notification title
  string content = 5;  // 通知内容 | Notification content
  map<string, string> params = 6;  // 通知参数 | Notification parameters
  int64 created_at = 7;  // 创建时间 | Creation timestamp
}

// NotificationType 定义通知类型枚举
// NotificationType defines notification type enum
enum NotificationType {
  NOTIFICATION_TYPE_UNSPECIFIED = 0;  // 未指定 | Unspecified
  NOTIFICATION_TYPE_DAILY_GREETING = 1000;  // 日常问候 | Daily greeting
  NOTIFICATION_TYPE_OPERATION_TIP = 2000;  // 操作提示 | Operation tip
  NOTIFICATION_TYPE_FRIEND_INFO = 3000;  // 好友信息 | Friend info
  NOTIFICATION_TYPE_SYSTEM_INFO = 4000;  // 系统信息 | System info
}

// NotificationSubType 定义通知子类型枚举
// NotificationSubType defines notification subtype enum
enum NotificationSubType {
  NOTIFICATION_SUB_TYPE_UNSPECIFIED = 0;  // 未指定 | Unspecified

  // 日常问候子类型 (1000-1999) | Daily greeting subtypes (1000-1999)
  NOTIFICATION_SUB_TYPE_MORNING = 1001;  // 早上问候 | Morning greeting
  NOTIFICATION_SUB_TYPE_NOON = 1002;  // 中午问候 | Noon greeting
  NOTIFICATION_SUB_TYPE_EVENING = 1003;  // 晚上问候 | Evening greeting
  NOTIFICATION_SUB_TYPE_RETURN_PLAYER = 1004;  // 老玩家回归问候 | Returning player greeting

  // 操作提示子类型 (2000-2999) | Operation tip subtypes (2000-2999)
  NOTIFICATION_SUB_TYPE_CROP_NEED_WATER = 2001;  // 农作物待浇水 | Crop needs water
  NOTIFICATION_SUB_TYPE_CROP_CAN_HARVEST = 2002;  // 农作物待收获 | Crop can be harvested
  NOTIFICATION_SUB_TYPE_SEED_WAIT_PLANT = 2003;  // 种子待种植 | Seed waiting to be planted
  NOTIFICATION_SUB_TYPE_CROP_NEED_FERTILIZE = 2004;  // 农作物待施肥 | Crop needs fertilizer
  NOTIFICATION_SUB_TYPE_BUY_SEED = 2005;  // 购买种子 | Buy seed

  // 好友信息子类型 (3000-3999) | Friend info subtypes (3000-3999)
  NOTIFICATION_SUB_TYPE_FRIEND_REGISTER = 3001;  // 新好友注册 | New friend registered
  NOTIFICATION_SUB_TYPE_FRIEND_WATERED = 3002;  // 好友浇水 | Friend watered
  NOTIFICATION_SUB_TYPE_FRIEND_VISIT = 3003;  // 好友查看农场 | Friend visited farm
  NOTIFICATION_SUB_TYPE_FRIEND_HARVEST = 3004;  // 好友收获 | Friend harvested
  NOTIFICATION_SUB_TYPE_FRIEND_BUY_SEED = 3005;  // 好友购买种子 | Friend bought seed
  NOTIFICATION_SUB_TYPE_FRIEND_PLANT = 3006;  // 好友种植 | Friend planted

  // 系统信息子类型 (4000-4999) | System info subtypes (4000-4999)
  NOTIFICATION_SUB_TYPE_DEPOSIT_SUCCESS = 4001;  // 存款成功 | Deposit successful
  NOTIFICATION_SUB_TYPE_WITHDRAW_AVAILABLE = 4002;  // 可以提款 | Withdrawal available
  NOTIFICATION_SUB_TYPE_VIP_UPGRADE = 4003;  // VIP等级提升 | VIP level upgraded
  NOTIFICATION_SUB_TYPE_RANKING_BREAK = 4004;  // 打破排行榜记录 | Ranking record broken
}

// UserNotification 用户通知用户余额变动结构
message UserBalanceInfoMsgReply {
  int64 id = 1;                  // 主键ID
  WalletType wallet_type = 2;    // 钱包类型
  int64 user_id = 3;             // 用户ID
  int64 balance = 4;             // 可用余额
  int64 locked_balance = 5;      // 锁定余额（如提现中等）
}

// UserLandStatusInfoMsgReply 用户通知用户土地变动结构
message UserLandStatusInfoMsgReply {
  int64 user_id = 1;             // 用户ID
  int64 land_id = 2;                  // 土地ID
  int64 land_status = 3;             // 土地状态
  int64 land_position = 4;             // 土地坐标
  int64 plant_id = 5;             // 种植ID
  HarvestStatus is_harvested = 6;  // 是否已收获
  int64 harvested_at = 7;          // 收获时间（Unix时间戳）
  int64 coins_earned = 8;          // 作物产生的金币数量
  GrowthStatus status = 9;         // 生长状态
}




// SendMessage 代表消息结构
message SendMessage {
  int64 message_id = 1;      // 消息ID
  repeated int64 user_ids = 2;  // 目标用户ID列表
  bytes body = 3;            // Proto序列化后的数据
}
