// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: farm.proto

package farminnerservice

import (
	"context"

	"farms-rpc-server/app/farm/pb/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FarmReply = v1.FarmReply
	FarmReq   = v1.FarmReq

	FarmInnerService interface {
		Test(ctx context.Context, in *FarmReq, opts ...grpc.CallOption) (*FarmReply, error)
	}

	defaultFarmInnerService struct {
		cli zrpc.Client
	}
)

func NewFarmInnerService(cli zrpc.Client) FarmInnerService {
	return &defaultFarmInnerService{
		cli: cli,
	}
}

func (m *defaultFarmInnerService) Test(ctx context.Context, in *FarmReq, opts ...grpc.CallOption) (*FarmReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
