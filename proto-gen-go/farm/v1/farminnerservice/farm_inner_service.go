// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: farm.proto

package farminnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/farm/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CropsInfoListMsgReply    = v1.CropsInfoListMsgReply
	CropsInfoListMsgReq      = v1.CropsInfoListMsgReq
	CropsProductInfo         = v1.CropsProductInfo
	CropsProductInfoMsgReply = v1.CropsProductInfoMsgReply
	CropsProductInfoMsgReq   = v1.CropsProductInfoMsgReq
	FarmReply                = v1.FarmReply
	FarmReq                  = v1.FarmReq
	FarmsStoreInfoMsgReply   = v1.FarmsStoreInfoMsgReply
	FarmsStoreInfoMsgReq     = v1.FarmsStoreInfoMsgReq
	MsgReply                 = v1.MsgReply
	MsgReq                   = v1.MsgReq
	StoreInfo                = v1.StoreInfo
	StoreProductInfoMsgReply = v1.StoreProductInfoMsgReply
	StoreProductInfoMsgReq   = v1.StoreProductInfoMsgReq

	FarmInnerService interface {
		// 农场商店信息
		FarmsStoreInfo(ctx context.Context, in *FarmsStoreInfoMsgReq, opts ...grpc.CallOption) (*FarmsStoreInfoMsgReply, error)
		// 单个商品信息
		StoreProductInfo(ctx context.Context, in *StoreProductInfoMsgReq, opts ...grpc.CallOption) (*StoreProductInfoMsgReply, error)
		// 更新商品库存
		UpdateProductStock(ctx context.Context, in *StoreProductInfoMsgReq, opts ...grpc.CallOption) (*FarmReply, error)
		// 获取种子信息
		CropsProductInfo(ctx context.Context, in *CropsProductInfoMsgReq, opts ...grpc.CallOption) (*CropsProductInfoMsgReply, error)
		// 获取种子列表
		CropsInfoList(ctx context.Context, in *CropsInfoListMsgReq, opts ...grpc.CallOption) (*CropsInfoListMsgReply, error)
	}

	defaultFarmInnerService struct {
		cli zrpc.Client
	}
)

func NewFarmInnerService(cli zrpc.Client) FarmInnerService {
	return &defaultFarmInnerService{
		cli: cli,
	}
}

// 农场商店信息
func (m *defaultFarmInnerService) FarmsStoreInfo(ctx context.Context, in *FarmsStoreInfoMsgReq, opts ...grpc.CallOption) (*FarmsStoreInfoMsgReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.FarmsStoreInfo(ctx, in, opts...)
}

// 单个商品信息
func (m *defaultFarmInnerService) StoreProductInfo(ctx context.Context, in *StoreProductInfoMsgReq, opts ...grpc.CallOption) (*StoreProductInfoMsgReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.StoreProductInfo(ctx, in, opts...)
}

// 更新商品库存
func (m *defaultFarmInnerService) UpdateProductStock(ctx context.Context, in *StoreProductInfoMsgReq, opts ...grpc.CallOption) (*FarmReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.UpdateProductStock(ctx, in, opts...)
}

// 获取种子信息
func (m *defaultFarmInnerService) CropsProductInfo(ctx context.Context, in *CropsProductInfoMsgReq, opts ...grpc.CallOption) (*CropsProductInfoMsgReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.CropsProductInfo(ctx, in, opts...)
}

// 获取种子列表
func (m *defaultFarmInnerService) CropsInfoList(ctx context.Context, in *CropsInfoListMsgReq, opts ...grpc.CallOption) (*CropsInfoListMsgReply, error) {
	client := v1.NewFarmInnerServiceClient(m.cli.Conn())
	return client.CropsInfoList(ctx, in, opts...)
}
