// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: farm.proto

package farmservice

import (
	"context"

	"farms-rpc-server/app/farm/pb/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FarmReply = v1.FarmReply
	FarmReq   = v1.FarmReq

	FarmService interface {
		Test(ctx context.Context, in *FarmReq, opts ...grpc.CallOption) (*FarmReply, error)
	}

	defaultFarmService struct {
		cli zrpc.Client
	}
)

func NewFarmService(cli zrpc.Client) FarmService {
	return &defaultFarmService{
		cli: cli,
	}
}

func (m *defaultFarmService) Test(ctx context.Context, in *FarmReq, opts ...grpc.CallOption) (*FarmReply, error) {
	client := v1.NewFarmServiceClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
