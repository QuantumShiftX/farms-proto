// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: manage/v1/manage.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ManageReq) Reset() {
	*x = ManageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageReq) ProtoMessage() {}

func (x *ManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageReq.ProtoReflect.Descriptor instead.
func (*ManageReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{0}
}

type ManageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ManageReply) Reset() {
	*x = ManageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageReply) ProtoMessage() {}

func (x *ManageReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageReply.ProtoReflect.Descriptor instead.
func (*ManageReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{1}
}

type SendCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerifyType int64  `protobuf:"varint,1,opt,name=verify_type,json=verifyType,proto3" json:"verify_type,omitempty"` // 验证类型：2-短信，3-邮件
	Account    string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`                          // 手机号或者邮箱
}

func (x *SendCaptchaReq) Reset() {
	*x = SendCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCaptchaReq) ProtoMessage() {}

func (x *SendCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCaptchaReq.ProtoReflect.Descriptor instead.
func (*SendCaptchaReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{2}
}

func (x *SendCaptchaReq) GetVerifyType() int64 {
	if x != nil {
		return x.VerifyType
	}
	return 0
}

func (x *SendCaptchaReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type GetAgreementReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgreement string `protobuf:"bytes,1,opt,name=user_agreement,json=userAgreement,proto3" json:"user_agreement,omitempty"` // 用户协议
	PrivacyNotice string `protobuf:"bytes,2,opt,name=privacy_notice,json=privacyNotice,proto3" json:"privacy_notice,omitempty"` // 隐私声明
}

func (x *GetAgreementReply) Reset() {
	*x = GetAgreementReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgreementReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgreementReply) ProtoMessage() {}

func (x *GetAgreementReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgreementReply.ProtoReflect.Descriptor instead.
func (*GetAgreementReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{3}
}

func (x *GetAgreementReply) GetUserAgreement() string {
	if x != nil {
		return x.UserAgreement
	}
	return ""
}

func (x *GetAgreementReply) GetPrivacyNotice() string {
	if x != nil {
		return x.PrivacyNotice
	}
	return ""
}

type GetApkAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageAddr string `protobuf:"bytes,1,opt,name=page_addr,json=pageAddr,proto3" json:"page_addr,omitempty"` // 下载地址
	ApkAddr  string `protobuf:"bytes,2,opt,name=apk_addr,json=apkAddr,proto3" json:"apk_addr,omitempty"`    // 下载地址
}

func (x *GetApkAddressReply) Reset() {
	*x = GetApkAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApkAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApkAddressReply) ProtoMessage() {}

func (x *GetApkAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApkAddressReply.ProtoReflect.Descriptor instead.
func (*GetApkAddressReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{4}
}

func (x *GetApkAddressReply) GetPageAddr() string {
	if x != nil {
		return x.PageAddr
	}
	return ""
}

func (x *GetApkAddressReply) GetApkAddr() string {
	if x != nil {
		return x.ApkAddr
	}
	return ""
}

type GetCustomerServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetCustomerServiceReq) Reset() {
	*x = GetCustomerServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerServiceReq) ProtoMessage() {}

func (x *GetCustomerServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerServiceReq.ProtoReflect.Descriptor instead.
func (*GetCustomerServiceReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{5}
}

func (x *GetCustomerServiceReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type GetCustomerServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Faqs     []*FaqCategoryItem `protobuf:"bytes,1,rep,name=faqs,proto3" json:"faqs,omitempty"`
	Services []*CustomerService `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *GetCustomerServiceReply) Reset() {
	*x = GetCustomerServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerServiceReply) ProtoMessage() {}

func (x *GetCustomerServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerServiceReply.ProtoReflect.Descriptor instead.
func (*GetCustomerServiceReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{6}
}

func (x *GetCustomerServiceReply) GetFaqs() []*FaqCategoryItem {
	if x != nil {
		return x.Faqs
	}
	return nil
}

func (x *GetCustomerServiceReply) GetServices() []*CustomerService {
	if x != nil {
		return x.Services
	}
	return nil
}

// FAQ分类
type FaqCategoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryName string     `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Sort         int64      `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"` // 排序序号
	FaqItem      []*FaqItem `protobuf:"bytes,4,rep,name=faq_item,json=faqItem,proto3" json:"faq_item,omitempty"`
}

func (x *FaqCategoryItem) Reset() {
	*x = FaqCategoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaqCategoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaqCategoryItem) ProtoMessage() {}

func (x *FaqCategoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaqCategoryItem.ProtoReflect.Descriptor instead.
func (*FaqCategoryItem) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{7}
}

func (x *FaqCategoryItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FaqCategoryItem) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *FaqCategoryItem) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FaqCategoryItem) GetFaqItem() []*FaqItem {
	if x != nil {
		return x.FaqItem
	}
	return nil
}

// FAQ问答项目
type FaqItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId int64  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Question   string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Answer     string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *FaqItem) Reset() {
	*x = FaqItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaqItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaqItem) ProtoMessage() {}

func (x *FaqItem) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaqItem.ProtoReflect.Descriptor instead.
func (*FaqItem) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{8}
}

func (x *FaqItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FaqItem) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *FaqItem) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *FaqItem) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

// 客户服务
type CustomerService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceType int32  `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ServiceLink string `protobuf:"bytes,3,opt,name=service_link,json=serviceLink,proto3" json:"service_link,omitempty"`
	ServiceLogo string `protobuf:"bytes,4,opt,name=service_logo,json=serviceLogo,proto3" json:"service_logo,omitempty"`
}

func (x *CustomerService) Reset() {
	*x = CustomerService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerService) ProtoMessage() {}

func (x *CustomerService) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerService.ProtoReflect.Descriptor instead.
func (*CustomerService) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{9}
}

func (x *CustomerService) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerService) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *CustomerService) GetServiceLink() string {
	if x != nil {
		return x.ServiceLink
	}
	return ""
}

func (x *CustomerService) GetServiceLogo() string {
	if x != nil {
		return x.ServiceLogo
	}
	return ""
}

// VipLevel 代表 VIP 等级配置
type VipLevelDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                        // VIP 等级 ID
	LevelName                       string `protobuf:"bytes,2,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                                                                          // 等级名称
	LevelVal                        int64  `protobuf:"varint,3,opt,name=level_val,json=levelVal,proto3" json:"level_val,omitempty"`                                                                            // 等级值（通常表示该等级的编号）
	IsDefaultLevel                  int64  `protobuf:"varint,4,opt,name=is_default_level,json=isDefaultLevel,proto3" json:"is_default_level,omitempty"`                                                        // 是否为默认等级（1：是，2：否）
	GrowthValue                     int64  `protobuf:"varint,5,opt,name=growth_value,json=growthValue,proto3" json:"growth_value,omitempty"`                                                                   // 达到该等级所需的成长值
	UpgradeRewardFertilizerNum      int64  `protobuf:"varint,6,opt,name=upgrade_reward_fertilizer_num,json=upgradeRewardFertilizerNum,proto3" json:"upgrade_reward_fertilizer_num,omitempty"`                  // 升级奖励的肥料数量
	UpgradeRewardTreeMaturityPeriod int64  `protobuf:"varint,7,opt,name=upgrade_reward_tree_maturity_period,json=upgradeRewardTreeMaturityPeriod,proto3" json:"upgrade_reward_tree_maturity_period,omitempty"` // 奖励树的成熟周期（小时）
	UpgradeRewardTreeNum            int64  `protobuf:"varint,8,opt,name=upgrade_reward_tree_num,json=upgradeRewardTreeNum,proto3" json:"upgrade_reward_tree_num,omitempty"`                                    // 获得的发财树代币数量(收获)
	Remarks                         string `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks,omitempty"`                                                                                               // 等级的备注信息
	IsEnabled                       int64  `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`                                                                        // 等级是否启用（1：启用，2：禁用）
}

func (x *VipLevelDetail) Reset() {
	*x = VipLevelDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLevelDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelDetail) ProtoMessage() {}

func (x *VipLevelDetail) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelDetail.ProtoReflect.Descriptor instead.
func (*VipLevelDetail) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{10}
}

func (x *VipLevelDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipLevelDetail) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *VipLevelDetail) GetLevelVal() int64 {
	if x != nil {
		return x.LevelVal
	}
	return 0
}

func (x *VipLevelDetail) GetIsDefaultLevel() int64 {
	if x != nil {
		return x.IsDefaultLevel
	}
	return 0
}

func (x *VipLevelDetail) GetGrowthValue() int64 {
	if x != nil {
		return x.GrowthValue
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardFertilizerNum() int64 {
	if x != nil {
		return x.UpgradeRewardFertilizerNum
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardTreeMaturityPeriod() int64 {
	if x != nil {
		return x.UpgradeRewardTreeMaturityPeriod
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardTreeNum() int64 {
	if x != nil {
		return x.UpgradeRewardTreeNum
	}
	return 0
}

func (x *VipLevelDetail) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *VipLevelDetail) GetIsEnabled() int64 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

type DefaultVipInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipInfo *VipLevelDetail `protobuf:"bytes,1,opt,name=vip_info,json=vipInfo,proto3" json:"vip_info,omitempty"`
}

func (x *DefaultVipInfoReply) Reset() {
	*x = DefaultVipInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultVipInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultVipInfoReply) ProtoMessage() {}

func (x *DefaultVipInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultVipInfoReply.ProtoReflect.Descriptor instead.
func (*DefaultVipInfoReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{11}
}

func (x *DefaultVipInfoReply) GetVipInfo() *VipLevelDetail {
	if x != nil {
		return x.VipInfo
	}
	return nil
}

// SettingBaseInfo 代表所有设置的配置，包括基础设置和返利设置
type SettingBaseInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础设置
	InitialLand         int64  `protobuf:"varint,1,opt,name=initial_land,json=initialLand,proto3" json:"initial_land,omitempty"`                           // 初始土地配置配置总数（施肥总数）
	InitialCultivated   int64  `protobuf:"varint,2,opt,name=initial_cultivated,json=initialCultivated,proto3" json:"initial_cultivated,omitempty"`         // 初始土地配置（开垦的总数）
	FriendWateringTimes int64  `protobuf:"varint,3,opt,name=friend_watering_times,json=friendWateringTimes,proto3" json:"friend_watering_times,omitempty"` // 好友(自己)浇水次数
	DownloadPageLink    string `protobuf:"bytes,4,opt,name=download_page_link,json=downloadPageLink,proto3" json:"download_page_link,omitempty"`           // 下载页面链接
	DownloadApkLink     string `protobuf:"bytes,11,opt,name=download_apk_link,json=downloadApkLink,proto3" json:"download_apk_link,omitempty"`             // 下载apk链接
	NewUserInvitation   int64  `protobuf:"varint,5,opt,name=new_user_invitation,json=newUserInvitation,proto3" json:"new_user_invitation,omitempty"`       // 是否开启有新用户邀请 1 开启 2 关闭
	AboutPlatform       string `protobuf:"bytes,6,opt,name=about_platform,json=aboutPlatform,proto3" json:"about_platform,omitempty"`                      // 关于平台的描述
	IsRegisterVerify    int64  `protobuf:"varint,7,opt,name=is_register_verify,json=isRegisterVerify,proto3" json:"is_register_verify,omitempty"`          // 是否开启注册验证 1 开启 2 关闭
	// 返利设置
	RegistrationRewards *RegistrationRewards `protobuf:"bytes,8,opt,name=registration_rewards,json=registrationRewards,proto3" json:"registration_rewards,omitempty"` // 注册奖励
	DepositRewards      *DepositRewards      `protobuf:"bytes,9,opt,name=deposit_rewards,json=depositRewards,proto3" json:"deposit_rewards,omitempty"`                // 存款奖励
	CollectionRewards   *CollectionRewards   `protobuf:"bytes,10,opt,name=collection_rewards,json=collectionRewards,proto3" json:"collection_rewards,omitempty"`      // 收集奖励
	SettlementConfig    *SettlementConfig    `protobuf:"bytes,12,opt,name=settlement_config,json=settlementConfig,proto3" json:"settlement_config,omitempty"`         // 结算配置
}

func (x *SettingBaseInfoReply) Reset() {
	*x = SettingBaseInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingBaseInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingBaseInfoReply) ProtoMessage() {}

func (x *SettingBaseInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingBaseInfoReply.ProtoReflect.Descriptor instead.
func (*SettingBaseInfoReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{12}
}

func (x *SettingBaseInfoReply) GetInitialLand() int64 {
	if x != nil {
		return x.InitialLand
	}
	return 0
}

func (x *SettingBaseInfoReply) GetInitialCultivated() int64 {
	if x != nil {
		return x.InitialCultivated
	}
	return 0
}

func (x *SettingBaseInfoReply) GetFriendWateringTimes() int64 {
	if x != nil {
		return x.FriendWateringTimes
	}
	return 0
}

func (x *SettingBaseInfoReply) GetDownloadPageLink() string {
	if x != nil {
		return x.DownloadPageLink
	}
	return ""
}

func (x *SettingBaseInfoReply) GetDownloadApkLink() string {
	if x != nil {
		return x.DownloadApkLink
	}
	return ""
}

func (x *SettingBaseInfoReply) GetNewUserInvitation() int64 {
	if x != nil {
		return x.NewUserInvitation
	}
	return 0
}

func (x *SettingBaseInfoReply) GetAboutPlatform() string {
	if x != nil {
		return x.AboutPlatform
	}
	return ""
}

func (x *SettingBaseInfoReply) GetIsRegisterVerify() int64 {
	if x != nil {
		return x.IsRegisterVerify
	}
	return 0
}

func (x *SettingBaseInfoReply) GetRegistrationRewards() *RegistrationRewards {
	if x != nil {
		return x.RegistrationRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetDepositRewards() *DepositRewards {
	if x != nil {
		return x.DepositRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetCollectionRewards() *CollectionRewards {
	if x != nil {
		return x.CollectionRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetSettlementConfig() *SettlementConfig {
	if x != nil {
		return x.SettlementConfig
	}
	return nil
}

// RegistrationRewards 代表注册奖励配置
type RegistrationRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    int64 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                         // 是否启用注册奖励（1-启用，2-禁用）
	LandReward int64 `protobuf:"varint,2,opt,name=land_reward,json=landReward,proto3" json:"land_reward,omitempty"` // 土地奖励数量
	MaxRewards int64 `protobuf:"varint,3,opt,name=max_rewards,json=maxRewards,proto3" json:"max_rewards,omitempty"` // 最大奖励数量
}

func (x *RegistrationRewards) Reset() {
	*x = RegistrationRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistrationRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRewards) ProtoMessage() {}

func (x *RegistrationRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRewards.ProtoReflect.Descriptor instead.
func (*RegistrationRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{13}
}

func (x *RegistrationRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *RegistrationRewards) GetLandReward() int64 {
	if x != nil {
		return x.LandReward
	}
	return 0
}

func (x *RegistrationRewards) GetMaxRewards() int64 {
	if x != nil {
		return x.MaxRewards
	}
	return 0
}

// DepositRewards 代表存款奖励配置
type DepositRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled          int64 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                                           // 是否启用存款奖励（1-启用，2-禁用）
	Level1Percentage int64 `protobuf:"varint,2,opt,name=level1_percentage,json=level1Percentage,proto3" json:"level1_percentage,omitempty"` // 等级1存款奖励百分比
	Level2Percentage int64 `protobuf:"varint,3,opt,name=level2_percentage,json=level2Percentage,proto3" json:"level2_percentage,omitempty"` // 等级2存款奖励百分比
}

func (x *DepositRewards) Reset() {
	*x = DepositRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRewards) ProtoMessage() {}

func (x *DepositRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRewards.ProtoReflect.Descriptor instead.
func (*DepositRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{14}
}

func (x *DepositRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *DepositRewards) GetLevel1Percentage() int64 {
	if x != nil {
		return x.Level1Percentage
	}
	return 0
}

func (x *DepositRewards) GetLevel2Percentage() int64 {
	if x != nil {
		return x.Level2Percentage
	}
	return 0
}

// CollectionRewards 代表收集奖励配置
type CollectionRewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled          int64 `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                                           // 是否启用收集奖励（1-启用，2-禁用）
	Level1Percentage int64 `protobuf:"varint,2,opt,name=level1_percentage,json=level1Percentage,proto3" json:"level1_percentage,omitempty"` // 等级1收集奖励百分比
	Level2Percentage int64 `protobuf:"varint,3,opt,name=level2_percentage,json=level2Percentage,proto3" json:"level2_percentage,omitempty"` // 等级2收集奖励百分比
}

func (x *CollectionRewards) Reset() {
	*x = CollectionRewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRewards) ProtoMessage() {}

func (x *CollectionRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRewards.ProtoReflect.Descriptor instead.
func (*CollectionRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{15}
}

func (x *CollectionRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *CollectionRewards) GetLevel1Percentage() int64 {
	if x != nil {
		return x.Level1Percentage
	}
	return 0
}

func (x *CollectionRewards) GetLevel2Percentage() int64 {
	if x != nil {
		return x.Level2Percentage
	}
	return 0
}

// SettlementConfig 代表结算配置
type SettlementConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettlementTime string `protobuf:"bytes,1,opt,name=settlement_time,json=settlementTime,proto3" json:"settlement_time,omitempty"` // 结算时间，格式为HH:mm:ss
}

func (x *SettlementConfig) Reset() {
	*x = SettlementConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementConfig) ProtoMessage() {}

func (x *SettlementConfig) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementConfig.ProtoReflect.Descriptor instead.
func (*SettlementConfig) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{16}
}

func (x *SettlementConfig) GetSettlementTime() string {
	if x != nil {
		return x.SettlementTime
	}
	return ""
}

type GetNotificationsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeCode     string `protobuf:"bytes,1,opt,name=type_code,json=typeCode,proto3" json:"type_code,omitempty"`
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
}

func (x *GetNotificationsListReq) Reset() {
	*x = GetNotificationsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsListReq) ProtoMessage() {}

func (x *GetNotificationsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsListReq.ProtoReflect.Descriptor instead.
func (*GetNotificationsListReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{17}
}

func (x *GetNotificationsListReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *GetNotificationsListReq) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

type GetNotificationsListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications map[string]*NotificationInfo `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetNotificationsListReply) Reset() {
	*x = GetNotificationsListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsListReply) ProtoMessage() {}

func (x *GetNotificationsListReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsListReply.ProtoReflect.Descriptor instead.
func (*GetNotificationsListReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{18}
}

func (x *GetNotificationsListReply) GetNotifications() map[string]*NotificationInfo {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId   int64  `protobuf:"varint,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`      // 关联的通知模板ID
	TypeCode     string `protobuf:"bytes,2,opt,name=type_code,json=typeCode,proto3" json:"type_code,omitempty"`             // 类型编码，如 'daily_greeting'
	SubTypeCode  string `protobuf:"bytes,3,opt,name=sub_type_code,json=subTypeCode,proto3" json:"sub_type_code,omitempty"`  // 子类型编码，如 'morning'
	IsActive     int32  `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`            // 是否启用：1-启用，2-禁用
	Remarks      string `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`                               // 备注，描述模板的用途或说明
	Id           int64  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`                                        // 唯一标识ID
	LanguageCode string `protobuf:"bytes,8,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"` // 语言编码，如 'zh', 'en'
	Title        string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`                                   // 通知标题
	Content      string `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`                              // 通知内容
}

func (x *NotificationInfo) Reset() {
	*x = NotificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationInfo) ProtoMessage() {}

func (x *NotificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationInfo.ProtoReflect.Descriptor instead.
func (*NotificationInfo) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{19}
}

func (x *NotificationInfo) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *NotificationInfo) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *NotificationInfo) GetSubTypeCode() string {
	if x != nil {
		return x.SubTypeCode
	}
	return ""
}

func (x *NotificationInfo) GetIsActive() int32 {
	if x != nil {
		return x.IsActive
	}
	return 0
}

func (x *NotificationInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *NotificationInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotificationInfo) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *NotificationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetDownloadAddrReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageAddr string `protobuf:"bytes,1,opt,name=page_addr,json=pageAddr,proto3" json:"page_addr,omitempty"` // 下载地址
	ApkAddr  string `protobuf:"bytes,2,opt,name=apk_addr,json=apkAddr,proto3" json:"apk_addr,omitempty"`    // 下载地址
}

func (x *GetDownloadAddrReply) Reset() {
	*x = GetDownloadAddrReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadAddrReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadAddrReply) ProtoMessage() {}

func (x *GetDownloadAddrReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadAddrReply.ProtoReflect.Descriptor instead.
func (*GetDownloadAddrReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{20}
}

func (x *GetDownloadAddrReply) GetPageAddr() string {
	if x != nil {
		return x.PageAddr
	}
	return ""
}

func (x *GetDownloadAddrReply) GetApkAddr() string {
	if x != nil {
		return x.ApkAddr
	}
	return ""
}

type GetDesignatedVipInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipLevelId int64 `protobuf:"varint,1,opt,name=vip_level_id,json=vipLevelId,proto3" json:"vip_level_id,omitempty"`
}

func (x *GetDesignatedVipInfoReq) Reset() {
	*x = GetDesignatedVipInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDesignatedVipInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDesignatedVipInfoReq) ProtoMessage() {}

func (x *GetDesignatedVipInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDesignatedVipInfoReq.ProtoReflect.Descriptor instead.
func (*GetDesignatedVipInfoReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{21}
}

func (x *GetDesignatedVipInfoReq) GetVipLevelId() int64 {
	if x != nil {
		return x.VipLevelId
	}
	return 0
}

type DesignatedVipInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipInfo *VipLevelDetail `protobuf:"bytes,1,opt,name=vip_info,json=vipInfo,proto3" json:"vip_info,omitempty"`
}

func (x *DesignatedVipInfoReply) Reset() {
	*x = DesignatedVipInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DesignatedVipInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesignatedVipInfoReply) ProtoMessage() {}

func (x *DesignatedVipInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesignatedVipInfoReply.ProtoReflect.Descriptor instead.
func (*DesignatedVipInfoReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{22}
}

func (x *DesignatedVipInfoReply) GetVipInfo() *VipLevelDetail {
	if x != nil {
		return x.VipInfo
	}
	return nil
}

type FarmAgreementInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FarmAgreementInfoMsgReq) Reset() {
	*x = FarmAgreementInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmAgreementInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmAgreementInfoMsgReq) ProtoMessage() {}

func (x *FarmAgreementInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmAgreementInfoMsgReq.ProtoReflect.Descriptor instead.
func (*FarmAgreementInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{23}
}

type FarmAgreementInfoMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgreement   string `protobuf:"bytes,1,opt,name=user_agreement,json=userAgreement,proto3" json:"user_agreement,omitempty"`       // 用户协议
	PrivacyNotice   string `protobuf:"bytes,2,opt,name=privacy_notice,json=privacyNotice,proto3" json:"privacy_notice,omitempty"`       // 隐私声明
	AboutUs         string `protobuf:"bytes,3,opt,name=about_us,json=aboutUs,proto3" json:"about_us,omitempty"`                         // 关于我们
	CustomerService string `protobuf:"bytes,4,opt,name=customer_service,json=customerService,proto3" json:"customer_service,omitempty"` // 客服&faq
}

func (x *FarmAgreementInfoMsgReply) Reset() {
	*x = FarmAgreementInfoMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FarmAgreementInfoMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmAgreementInfoMsgReply) ProtoMessage() {}

func (x *FarmAgreementInfoMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmAgreementInfoMsgReply.ProtoReflect.Descriptor instead.
func (*FarmAgreementInfoMsgReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{24}
}

func (x *FarmAgreementInfoMsgReply) GetUserAgreement() string {
	if x != nil {
		return x.UserAgreement
	}
	return ""
}

func (x *FarmAgreementInfoMsgReply) GetPrivacyNotice() string {
	if x != nil {
		return x.PrivacyNotice
	}
	return ""
}

func (x *FarmAgreementInfoMsgReply) GetAboutUs() string {
	if x != nil {
		return x.AboutUs
	}
	return ""
}

func (x *FarmAgreementInfoMsgReply) GetCustomerService() string {
	if x != nil {
		return x.CustomerService
	}
	return ""
}

type VipLevelInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VipLevelInfoMsgReq) Reset() {
	*x = VipLevelInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLevelInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelInfoMsgReq) ProtoMessage() {}

func (x *VipLevelInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelInfoMsgReq.ProtoReflect.Descriptor instead.
func (*VipLevelInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{25}
}

// *
// 商店信息响应
// 包含商店内可购买的商品列表
type VipLevelInfoMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*VIPLevelInfo `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"` // 商品信息列表
}

func (x *VipLevelInfoMsgReply) Reset() {
	*x = VipLevelInfoMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLevelInfoMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelInfoMsgReply) ProtoMessage() {}

func (x *VipLevelInfoMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelInfoMsgReply.ProtoReflect.Descriptor instead.
func (*VipLevelInfoMsgReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{26}
}

func (x *VipLevelInfoMsgReply) GetRows() []*VIPLevelInfo {
	if x != nil {
		return x.Rows
	}
	return nil
}

// VIPLevel represents a VIP level configuration with its reward settings
type VIPLevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LevelName                       string `protobuf:"bytes,2,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`
	LevelVal                        int64  `protobuf:"varint,3,opt,name=level_val,json=levelVal,proto3" json:"level_val,omitempty"`
	IsDefaultLevel                  int64  `protobuf:"varint,4,opt,name=is_default_level,json=isDefaultLevel,proto3" json:"is_default_level,omitempty"`
	GrowthValue                     int64  `protobuf:"varint,5,opt,name=growth_value,json=growthValue,proto3" json:"growth_value,omitempty"`
	UpgradeRewardFertilizerNum      int64  `protobuf:"varint,6,opt,name=upgrade_reward_fertilizer_num,json=upgradeRewardFertilizerNum,proto3" json:"upgrade_reward_fertilizer_num,omitempty"`                  // 升级奖励肥料数量
	UpgradeRewardTreeMaturityPeriod int64  `protobuf:"varint,7,opt,name=upgrade_reward_tree_maturity_period,json=upgradeRewardTreeMaturityPeriod,proto3" json:"upgrade_reward_tree_maturity_period,omitempty"` // 升级奖励树木成熟周期 单位小时
	UpgradeRewardTreeNum            int64  `protobuf:"varint,8,opt,name=upgrade_reward_tree_num,json=upgradeRewardTreeNum,proto3" json:"upgrade_reward_tree_num,omitempty"`                                    // 升级奖励树木成熟周期 产生的金币数量
	Remarks                         string `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks,omitempty"`
	IsEnabled                       int64  `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
}

func (x *VIPLevelInfo) Reset() {
	*x = VIPLevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VIPLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VIPLevelInfo) ProtoMessage() {}

func (x *VIPLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VIPLevelInfo.ProtoReflect.Descriptor instead.
func (*VIPLevelInfo) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{27}
}

func (x *VIPLevelInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VIPLevelInfo) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *VIPLevelInfo) GetLevelVal() int64 {
	if x != nil {
		return x.LevelVal
	}
	return 0
}

func (x *VIPLevelInfo) GetIsDefaultLevel() int64 {
	if x != nil {
		return x.IsDefaultLevel
	}
	return 0
}

func (x *VIPLevelInfo) GetGrowthValue() int64 {
	if x != nil {
		return x.GrowthValue
	}
	return 0
}

func (x *VIPLevelInfo) GetUpgradeRewardFertilizerNum() int64 {
	if x != nil {
		return x.UpgradeRewardFertilizerNum
	}
	return 0
}

func (x *VIPLevelInfo) GetUpgradeRewardTreeMaturityPeriod() int64 {
	if x != nil {
		return x.UpgradeRewardTreeMaturityPeriod
	}
	return 0
}

func (x *VIPLevelInfo) GetUpgradeRewardTreeNum() int64 {
	if x != nil {
		return x.UpgradeRewardTreeNum
	}
	return 0
}

func (x *VIPLevelInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *VIPLevelInfo) GetIsEnabled() int64 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

type UserAnnouncementsInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserId   int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *UserAnnouncementsInfoMsgReq) Reset() {
	*x = UserAnnouncementsInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnnouncementsInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnnouncementsInfoMsgReq) ProtoMessage() {}

func (x *UserAnnouncementsInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnnouncementsInfoMsgReq.ProtoReflect.Descriptor instead.
func (*UserAnnouncementsInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{28}
}

func (x *UserAnnouncementsInfoMsgReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 公告列表响应
type UserAnnouncementsInfoMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total     int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage int64                `protobuf:"varint,4,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	Rows      []*AnnouncementsInfo `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *UserAnnouncementsInfoMsgReply) Reset() {
	*x = UserAnnouncementsInfoMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAnnouncementsInfoMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAnnouncementsInfoMsgReply) ProtoMessage() {}

func (x *UserAnnouncementsInfoMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAnnouncementsInfoMsgReply.ProtoReflect.Descriptor instead.
func (*UserAnnouncementsInfoMsgReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{29}
}

func (x *UserAnnouncementsInfoMsgReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReply) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReply) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *UserAnnouncementsInfoMsgReply) GetRows() []*AnnouncementsInfo {
	if x != nil {
		return x.Rows
	}
	return nil
}

type AnnouncementsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AnnouncementsInfo) Reset() {
	*x = AnnouncementsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementsInfo) ProtoMessage() {}

func (x *AnnouncementsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementsInfo.ProtoReflect.Descriptor instead.
func (*AnnouncementsInfo) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{30}
}

func (x *AnnouncementsInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AnnouncementsInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CurrencyInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *CurrencyInfoMsgReq) Reset() {
	*x = CurrencyInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyInfoMsgReq) ProtoMessage() {}

func (x *CurrencyInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyInfoMsgReq.ProtoReflect.Descriptor instead.
func (*CurrencyInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{31}
}

func (x *CurrencyInfoMsgReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 货币列表响应
type CurrencyInfoMsgReqReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*CurrencyInfo `protobuf:"bytes,5,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CurrencyInfoMsgReqReply) Reset() {
	*x = CurrencyInfoMsgReqReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyInfoMsgReqReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyInfoMsgReqReply) ProtoMessage() {}

func (x *CurrencyInfoMsgReqReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyInfoMsgReqReply.ProtoReflect.Descriptor instead.
func (*CurrencyInfoMsgReqReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{32}
}

func (x *CurrencyInfoMsgReqReply) GetRows() []*CurrencyInfo {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode    string `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencyFlagUrl string `protobuf:"bytes,2,opt,name=currency_flag_url,json=currencyFlagUrl,proto3" json:"currency_flag_url,omitempty"`
	ExchangeRate    string `protobuf:"bytes,3,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"` // 货币兑换USDT率
}

func (x *CurrencyInfo) Reset() {
	*x = CurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyInfo) ProtoMessage() {}

func (x *CurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyInfo.ProtoReflect.Descriptor instead.
func (*CurrencyInfo) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{33}
}

func (x *CurrencyInfo) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CurrencyInfo) GetCurrencyFlagUrl() string {
	if x != nil {
		return x.CurrencyFlagUrl
	}
	return ""
}

func (x *CurrencyInfo) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

type AgentRuleInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *AgentRuleInfoMsgReq) Reset() {
	*x = AgentRuleInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentRuleInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRuleInfoMsgReq) ProtoMessage() {}

func (x *AgentRuleInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRuleInfoMsgReq.ProtoReflect.Descriptor instead.
func (*AgentRuleInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{34}
}

func (x *AgentRuleInfoMsgReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AgentRuleInfoMsgReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositRules *DepositRewards    `protobuf:"bytes,1,opt,name=deposit_rules,json=depositRules,proto3" json:"deposit_rules,omitempty"` // 存款返佣规则
	HarvestRules *CollectionRewards `protobuf:"bytes,2,opt,name=harvest_rules,json=harvestRules,proto3" json:"harvest_rules,omitempty"` // 收获返佣规则
}

func (x *AgentRuleInfoMsgReply) Reset() {
	*x = AgentRuleInfoMsgReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manage_v1_manage_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentRuleInfoMsgReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRuleInfoMsgReply) ProtoMessage() {}

func (x *AgentRuleInfoMsgReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRuleInfoMsgReply.ProtoReflect.Descriptor instead.
func (*AgentRuleInfoMsgReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{35}
}

func (x *AgentRuleInfoMsgReply) GetDepositRules() *DepositRewards {
	if x != nil {
		return x.DepositRules
	}
	return nil
}

func (x *AgentRuleInfoMsgReply) GetHarvestRules() *CollectionRewards {
	if x != nil {
		return x.HarvestRules
	}
	return nil
}

var File_manage_v1_manage_proto protoreflect.FileDescriptor

var file_manage_v1_manage_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x22, 0x0b, 0x0a, 0x09, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x0d, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x4b, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22,
	0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x22, 0x3c, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x61, 0x71, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x61, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x66, 0x61, 0x71, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x89, 0x01, 0x0a, 0x0f, 0x46, 0x61, 0x71, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x08,
	0x66, 0x61, 0x71, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x71, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x66, 0x61, 0x71, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x6e, 0x0a, 0x07, 0x46,
	0x61, 0x71, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x0f,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0xaa, 0x03, 0x0a, 0x0e, 0x56, 0x69, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x4c, 0x0a, 0x23, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6d,
	0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x13, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08,
	0x76, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x76, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xa9, 0x05, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x61, 0x6e, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x6c, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x43, 0x75, 0x6c, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x6b, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x6e,
	0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x62, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x51, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x13,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x71,
	0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x31, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x22, 0x3b, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd9, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d, 0x0a, 0x12, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x22, 0x3b, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x46, 0x61, 0x72, 0x6d,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x46, 0x61, 0x72, 0x6d, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x55, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x22, 0x43, 0x0a, 0x14, 0x56,
	0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x49,
	0x50, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0xa8, 0x03, 0x0a, 0x0c, 0x56, 0x49, 0x50, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65, 0x72,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1a, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x4c, 0x0a,
	0x23, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x74,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x72,
	0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x66, 0x0a, 0x1b, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x43, 0x0a,
	0x11, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x17, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x22, 0x2e, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x9a, 0x01, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x68, 0x61,
	0x72, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x0c, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x32, 0xc2, 0x02,
	0x0a, 0x10, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x32, 0x89, 0x07, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x4e, 0x0a, 0x0c, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x72, 0x6d, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x61, 0x72, 0x6d, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_manage_v1_manage_proto_rawDescOnce sync.Once
	file_manage_v1_manage_proto_rawDescData = file_manage_v1_manage_proto_rawDesc
)

func file_manage_v1_manage_proto_rawDescGZIP() []byte {
	file_manage_v1_manage_proto_rawDescOnce.Do(func() {
		file_manage_v1_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_manage_v1_manage_proto_rawDescData)
	})
	return file_manage_v1_manage_proto_rawDescData
}

var file_manage_v1_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_manage_v1_manage_proto_goTypes = []interface{}{
	(*ManageReq)(nil),                     // 0: manage.v1.ManageReq
	(*ManageReply)(nil),                   // 1: manage.v1.ManageReply
	(*SendCaptchaReq)(nil),                // 2: manage.v1.SendCaptchaReq
	(*GetAgreementReply)(nil),             // 3: manage.v1.GetAgreementReply
	(*GetApkAddressReply)(nil),            // 4: manage.v1.GetApkAddressReply
	(*GetCustomerServiceReq)(nil),         // 5: manage.v1.GetCustomerServiceReq
	(*GetCustomerServiceReply)(nil),       // 6: manage.v1.GetCustomerServiceReply
	(*FaqCategoryItem)(nil),               // 7: manage.v1.FaqCategoryItem
	(*FaqItem)(nil),                       // 8: manage.v1.FaqItem
	(*CustomerService)(nil),               // 9: manage.v1.CustomerService
	(*VipLevelDetail)(nil),                // 10: manage.v1.VipLevelDetail
	(*DefaultVipInfoReply)(nil),           // 11: manage.v1.DefaultVipInfoReply
	(*SettingBaseInfoReply)(nil),          // 12: manage.v1.SettingBaseInfoReply
	(*RegistrationRewards)(nil),           // 13: manage.v1.RegistrationRewards
	(*DepositRewards)(nil),                // 14: manage.v1.DepositRewards
	(*CollectionRewards)(nil),             // 15: manage.v1.CollectionRewards
	(*SettlementConfig)(nil),              // 16: manage.v1.SettlementConfig
	(*GetNotificationsListReq)(nil),       // 17: manage.v1.GetNotificationsListReq
	(*GetNotificationsListReply)(nil),     // 18: manage.v1.GetNotificationsListReply
	(*NotificationInfo)(nil),              // 19: manage.v1.NotificationInfo
	(*GetDownloadAddrReply)(nil),          // 20: manage.v1.GetDownloadAddrReply
	(*GetDesignatedVipInfoReq)(nil),       // 21: manage.v1.GetDesignatedVipInfoReq
	(*DesignatedVipInfoReply)(nil),        // 22: manage.v1.DesignatedVipInfoReply
	(*FarmAgreementInfoMsgReq)(nil),       // 23: manage.v1.FarmAgreementInfoMsgReq
	(*FarmAgreementInfoMsgReply)(nil),     // 24: manage.v1.FarmAgreementInfoMsgReply
	(*VipLevelInfoMsgReq)(nil),            // 25: manage.v1.VipLevelInfoMsgReq
	(*VipLevelInfoMsgReply)(nil),          // 26: manage.v1.VipLevelInfoMsgReply
	(*VIPLevelInfo)(nil),                  // 27: manage.v1.VIPLevelInfo
	(*UserAnnouncementsInfoMsgReq)(nil),   // 28: manage.v1.UserAnnouncementsInfoMsgReq
	(*UserAnnouncementsInfoMsgReply)(nil), // 29: manage.v1.UserAnnouncementsInfoMsgReply
	(*AnnouncementsInfo)(nil),             // 30: manage.v1.AnnouncementsInfo
	(*CurrencyInfoMsgReq)(nil),            // 31: manage.v1.CurrencyInfoMsgReq
	(*CurrencyInfoMsgReqReply)(nil),       // 32: manage.v1.CurrencyInfoMsgReqReply
	(*CurrencyInfo)(nil),                  // 33: manage.v1.CurrencyInfo
	(*AgentRuleInfoMsgReq)(nil),           // 34: manage.v1.AgentRuleInfoMsgReq
	(*AgentRuleInfoMsgReply)(nil),         // 35: manage.v1.AgentRuleInfoMsgReply
	nil,                                   // 36: manage.v1.GetNotificationsListReply.NotificationsEntry
}
var file_manage_v1_manage_proto_depIdxs = []int32{
	7,  // 0: manage.v1.GetCustomerServiceReply.faqs:type_name -> manage.v1.FaqCategoryItem
	9,  // 1: manage.v1.GetCustomerServiceReply.services:type_name -> manage.v1.CustomerService
	8,  // 2: manage.v1.FaqCategoryItem.faq_item:type_name -> manage.v1.FaqItem
	10, // 3: manage.v1.DefaultVipInfoReply.vip_info:type_name -> manage.v1.VipLevelDetail
	13, // 4: manage.v1.SettingBaseInfoReply.registration_rewards:type_name -> manage.v1.RegistrationRewards
	14, // 5: manage.v1.SettingBaseInfoReply.deposit_rewards:type_name -> manage.v1.DepositRewards
	15, // 6: manage.v1.SettingBaseInfoReply.collection_rewards:type_name -> manage.v1.CollectionRewards
	16, // 7: manage.v1.SettingBaseInfoReply.settlement_config:type_name -> manage.v1.SettlementConfig
	36, // 8: manage.v1.GetNotificationsListReply.notifications:type_name -> manage.v1.GetNotificationsListReply.NotificationsEntry
	10, // 9: manage.v1.DesignatedVipInfoReply.vip_info:type_name -> manage.v1.VipLevelDetail
	27, // 10: manage.v1.VipLevelInfoMsgReply.rows:type_name -> manage.v1.VIPLevelInfo
	30, // 11: manage.v1.UserAnnouncementsInfoMsgReply.rows:type_name -> manage.v1.AnnouncementsInfo
	33, // 12: manage.v1.CurrencyInfoMsgReqReply.rows:type_name -> manage.v1.CurrencyInfo
	14, // 13: manage.v1.AgentRuleInfoMsgReply.deposit_rules:type_name -> manage.v1.DepositRewards
	15, // 14: manage.v1.AgentRuleInfoMsgReply.harvest_rules:type_name -> manage.v1.CollectionRewards
	19, // 15: manage.v1.GetNotificationsListReply.NotificationsEntry.value:type_name -> manage.v1.NotificationInfo
	2,  // 16: manage.v1.ManageApiService.SendCaptcha:input_type -> manage.v1.SendCaptchaReq
	0,  // 17: manage.v1.ManageApiService.GetAgreement:input_type -> manage.v1.ManageReq
	0,  // 18: manage.v1.ManageApiService.GetApkAddress:input_type -> manage.v1.ManageReq
	5,  // 19: manage.v1.ManageApiService.GetCustomerService:input_type -> manage.v1.GetCustomerServiceReq
	0,  // 20: manage.v1.ManageInnerService.GetDefaultVipInfo:input_type -> manage.v1.ManageReq
	21, // 21: manage.v1.ManageInnerService.GetDesignatedVipInfo:input_type -> manage.v1.GetDesignatedVipInfoReq
	0,  // 22: manage.v1.ManageInnerService.GetSettingBaseInfo:input_type -> manage.v1.ManageReq
	25, // 23: manage.v1.ManageInnerService.VipLevelInfo:input_type -> manage.v1.VipLevelInfoMsgReq
	17, // 24: manage.v1.ManageInnerService.GetNotificationsList:input_type -> manage.v1.GetNotificationsListReq
	0,  // 25: manage.v1.ManageInnerService.GetDownloadAddress:input_type -> manage.v1.ManageReq
	28, // 26: manage.v1.ManageInnerService.UserAnnouncements:input_type -> manage.v1.UserAnnouncementsInfoMsgReq
	23, // 27: manage.v1.ManageInnerService.GetFarmAgreement:input_type -> manage.v1.FarmAgreementInfoMsgReq
	31, // 28: manage.v1.ManageInnerService.GetCurrencyInfoMsg:input_type -> manage.v1.CurrencyInfoMsgReq
	34, // 29: manage.v1.ManageInnerService.GetAgentRuleInfoMsg:input_type -> manage.v1.AgentRuleInfoMsgReq
	1,  // 30: manage.v1.ManageApiService.SendCaptcha:output_type -> manage.v1.ManageReply
	3,  // 31: manage.v1.ManageApiService.GetAgreement:output_type -> manage.v1.GetAgreementReply
	4,  // 32: manage.v1.ManageApiService.GetApkAddress:output_type -> manage.v1.GetApkAddressReply
	6,  // 33: manage.v1.ManageApiService.GetCustomerService:output_type -> manage.v1.GetCustomerServiceReply
	11, // 34: manage.v1.ManageInnerService.GetDefaultVipInfo:output_type -> manage.v1.DefaultVipInfoReply
	22, // 35: manage.v1.ManageInnerService.GetDesignatedVipInfo:output_type -> manage.v1.DesignatedVipInfoReply
	12, // 36: manage.v1.ManageInnerService.GetSettingBaseInfo:output_type -> manage.v1.SettingBaseInfoReply
	26, // 37: manage.v1.ManageInnerService.VipLevelInfo:output_type -> manage.v1.VipLevelInfoMsgReply
	18, // 38: manage.v1.ManageInnerService.GetNotificationsList:output_type -> manage.v1.GetNotificationsListReply
	20, // 39: manage.v1.ManageInnerService.GetDownloadAddress:output_type -> manage.v1.GetDownloadAddrReply
	29, // 40: manage.v1.ManageInnerService.UserAnnouncements:output_type -> manage.v1.UserAnnouncementsInfoMsgReply
	24, // 41: manage.v1.ManageInnerService.GetFarmAgreement:output_type -> manage.v1.FarmAgreementInfoMsgReply
	32, // 42: manage.v1.ManageInnerService.GetCurrencyInfoMsg:output_type -> manage.v1.CurrencyInfoMsgReqReply
	35, // 43: manage.v1.ManageInnerService.GetAgentRuleInfoMsg:output_type -> manage.v1.AgentRuleInfoMsgReply
	30, // [30:44] is the sub-list for method output_type
	16, // [16:30] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_manage_v1_manage_proto_init() }
func file_manage_v1_manage_proto_init() {
	if File_manage_v1_manage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_manage_v1_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgreementReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApkAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaqCategoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaqItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLevelDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultVipInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingBaseInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegistrationRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadAddrReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDesignatedVipInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DesignatedVipInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmAgreementInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FarmAgreementInfoMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLevelInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLevelInfoMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VIPLevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAnnouncementsInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAnnouncementsInfoMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyInfoMsgReqReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentRuleInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manage_v1_manage_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentRuleInfoMsgReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manage_v1_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_manage_v1_manage_proto_goTypes,
		DependencyIndexes: file_manage_v1_manage_proto_depIdxs,
		MessageInfos:      file_manage_v1_manage_proto_msgTypes,
	}.Build()
	File_manage_v1_manage_proto = out.File
	file_manage_v1_manage_proto_rawDesc = nil
	file_manage_v1_manage_proto_goTypes = nil
	file_manage_v1_manage_proto_depIdxs = nil
}
