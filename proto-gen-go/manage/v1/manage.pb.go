// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: manage/v1/manage.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageReq) Reset() {
	*x = ManageReq{}
	mi := &file_manage_v1_manage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageReq) ProtoMessage() {}

func (x *ManageReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageReq.ProtoReflect.Descriptor instead.
func (*ManageReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{0}
}

type ManageReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageReply) Reset() {
	*x = ManageReply{}
	mi := &file_manage_v1_manage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageReply) ProtoMessage() {}

func (x *ManageReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageReply.ProtoReflect.Descriptor instead.
func (*ManageReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{1}
}

type SendCaptchaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VerifyType    int64                  `protobuf:"varint,1,opt,name=verify_type,json=verifyType,proto3" json:"verify_type,omitempty"` // 验证类型：2-短信，3-邮件
	Account       string                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`                          // 手机号或者邮箱
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCaptchaReq) Reset() {
	*x = SendCaptchaReq{}
	mi := &file_manage_v1_manage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCaptchaReq) ProtoMessage() {}

func (x *SendCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCaptchaReq.ProtoReflect.Descriptor instead.
func (*SendCaptchaReq) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{2}
}

func (x *SendCaptchaReq) GetVerifyType() int64 {
	if x != nil {
		return x.VerifyType
	}
	return 0
}

func (x *SendCaptchaReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type GetAgreementReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserAgreement string                 `protobuf:"bytes,1,opt,name=user_agreement,json=userAgreement,proto3" json:"user_agreement,omitempty"` // 用户协议
	PrivacyNotice string                 `protobuf:"bytes,2,opt,name=privacy_notice,json=privacyNotice,proto3" json:"privacy_notice,omitempty"` // 隐私声明
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgreementReply) Reset() {
	*x = GetAgreementReply{}
	mi := &file_manage_v1_manage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgreementReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgreementReply) ProtoMessage() {}

func (x *GetAgreementReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgreementReply.ProtoReflect.Descriptor instead.
func (*GetAgreementReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{3}
}

func (x *GetAgreementReply) GetUserAgreement() string {
	if x != nil {
		return x.UserAgreement
	}
	return ""
}

func (x *GetAgreementReply) GetPrivacyNotice() string {
	if x != nil {
		return x.PrivacyNotice
	}
	return ""
}

// VipLevel 代表 VIP 等级配置
type VipLevelDetail struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	Id                              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                        // VIP 等级 ID
	LevelName                       string                 `protobuf:"bytes,2,opt,name=level_name,json=levelName,proto3" json:"level_name,omitempty"`                                                                          // 等级名称
	LevelVal                        int64                  `protobuf:"varint,3,opt,name=level_val,json=levelVal,proto3" json:"level_val,omitempty"`                                                                            // 等级值（通常表示该等级的编号）
	IsDefaultLevel                  int64                  `protobuf:"varint,4,opt,name=is_default_level,json=isDefaultLevel,proto3" json:"is_default_level,omitempty"`                                                        // 是否为默认等级（1：是，2：否）
	GrowthValue                     int64                  `protobuf:"varint,5,opt,name=growth_value,json=growthValue,proto3" json:"growth_value,omitempty"`                                                                   // 达到该等级所需的成长值
	UpgradeRewardFertilizerNum      int64                  `protobuf:"varint,6,opt,name=upgrade_reward_fertilizer_num,json=upgradeRewardFertilizerNum,proto3" json:"upgrade_reward_fertilizer_num,omitempty"`                  // 升级奖励的肥料数量
	UpgradeRewardTreeMaturityPeriod int64                  `protobuf:"varint,7,opt,name=upgrade_reward_tree_maturity_period,json=upgradeRewardTreeMaturityPeriod,proto3" json:"upgrade_reward_tree_maturity_period,omitempty"` // 奖励树的成熟周期（小时）
	UpgradeRewardTreeNum            int64                  `protobuf:"varint,8,opt,name=upgrade_reward_tree_num,json=upgradeRewardTreeNum,proto3" json:"upgrade_reward_tree_num,omitempty"`                                    // 升级奖励的树木数量
	Remarks                         string                 `protobuf:"bytes,9,opt,name=remarks,proto3" json:"remarks,omitempty"`                                                                                               // 等级的备注信息
	IsEnabled                       int64                  `protobuf:"varint,10,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`                                                                        // 等级是否启用（1：启用，2：禁用）
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *VipLevelDetail) Reset() {
	*x = VipLevelDetail{}
	mi := &file_manage_v1_manage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipLevelDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelDetail) ProtoMessage() {}

func (x *VipLevelDetail) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelDetail.ProtoReflect.Descriptor instead.
func (*VipLevelDetail) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{4}
}

func (x *VipLevelDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipLevelDetail) GetLevelName() string {
	if x != nil {
		return x.LevelName
	}
	return ""
}

func (x *VipLevelDetail) GetLevelVal() int64 {
	if x != nil {
		return x.LevelVal
	}
	return 0
}

func (x *VipLevelDetail) GetIsDefaultLevel() int64 {
	if x != nil {
		return x.IsDefaultLevel
	}
	return 0
}

func (x *VipLevelDetail) GetGrowthValue() int64 {
	if x != nil {
		return x.GrowthValue
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardFertilizerNum() int64 {
	if x != nil {
		return x.UpgradeRewardFertilizerNum
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardTreeMaturityPeriod() int64 {
	if x != nil {
		return x.UpgradeRewardTreeMaturityPeriod
	}
	return 0
}

func (x *VipLevelDetail) GetUpgradeRewardTreeNum() int64 {
	if x != nil {
		return x.UpgradeRewardTreeNum
	}
	return 0
}

func (x *VipLevelDetail) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *VipLevelDetail) GetIsEnabled() int64 {
	if x != nil {
		return x.IsEnabled
	}
	return 0
}

type DefaultVipInfoReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VipInfo       *VipLevelDetail        `protobuf:"bytes,1,opt,name=vip_info,json=vipInfo,proto3" json:"vip_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DefaultVipInfoReply) Reset() {
	*x = DefaultVipInfoReply{}
	mi := &file_manage_v1_manage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DefaultVipInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultVipInfoReply) ProtoMessage() {}

func (x *DefaultVipInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultVipInfoReply.ProtoReflect.Descriptor instead.
func (*DefaultVipInfoReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{5}
}

func (x *DefaultVipInfoReply) GetVipInfo() *VipLevelDetail {
	if x != nil {
		return x.VipInfo
	}
	return nil
}

// SettingBaseInfo 代表所有设置的配置，包括基础设置和返利设置
type SettingBaseInfoReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 基础设置
	InitialLand         int64  `protobuf:"varint,1,opt,name=initial_land,json=initialLand,proto3" json:"initial_land,omitempty"`                           // 初始土地配置
	FriendWateringTimes int64  `protobuf:"varint,2,opt,name=friend_watering_times,json=friendWateringTimes,proto3" json:"friend_watering_times,omitempty"` // 好友浇水次数
	DownloadLink        string `protobuf:"bytes,3,opt,name=download_link,json=downloadLink,proto3" json:"download_link,omitempty"`                         // 下载链接
	NewUserInvitation   int64  `protobuf:"varint,4,opt,name=new_user_invitation,json=newUserInvitation,proto3" json:"new_user_invitation,omitempty"`       // 是否有新用户邀请
	AboutPlatform       string `protobuf:"bytes,5,opt,name=about_platform,json=aboutPlatform,proto3" json:"about_platform,omitempty"`                      // 关于平台的描述
	// 返利设置
	RegistrationRewards *RegistrationRewards `protobuf:"bytes,6,opt,name=registration_rewards,json=registrationRewards,proto3" json:"registration_rewards,omitempty"` // 注册奖励
	DepositRewards      *DepositRewards      `protobuf:"bytes,7,opt,name=deposit_rewards,json=depositRewards,proto3" json:"deposit_rewards,omitempty"`                // 存款奖励
	CollectionRewards   *CollectionRewards   `protobuf:"bytes,8,opt,name=collection_rewards,json=collectionRewards,proto3" json:"collection_rewards,omitempty"`       // 收集奖励
	SettlementConfig    *SettlementConfig    `protobuf:"bytes,9,opt,name=settlement_config,json=settlementConfig,proto3" json:"settlement_config,omitempty"`          // 结算配置
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SettingBaseInfoReply) Reset() {
	*x = SettingBaseInfoReply{}
	mi := &file_manage_v1_manage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingBaseInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingBaseInfoReply) ProtoMessage() {}

func (x *SettingBaseInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingBaseInfoReply.ProtoReflect.Descriptor instead.
func (*SettingBaseInfoReply) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{6}
}

func (x *SettingBaseInfoReply) GetInitialLand() int64 {
	if x != nil {
		return x.InitialLand
	}
	return 0
}

func (x *SettingBaseInfoReply) GetFriendWateringTimes() int64 {
	if x != nil {
		return x.FriendWateringTimes
	}
	return 0
}

func (x *SettingBaseInfoReply) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

func (x *SettingBaseInfoReply) GetNewUserInvitation() int64 {
	if x != nil {
		return x.NewUserInvitation
	}
	return 0
}

func (x *SettingBaseInfoReply) GetAboutPlatform() string {
	if x != nil {
		return x.AboutPlatform
	}
	return ""
}

func (x *SettingBaseInfoReply) GetRegistrationRewards() *RegistrationRewards {
	if x != nil {
		return x.RegistrationRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetDepositRewards() *DepositRewards {
	if x != nil {
		return x.DepositRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetCollectionRewards() *CollectionRewards {
	if x != nil {
		return x.CollectionRewards
	}
	return nil
}

func (x *SettingBaseInfoReply) GetSettlementConfig() *SettlementConfig {
	if x != nil {
		return x.SettlementConfig
	}
	return nil
}

// RegistrationRewards 代表注册奖励配置
type RegistrationRewards struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       int64                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                         // 是否启用注册奖励（1-启用，2-禁用）
	LandReward    int64                  `protobuf:"varint,2,opt,name=land_reward,json=landReward,proto3" json:"land_reward,omitempty"` // 土地奖励数量
	MaxRewards    int64                  `protobuf:"varint,3,opt,name=max_rewards,json=maxRewards,proto3" json:"max_rewards,omitempty"` // 最大奖励数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationRewards) Reset() {
	*x = RegistrationRewards{}
	mi := &file_manage_v1_manage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationRewards) ProtoMessage() {}

func (x *RegistrationRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationRewards.ProtoReflect.Descriptor instead.
func (*RegistrationRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{7}
}

func (x *RegistrationRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *RegistrationRewards) GetLandReward() int64 {
	if x != nil {
		return x.LandReward
	}
	return 0
}

func (x *RegistrationRewards) GetMaxRewards() int64 {
	if x != nil {
		return x.MaxRewards
	}
	return 0
}

// DepositRewards 代表存款奖励配置
type DepositRewards struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Enabled          int64                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                                           // 是否启用存款奖励（1-启用，2-禁用）
	Level1Percentage int64                  `protobuf:"varint,2,opt,name=level1_percentage,json=level1Percentage,proto3" json:"level1_percentage,omitempty"` // 等级1存款奖励百分比
	Level2Percentage int64                  `protobuf:"varint,3,opt,name=level2_percentage,json=level2Percentage,proto3" json:"level2_percentage,omitempty"` // 等级2存款奖励百分比
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DepositRewards) Reset() {
	*x = DepositRewards{}
	mi := &file_manage_v1_manage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRewards) ProtoMessage() {}

func (x *DepositRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRewards.ProtoReflect.Descriptor instead.
func (*DepositRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{8}
}

func (x *DepositRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *DepositRewards) GetLevel1Percentage() int64 {
	if x != nil {
		return x.Level1Percentage
	}
	return 0
}

func (x *DepositRewards) GetLevel2Percentage() int64 {
	if x != nil {
		return x.Level2Percentage
	}
	return 0
}

// CollectionRewards 代表收集奖励配置
type CollectionRewards struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Enabled          int64                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                                           // 是否启用收集奖励（1-启用，2-禁用）
	Level1Percentage int64                  `protobuf:"varint,2,opt,name=level1_percentage,json=level1Percentage,proto3" json:"level1_percentage,omitempty"` // 等级1收集奖励百分比
	Level2Percentage int64                  `protobuf:"varint,3,opt,name=level2_percentage,json=level2Percentage,proto3" json:"level2_percentage,omitempty"` // 等级2收集奖励百分比
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CollectionRewards) Reset() {
	*x = CollectionRewards{}
	mi := &file_manage_v1_manage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionRewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRewards) ProtoMessage() {}

func (x *CollectionRewards) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRewards.ProtoReflect.Descriptor instead.
func (*CollectionRewards) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{9}
}

func (x *CollectionRewards) GetEnabled() int64 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *CollectionRewards) GetLevel1Percentage() int64 {
	if x != nil {
		return x.Level1Percentage
	}
	return 0
}

func (x *CollectionRewards) GetLevel2Percentage() int64 {
	if x != nil {
		return x.Level2Percentage
	}
	return 0
}

// SettlementConfig 代表结算配置
type SettlementConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SettlementTime string                 `protobuf:"bytes,1,opt,name=settlement_time,json=settlementTime,proto3" json:"settlement_time,omitempty"` // 结算时间，格式为HH:mm:ss
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SettlementConfig) Reset() {
	*x = SettlementConfig{}
	mi := &file_manage_v1_manage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettlementConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementConfig) ProtoMessage() {}

func (x *SettlementConfig) ProtoReflect() protoreflect.Message {
	mi := &file_manage_v1_manage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementConfig.ProtoReflect.Descriptor instead.
func (*SettlementConfig) Descriptor() ([]byte, []int) {
	return file_manage_v1_manage_proto_rawDescGZIP(), []int{10}
}

func (x *SettlementConfig) GetSettlementTime() string {
	if x != nil {
		return x.SettlementTime
	}
	return ""
}

var File_manage_v1_manage_proto protoreflect.FileDescriptor

var file_manage_v1_manage_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x22, 0x0b, 0x0a, 0x09, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x0d, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x4b, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22,
	0xaa, 0x03, 0x0a, 0x0e, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x65,
	0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1a, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x4c,
	0x0a, 0x23, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1f, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65, 0x4d, 0x61,
	0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x35, 0x0a, 0x17,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x72, 0x65, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x72, 0x65, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x13,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x07, 0x76, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x97, 0x04, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6c, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x4c, 0x61, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2e,
	0x0a, 0x13, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x51, 0x0a, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x12,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x71, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x32, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x32, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x32, 0x9c, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41,
	0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x32, 0xac, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_manage_v1_manage_proto_rawDescOnce sync.Once
	file_manage_v1_manage_proto_rawDescData []byte
)

func file_manage_v1_manage_proto_rawDescGZIP() []byte {
	file_manage_v1_manage_proto_rawDescOnce.Do(func() {
		file_manage_v1_manage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manage_v1_manage_proto_rawDesc), len(file_manage_v1_manage_proto_rawDesc)))
	})
	return file_manage_v1_manage_proto_rawDescData
}

var file_manage_v1_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_manage_v1_manage_proto_goTypes = []any{
	(*ManageReq)(nil),            // 0: manage.v1.ManageReq
	(*ManageReply)(nil),          // 1: manage.v1.ManageReply
	(*SendCaptchaReq)(nil),       // 2: manage.v1.SendCaptchaReq
	(*GetAgreementReply)(nil),    // 3: manage.v1.GetAgreementReply
	(*VipLevelDetail)(nil),       // 4: manage.v1.VipLevelDetail
	(*DefaultVipInfoReply)(nil),  // 5: manage.v1.DefaultVipInfoReply
	(*SettingBaseInfoReply)(nil), // 6: manage.v1.SettingBaseInfoReply
	(*RegistrationRewards)(nil),  // 7: manage.v1.RegistrationRewards
	(*DepositRewards)(nil),       // 8: manage.v1.DepositRewards
	(*CollectionRewards)(nil),    // 9: manage.v1.CollectionRewards
	(*SettlementConfig)(nil),     // 10: manage.v1.SettlementConfig
}
var file_manage_v1_manage_proto_depIdxs = []int32{
	4,  // 0: manage.v1.DefaultVipInfoReply.vip_info:type_name -> manage.v1.VipLevelDetail
	7,  // 1: manage.v1.SettingBaseInfoReply.registration_rewards:type_name -> manage.v1.RegistrationRewards
	8,  // 2: manage.v1.SettingBaseInfoReply.deposit_rewards:type_name -> manage.v1.DepositRewards
	9,  // 3: manage.v1.SettingBaseInfoReply.collection_rewards:type_name -> manage.v1.CollectionRewards
	10, // 4: manage.v1.SettingBaseInfoReply.settlement_config:type_name -> manage.v1.SettlementConfig
	2,  // 5: manage.v1.ManageApiService.SendCaptcha:input_type -> manage.v1.SendCaptchaReq
	0,  // 6: manage.v1.ManageApiService.GetAgreement:input_type -> manage.v1.ManageReq
	0,  // 7: manage.v1.ManageInnerService.GetDefaultVipInfo:input_type -> manage.v1.ManageReq
	0,  // 8: manage.v1.ManageInnerService.GetSettingBaseInfo:input_type -> manage.v1.ManageReq
	1,  // 9: manage.v1.ManageApiService.SendCaptcha:output_type -> manage.v1.ManageReply
	3,  // 10: manage.v1.ManageApiService.GetAgreement:output_type -> manage.v1.GetAgreementReply
	5,  // 11: manage.v1.ManageInnerService.GetDefaultVipInfo:output_type -> manage.v1.DefaultVipInfoReply
	6,  // 12: manage.v1.ManageInnerService.GetSettingBaseInfo:output_type -> manage.v1.SettingBaseInfoReply
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_manage_v1_manage_proto_init() }
func file_manage_v1_manage_proto_init() {
	if File_manage_v1_manage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manage_v1_manage_proto_rawDesc), len(file_manage_v1_manage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_manage_v1_manage_proto_goTypes,
		DependencyIndexes: file_manage_v1_manage_proto_depIdxs,
		MessageInfos:      file_manage_v1_manage_proto_msgTypes,
	}.Build()
	File_manage_v1_manage_proto = out.File
	file_manage_v1_manage_proto_goTypes = nil
	file_manage_v1_manage_proto_depIdxs = nil
}
