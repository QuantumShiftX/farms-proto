// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: manage.proto

package manageservice

import (
	"context"

	"farms-rpc-server/app/manage/pb/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ManageReply = v1.ManageReply
	ManageReq   = v1.ManageReq

	ManageService interface {
		Test(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*ManageReply, error)
	}

	defaultManageService struct {
		cli zrpc.Client
	}
)

func NewManageService(cli zrpc.Client) ManageService {
	return &defaultManageService{
		cli: cli,
	}
}

func (m *defaultManageService) Test(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*ManageReply, error) {
	client := v1.NewManageServiceClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
