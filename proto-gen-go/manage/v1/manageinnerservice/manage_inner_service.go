// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: manage.proto

package manageinnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/manage/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CollectionRewards         = v1.CollectionRewards
	DefaultVipInfoReply       = v1.DefaultVipInfoReply
	DepositRewards            = v1.DepositRewards
	GetAgreementReply         = v1.GetAgreementReply
	GetApkAddressReply        = v1.GetApkAddressReply
	GetDownloadAddrReply      = v1.GetDownloadAddrReply
	GetNotificationsListReply = v1.GetNotificationsListReply
	GetNotificationsListReq   = v1.GetNotificationsListReq
	ManageReply               = v1.ManageReply
	ManageReq                 = v1.ManageReq
	NotificationInfo          = v1.NotificationInfo
	RegistrationRewards       = v1.RegistrationRewards
	SendCaptchaReq            = v1.SendCaptchaReq
	SettingBaseInfoReply      = v1.SettingBaseInfoReply
	SettlementConfig          = v1.SettlementConfig
	VIPLevelInfo              = v1.VIPLevelInfo
	VipLevelDetail            = v1.VipLevelDetail
	VipLevelInfoMsgReply      = v1.VipLevelInfoMsgReply
	VipLevelInfoMsgReq        = v1.VipLevelInfoMsgReq

	ManageInnerService interface {
		// 获取默认VIP等级信息
		GetDefaultVipInfo(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*DefaultVipInfoReply, error)
		// 获取设置基础信息
		GetSettingBaseInfo(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*SettingBaseInfoReply, error)
		// 获取vip等级信息
		VipLevelInfo(ctx context.Context, in *VipLevelInfoMsgReq, opts ...grpc.CallOption) (*VipLevelInfoMsgReply, error)
		// 获取模板信息列表
		GetNotificationsList(ctx context.Context, in *GetNotificationsListReq, opts ...grpc.CallOption) (*GetNotificationsListReply, error)
		// 获取下载地址
		GetDownloadAddress(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*GetDownloadAddrReply, error)
	}

	defaultManageInnerService struct {
		cli zrpc.Client
	}
)

func NewManageInnerService(cli zrpc.Client) ManageInnerService {
	return &defaultManageInnerService{
		cli: cli,
	}
}

// 获取默认VIP等级信息
func (m *defaultManageInnerService) GetDefaultVipInfo(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*DefaultVipInfoReply, error) {
	client := v1.NewManageInnerServiceClient(m.cli.Conn())
	return client.GetDefaultVipInfo(ctx, in, opts...)
}

// 获取设置基础信息
func (m *defaultManageInnerService) GetSettingBaseInfo(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*SettingBaseInfoReply, error) {
	client := v1.NewManageInnerServiceClient(m.cli.Conn())
	return client.GetSettingBaseInfo(ctx, in, opts...)
}

// 获取vip等级信息
func (m *defaultManageInnerService) VipLevelInfo(ctx context.Context, in *VipLevelInfoMsgReq, opts ...grpc.CallOption) (*VipLevelInfoMsgReply, error) {
	client := v1.NewManageInnerServiceClient(m.cli.Conn())
	return client.VipLevelInfo(ctx, in, opts...)
}

// 获取模板信息列表
func (m *defaultManageInnerService) GetNotificationsList(ctx context.Context, in *GetNotificationsListReq, opts ...grpc.CallOption) (*GetNotificationsListReply, error) {
	client := v1.NewManageInnerServiceClient(m.cli.Conn())
	return client.GetNotificationsList(ctx, in, opts...)
}

// 获取下载地址
func (m *defaultManageInnerService) GetDownloadAddress(ctx context.Context, in *ManageReq, opts ...grpc.CallOption) (*GetDownloadAddrReply, error) {
	client := v1.NewManageInnerServiceClient(m.cli.Conn())
	return client.GetDownloadAddress(ctx, in, opts...)
}
