// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: dispatcher.proto

package dispatcherasync

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/dispatcher/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DispatcherReply = v1.DispatcherReply
	DispatcherReq   = v1.DispatcherReq

	DispatcherAsync interface {
		TestAsync(ctx context.Context, in *DispatcherReq, opts ...grpc.CallOption) (*DispatcherReply, error)
	}

	defaultDispatcherAsync struct {
		cli zrpc.Client
	}
)

func NewDispatcherAsync(cli zrpc.Client) DispatcherAsync {
	return &defaultDispatcherAsync{
		cli: cli,
	}
}

func (m *defaultDispatcherAsync) TestAsync(ctx context.Context, in *DispatcherReq, opts ...grpc.CallOption) (*DispatcherReply, error) {
	client := v1.NewDispatcherAsyncClient(m.cli.Conn())
	return client.TestAsync(ctx, in, opts...)
}
