// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: dispatcher.proto

package dispatcherasync

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/dispatcher/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DispatcherReply                 = v1.DispatcherReply
	DispatcherReq                   = v1.DispatcherReq
	UpdateCropStatusCheckReq        = v1.UpdateCropStatusCheckReq
	UpdateFortuneTreeStatusCheckReq = v1.UpdateFortuneTreeStatusCheckReq
	UpdateOnlineRewardTaskReq       = v1.UpdateOnlineRewardTaskReq
	UserOnlineDuration              = v1.UserOnlineDuration

	DispatcherAsync interface {
		// 发财树状态检查，推送
		UpdateFortuneTreeStatusCheck(ctx context.Context, in *UpdateFortuneTreeStatusCheckReq, opts ...grpc.CallOption) (*DispatcherReply, error)
		// 农场作物状态检查,推送
		UpdateCropStatusCheck(ctx context.Context, in *UpdateCropStatusCheckReq, opts ...grpc.CallOption) (*DispatcherReply, error)
		// 用户在线时长奖励监测
		UpdateOnlineRewardTask(ctx context.Context, in *UpdateOnlineRewardTaskReq, opts ...grpc.CallOption) (*DispatcherReply, error)
	}

	defaultDispatcherAsync struct {
		cli zrpc.Client
	}
)

func NewDispatcherAsync(cli zrpc.Client) DispatcherAsync {
	return &defaultDispatcherAsync{
		cli: cli,
	}
}

// 发财树状态检查，推送
func (m *defaultDispatcherAsync) UpdateFortuneTreeStatusCheck(ctx context.Context, in *UpdateFortuneTreeStatusCheckReq, opts ...grpc.CallOption) (*DispatcherReply, error) {
	client := v1.NewDispatcherAsyncClient(m.cli.Conn())
	return client.UpdateFortuneTreeStatusCheck(ctx, in, opts...)
}

// 农场作物状态检查,推送
func (m *defaultDispatcherAsync) UpdateCropStatusCheck(ctx context.Context, in *UpdateCropStatusCheckReq, opts ...grpc.CallOption) (*DispatcherReply, error) {
	client := v1.NewDispatcherAsyncClient(m.cli.Conn())
	return client.UpdateCropStatusCheck(ctx, in, opts...)
}

// 用户在线时长奖励监测
func (m *defaultDispatcherAsync) UpdateOnlineRewardTask(ctx context.Context, in *UpdateOnlineRewardTaskReq, opts ...grpc.CallOption) (*DispatcherReply, error) {
	client := v1.NewDispatcherAsyncClient(m.cli.Conn())
	return client.UpdateOnlineRewardTask(ctx, in, opts...)
}
