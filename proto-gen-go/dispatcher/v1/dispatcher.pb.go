// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: dispatcher/v1/dispatcher.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DispatcherReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DispatcherReq) Reset() {
	*x = DispatcherReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatcherReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatcherReq) ProtoMessage() {}

func (x *DispatcherReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatcherReq.ProtoReflect.Descriptor instead.
func (*DispatcherReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{0}
}

type DispatcherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DispatcherReply) Reset() {
	*x = DispatcherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatcherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatcherReply) ProtoMessage() {}

func (x *DispatcherReply) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatcherReply.ProtoReflect.Descriptor instead.
func (*DispatcherReply) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{1}
}

type UpdateFortuneTreeStatusCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户id
	TreeId      int64 `protobuf:"varint,2,opt,name=tree_id,json=treeId,proto3" json:"tree_id,omitempty"`                // 发财树id
	OperationAt int64 `protobuf:"varint,3,opt,name=operation_at,json=operationAt,proto3" json:"operation_at,omitempty"` // 下次状态检查执行的时间
}

func (x *UpdateFortuneTreeStatusCheckReq) Reset() {
	*x = UpdateFortuneTreeStatusCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFortuneTreeStatusCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFortuneTreeStatusCheckReq) ProtoMessage() {}

func (x *UpdateFortuneTreeStatusCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFortuneTreeStatusCheckReq.ProtoReflect.Descriptor instead.
func (*UpdateFortuneTreeStatusCheckReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateFortuneTreeStatusCheckReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateFortuneTreeStatusCheckReq) GetTreeId() int64 {
	if x != nil {
		return x.TreeId
	}
	return 0
}

func (x *UpdateFortuneTreeStatusCheckReq) GetOperationAt() int64 {
	if x != nil {
		return x.OperationAt
	}
	return 0
}

type UpdateCropStatusCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // 用户id
	PlantId     int64 `protobuf:"varint,2,opt,name=plant_id,json=plantId,proto3" json:"plant_id,omitempty"`             // 种植id
	OperationAt int64 `protobuf:"varint,3,opt,name=operation_at,json=operationAt,proto3" json:"operation_at,omitempty"` // 下次状态检查执行的时间
}

func (x *UpdateCropStatusCheckReq) Reset() {
	*x = UpdateCropStatusCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCropStatusCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCropStatusCheckReq) ProtoMessage() {}

func (x *UpdateCropStatusCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCropStatusCheckReq.ProtoReflect.Descriptor instead.
func (*UpdateCropStatusCheckReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCropStatusCheckReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateCropStatusCheckReq) GetPlantId() int64 {
	if x != nil {
		return x.PlantId
	}
	return 0
}

func (x *UpdateCropStatusCheckReq) GetOperationAt() int64 {
	if x != nil {
		return x.OperationAt
	}
	return 0
}

type UpdateOnlineRewardTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserOnlineDuration []*UserOnlineDuration `protobuf:"bytes,1,rep,name=user_online_duration,json=userOnlineDuration,proto3" json:"user_online_duration,omitempty"`
}

func (x *UpdateOnlineRewardTaskReq) Reset() {
	*x = UpdateOnlineRewardTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOnlineRewardTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOnlineRewardTaskReq) ProtoMessage() {}

func (x *UpdateOnlineRewardTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOnlineRewardTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateOnlineRewardTaskReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateOnlineRewardTaskReq) GetUserOnlineDuration() []*UserOnlineDuration {
	if x != nil {
		return x.UserOnlineDuration
	}
	return nil
}

type UserOnlineDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`      // 用户id
	Duration int64  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`                // 在线时间长度秒
	StatDate string `protobuf:"bytes,3,opt,name=stat_date,json=statDate,proto3" json:"stat_date,omitempty"` // 统计的日期年月日
}

func (x *UserOnlineDuration) Reset() {
	*x = UserOnlineDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOnlineDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlineDuration) ProtoMessage() {}

func (x *UserOnlineDuration) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOnlineDuration.ProtoReflect.Descriptor instead.
func (*UserOnlineDuration) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{5}
}

func (x *UserOnlineDuration) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserOnlineDuration) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UserOnlineDuration) GetStatDate() string {
	if x != nil {
		return x.StatDate
	}
	return ""
}

type UserRegistrationEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ParentId int64 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // 上级ID（邀请用户的ID）
}

func (x *UserRegistrationEventReq) Reset() {
	*x = UserRegistrationEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegistrationEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegistrationEventReq) ProtoMessage() {}

func (x *UserRegistrationEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegistrationEventReq.ProtoReflect.Descriptor instead.
func (*UserRegistrationEventReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{6}
}

func (x *UserRegistrationEventReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserRegistrationEventReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type UserRechargeEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` // 充值金额
}

func (x *UserRechargeEventReq) Reset() {
	*x = UserRechargeEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRechargeEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRechargeEventReq) ProtoMessage() {}

func (x *UserRechargeEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRechargeEventReq.ProtoReflect.Descriptor instead.
func (*UserRechargeEventReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{7}
}

func (x *UserRechargeEventReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserRechargeEventReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type UserWithdrawEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` // 提现金额
}

func (x *UserWithdrawEventReq) Reset() {
	*x = UserWithdrawEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWithdrawEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWithdrawEventReq) ProtoMessage() {}

func (x *UserWithdrawEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWithdrawEventReq.ProtoReflect.Descriptor instead.
func (*UserWithdrawEventReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{8}
}

func (x *UserWithdrawEventReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserWithdrawEventReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type UserFriendActionEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TypeCode int64 `protobuf:"varint,2,opt,name=type_code,json=typeCode,proto3" json:"type_code,omitempty"`
	SubType  int64 `protobuf:"varint,3,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`
}

func (x *UserFriendActionEventReq) Reset() {
	*x = UserFriendActionEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFriendActionEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFriendActionEventReq) ProtoMessage() {}

func (x *UserFriendActionEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFriendActionEventReq.ProtoReflect.Descriptor instead.
func (*UserFriendActionEventReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{9}
}

func (x *UserFriendActionEventReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserFriendActionEventReq) GetTypeCode() int64 {
	if x != nil {
		return x.TypeCode
	}
	return 0
}

func (x *UserFriendActionEventReq) GetSubType() int64 {
	if x != nil {
		return x.SubType
	}
	return 0
}

type HeartbeatEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *HeartbeatEventReq) Reset() {
	*x = HeartbeatEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatEventReq) ProtoMessage() {}

func (x *HeartbeatEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_dispatcher_v1_dispatcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatEventReq.ProtoReflect.Descriptor instead.
func (*HeartbeatEventReq) Descriptor() ([]byte, []int) {
	return file_dispatcher_v1_dispatcher_proto_rawDescGZIP(), []int{10}
}

func (x *HeartbeatEventReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_dispatcher_v1_dispatcher_proto protoreflect.FileDescriptor

var file_dispatcher_v1_dispatcher_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x76, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72,
	0x74, 0x75, 0x6e, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x22, 0x71, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x22, 0x70,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x53, 0x0a, 0x14, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x75, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x66, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x18,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x11, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0xbc, 0x06, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x70, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x54, 0x72, 0x65, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2e, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x75, 0x6e, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x1c, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x5f, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x64,
	0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5f, 0x0a, 0x18, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e,
	0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x67, 0x0a, 0x1c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69,
	0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x59, 0x0a, 0x15, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xf9, 0x02, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x1b, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x46, 0x65, 0x72, 0x74, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x14, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x14, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x6f, 0x70, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x15, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dispatcher_v1_dispatcher_proto_rawDescOnce sync.Once
	file_dispatcher_v1_dispatcher_proto_rawDescData = file_dispatcher_v1_dispatcher_proto_rawDesc
)

func file_dispatcher_v1_dispatcher_proto_rawDescGZIP() []byte {
	file_dispatcher_v1_dispatcher_proto_rawDescOnce.Do(func() {
		file_dispatcher_v1_dispatcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_dispatcher_v1_dispatcher_proto_rawDescData)
	})
	return file_dispatcher_v1_dispatcher_proto_rawDescData
}

var file_dispatcher_v1_dispatcher_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_dispatcher_v1_dispatcher_proto_goTypes = []interface{}{
	(*DispatcherReq)(nil),                   // 0: dispatcher.v1.DispatcherReq
	(*DispatcherReply)(nil),                 // 1: dispatcher.v1.DispatcherReply
	(*UpdateFortuneTreeStatusCheckReq)(nil), // 2: dispatcher.v1.UpdateFortuneTreeStatusCheckReq
	(*UpdateCropStatusCheckReq)(nil),        // 3: dispatcher.v1.UpdateCropStatusCheckReq
	(*UpdateOnlineRewardTaskReq)(nil),       // 4: dispatcher.v1.UpdateOnlineRewardTaskReq
	(*UserOnlineDuration)(nil),              // 5: dispatcher.v1.UserOnlineDuration
	(*UserRegistrationEventReq)(nil),        // 6: dispatcher.v1.UserRegistrationEventReq
	(*UserRechargeEventReq)(nil),            // 7: dispatcher.v1.UserRechargeEventReq
	(*UserWithdrawEventReq)(nil),            // 8: dispatcher.v1.UserWithdrawEventReq
	(*UserFriendActionEventReq)(nil),        // 9: dispatcher.v1.UserFriendActionEventReq
	(*HeartbeatEventReq)(nil),               // 10: dispatcher.v1.HeartbeatEventReq
}
var file_dispatcher_v1_dispatcher_proto_depIdxs = []int32{
	5,  // 0: dispatcher.v1.UpdateOnlineRewardTaskReq.user_online_duration:type_name -> dispatcher.v1.UserOnlineDuration
	2,  // 1: dispatcher.v1.DispatcherAsync.UpdateFortuneTreeStatusCheck:input_type -> dispatcher.v1.UpdateFortuneTreeStatusCheckReq
	3,  // 2: dispatcher.v1.DispatcherAsync.UpdateCropStatusCheck:input_type -> dispatcher.v1.UpdateCropStatusCheckReq
	4,  // 3: dispatcher.v1.DispatcherAsync.UpdateOnlineRewardTask:input_type -> dispatcher.v1.UpdateOnlineRewardTaskReq
	6,  // 4: dispatcher.v1.DispatcherAsync.TriggerUserRegistrationEvent:input_type -> dispatcher.v1.UserRegistrationEventReq
	7,  // 5: dispatcher.v1.DispatcherAsync.TriggerUserRechargeEvent:input_type -> dispatcher.v1.UserRechargeEventReq
	8,  // 6: dispatcher.v1.DispatcherAsync.TriggerUserWithdrawEvent:input_type -> dispatcher.v1.UserWithdrawEventReq
	9,  // 7: dispatcher.v1.DispatcherAsync.TriggerUserFriendActionEvent:input_type -> dispatcher.v1.UserFriendActionEventReq
	10, // 8: dispatcher.v1.DispatcherAsync.TriggerHeartbeatEvent:input_type -> dispatcher.v1.HeartbeatEventReq
	0,  // 9: dispatcher.v1.DispatcherTimer.CycleFertileTreeStatusCheck:input_type -> dispatcher.v1.DispatcherReq
	0,  // 10: dispatcher.v1.DispatcherTimer.CycleCropStatusCheck:input_type -> dispatcher.v1.DispatcherReq
	0,  // 11: dispatcher.v1.DispatcherTimer.CycleCropStageUpdate:input_type -> dispatcher.v1.DispatcherReq
	0,  // 12: dispatcher.v1.DispatcherTimer.CycleBulletinMsgCheck:input_type -> dispatcher.v1.DispatcherReq
	1,  // 13: dispatcher.v1.DispatcherAsync.UpdateFortuneTreeStatusCheck:output_type -> dispatcher.v1.DispatcherReply
	1,  // 14: dispatcher.v1.DispatcherAsync.UpdateCropStatusCheck:output_type -> dispatcher.v1.DispatcherReply
	1,  // 15: dispatcher.v1.DispatcherAsync.UpdateOnlineRewardTask:output_type -> dispatcher.v1.DispatcherReply
	1,  // 16: dispatcher.v1.DispatcherAsync.TriggerUserRegistrationEvent:output_type -> dispatcher.v1.DispatcherReply
	1,  // 17: dispatcher.v1.DispatcherAsync.TriggerUserRechargeEvent:output_type -> dispatcher.v1.DispatcherReply
	1,  // 18: dispatcher.v1.DispatcherAsync.TriggerUserWithdrawEvent:output_type -> dispatcher.v1.DispatcherReply
	1,  // 19: dispatcher.v1.DispatcherAsync.TriggerUserFriendActionEvent:output_type -> dispatcher.v1.DispatcherReply
	1,  // 20: dispatcher.v1.DispatcherAsync.TriggerHeartbeatEvent:output_type -> dispatcher.v1.DispatcherReply
	1,  // 21: dispatcher.v1.DispatcherTimer.CycleFertileTreeStatusCheck:output_type -> dispatcher.v1.DispatcherReply
	1,  // 22: dispatcher.v1.DispatcherTimer.CycleCropStatusCheck:output_type -> dispatcher.v1.DispatcherReply
	1,  // 23: dispatcher.v1.DispatcherTimer.CycleCropStageUpdate:output_type -> dispatcher.v1.DispatcherReply
	1,  // 24: dispatcher.v1.DispatcherTimer.CycleBulletinMsgCheck:output_type -> dispatcher.v1.DispatcherReply
	13, // [13:25] is the sub-list for method output_type
	1,  // [1:13] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_dispatcher_v1_dispatcher_proto_init() }
func file_dispatcher_v1_dispatcher_proto_init() {
	if File_dispatcher_v1_dispatcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dispatcher_v1_dispatcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatcherReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatcherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFortuneTreeStatusCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCropStatusCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOnlineRewardTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOnlineDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegistrationEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRechargeEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWithdrawEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFriendActionEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dispatcher_v1_dispatcher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dispatcher_v1_dispatcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_dispatcher_v1_dispatcher_proto_goTypes,
		DependencyIndexes: file_dispatcher_v1_dispatcher_proto_depIdxs,
		MessageInfos:      file_dispatcher_v1_dispatcher_proto_msgTypes,
	}.Build()
	File_dispatcher_v1_dispatcher_proto = out.File
	file_dispatcher_v1_dispatcher_proto_rawDesc = nil
	file_dispatcher_v1_dispatcher_proto_goTypes = nil
	file_dispatcher_v1_dispatcher_proto_depIdxs = nil
}
