// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userinnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGrowthRequest                = v1.AddGrowthRequest
	AdjustHarvestTimeRequest        = v1.AdjustHarvestTimeRequest
	AdjustHarvestTimeResponse       = v1.AdjustHarvestTimeResponse
	AllUserRankingInfoMsgReply      = v1.AllUserRankingInfoMsgReply
	AllUserRankingInfoMsgReq        = v1.AllUserRankingInfoMsgReq
	CheckCropsNeedsRequest          = v1.CheckCropsNeedsRequest
	CheckCropsNeedsResponse         = v1.CheckCropsNeedsResponse
	FarmTransactionRecord           = v1.FarmTransactionRecord
	FarmTransactionRecordsMsgReply  = v1.FarmTransactionRecordsMsgReply
	FarmTransactionRecordsMsgReq    = v1.FarmTransactionRecordsMsgReq
	ForgotPasswordReq               = v1.ForgotPasswordReq
	FriendRankingInfo               = v1.FriendRankingInfo
	GetMerchantListMsgReply         = v1.GetMerchantListMsgReply
	GetMerchantListMsgReq           = v1.GetMerchantListMsgReq
	GetOnlineUserListReply          = v1.GetOnlineUserListReply
	GetOnlineUserListReq            = v1.GetOnlineUserListReq
	GrowthProgressRequest           = v1.GrowthProgressRequest
	GrowthProgressResponse          = v1.GrowthProgressResponse
	LookUserFarmsInfoMsgReply       = v1.LookUserFarmsInfoMsgReply
	LookUserFarmsInfoMsgReq         = v1.LookUserFarmsInfoMsgReq
	MaintenanceNeeds                = v1.MaintenanceNeeds
	MaintenanceNeedsRequest         = v1.MaintenanceNeedsRequest
	MaintenanceNeedsResponse        = v1.MaintenanceNeedsResponse
	MerchantExchangeRateMsgReply    = v1.MerchantExchangeRateMsgReply
	MerchantExchangeRateMsgReq      = v1.MerchantExchangeRateMsgReq
	MerchantInfo                    = v1.MerchantInfo
	MsgData                         = v1.MsgData
	MsgReply                        = v1.MsgReply
	MsgReq                          = v1.MsgReq
	MyRankingInfo                   = v1.MyRankingInfo
	PlantInfo                       = v1.PlantInfo
	PlantStateInfo                  = v1.PlantStateInfo
	PlantStateRequest               = v1.PlantStateRequest
	PlantStateResponse              = v1.PlantStateResponse
	PlantStatusRequest              = v1.PlantStatusRequest
	PlantStatusResponse             = v1.PlantStatusResponse
	RequestClientInfo               = v1.RequestClientInfo
	StageTime                       = v1.StageTime
	StageTimelinesRequest           = v1.StageTimelinesRequest
	StageTimelinesResponse          = v1.StageTimelinesResponse
	SubmitForRedemptionMsgReply     = v1.SubmitForRedemptionMsgReply
	SubmitForRedemptionMsgReq       = v1.SubmitForRedemptionMsgReq
	TimeReductionRequest            = v1.TimeReductionRequest
	TimeReductionResponse           = v1.TimeReductionResponse
	UpdateUserBalanceReq            = v1.UpdateUserBalanceReq
	UpdateUserBalanceResp           = v1.UpdateUserBalanceResp
	UserAuthInfoMsgReply            = v1.UserAuthInfoMsgReply
	UserAuthInfoMsgReq              = v1.UserAuthInfoMsgReq
	UserAuthenticationReply         = v1.UserAuthenticationReply
	UserAuthenticationReq           = v1.UserAuthenticationReq
	UserBalance                     = v1.UserBalance
	UserEditPersonalInfoMsgReply    = v1.UserEditPersonalInfoMsgReply
	UserEditPersonalInfoMsgReq      = v1.UserEditPersonalInfoMsgReq
	UserEditSensitiveInfoMsgReply   = v1.UserEditSensitiveInfoMsgReply
	UserEditSensitiveInfoMsgReq     = v1.UserEditSensitiveInfoMsgReq
	UserFarmInfoMsgReply            = v1.UserFarmInfoMsgReply
	UserFarmInfoMsgReq              = v1.UserFarmInfoMsgReq
	UserFarmOpsMsgReply             = v1.UserFarmOpsMsgReply
	UserFarmOpsMsgReq               = v1.UserFarmOpsMsgReq
	UserFortuneTreeInfo             = v1.UserFortuneTreeInfo
	UserFortuneTreeInfoMsgReply     = v1.UserFortuneTreeInfoMsgReply
	UserFortuneTreeInfoMsgReq       = v1.UserFortuneTreeInfoMsgReq
	UserFriendRankingInfoMsgReply   = v1.UserFriendRankingInfoMsgReply
	UserFriendRankingInfoMsgReq     = v1.UserFriendRankingInfoMsgReq
	UserIdReq                       = v1.UserIdReq
	UserLandDetail                  = v1.UserLandDetail
	UserLandInfoMsgReply            = v1.UserLandInfoMsgReply
	UserLandInfoMsgReq              = v1.UserLandInfoMsgReq
	UserLoginResp                   = v1.UserLoginResp
	UserOpsFortuneTreeMsgReply      = v1.UserOpsFortuneTreeMsgReply
	UserOpsFortuneTreeMsgReq        = v1.UserOpsFortuneTreeMsgReq
	UserPersonalInfoMsgReply        = v1.UserPersonalInfoMsgReply
	UserPersonalInfoMsgReq          = v1.UserPersonalInfoMsgReq
	UserPlantingDetail              = v1.UserPlantingDetail
	UserPurchaseGoodsMsgReply       = v1.UserPurchaseGoodsMsgReply
	UserPurchaseGoodsMsgReq         = v1.UserPurchaseGoodsMsgReq
	UserRegisterReq                 = v1.UserRegisterReq
	UserReply                       = v1.UserReply
	UserReq                         = v1.UserReq
	UserSignInReq                   = v1.UserSignInReq
	UserSignOutReq                  = v1.UserSignOutReq
	UserStorageDetail               = v1.UserStorageDetail
	UserStorageInfoMsgReply         = v1.UserStorageInfoMsgReply
	UserStorageInfoMsgReq           = v1.UserStorageInfoMsgReq
	UserWallet                      = v1.UserWallet
	VerifyAccountReq                = v1.VerifyAccountReq
	VerifySecondaryPasswordMsgReply = v1.VerifySecondaryPasswordMsgReply
	VerifySecondaryPasswordMsgReq   = v1.VerifySecondaryPasswordMsgReq
	VipInfo                         = v1.VipInfo

	UserInnerService interface {
		// 用户连接
		UserConnected(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*MsgReply, error)
		// 用户断开连接
		UserDisconnected(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*MsgReply, error)
		// 用户认证
		UserAuthentication(ctx context.Context, in *UserAuthInfoMsgReq, opts ...grpc.CallOption) (*UserAuthInfoMsgReply, error)
		// 用户个人信息
		UserPersonalInfo(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*UserPersonalInfoMsgReply, error)
		// 修改个人信息
		UserEditPersonalInfo(ctx context.Context, in *UserEditPersonalInfoMsgReq, opts ...grpc.CallOption) (*UserEditPersonalInfoMsgReply, error)
		// 修改个人敏感信息
		UserEditSensitiveInfo(ctx context.Context, in *UserEditSensitiveInfoMsgReq, opts ...grpc.CallOption) (*UserEditSensitiveInfoMsgReply, error)
		// 用户仓库信息
		UserStorageInfo(ctx context.Context, in *UserStorageInfoMsgReq, opts ...grpc.CallOption) (*UserStorageInfoMsgReply, error)
		// 用户农场信息
		UserFarmInfo(ctx context.Context, in *UserFarmInfoMsgReq, opts ...grpc.CallOption) (*UserFarmInfoMsgReply, error)
		// 用户土地信息
		UserLandInfo(ctx context.Context, in *UserLandInfoMsgReq, opts ...grpc.CallOption) (*UserLandInfoMsgReply, error)
		// 用户操作农场
		UserFarmOps(ctx context.Context, in *UserFarmOpsMsgReq, opts ...grpc.CallOption) (*UserFarmOpsMsgReply, error)
		// 获取好友列表及排名
		UserFriendRankingInfo(ctx context.Context, in *UserFriendRankingInfoMsgReq, opts ...grpc.CallOption) (*UserFriendRankingInfoMsgReply, error)
		// 获取全局用户列表和排名
		AllUserRankingInfo(ctx context.Context, in *AllUserRankingInfoMsgReq, opts ...grpc.CallOption) (*AllUserRankingInfoMsgReply, error)
		// 查看用户农场信息
		LookUserFarmsInfo(ctx context.Context, in *LookUserFarmsInfoMsgReq, opts ...grpc.CallOption) (*LookUserFarmsInfoMsgReply, error)
		// 用户购买商品
		UserPurchaseGoods(ctx context.Context, in *UserPurchaseGoodsMsgReq, opts ...grpc.CallOption) (*UserPurchaseGoodsMsgReply, error)
		// 用户的发财树信息
		UserFortuneTreeInfo(ctx context.Context, in *UserFortuneTreeInfoMsgReq, opts ...grpc.CallOption) (*UserFortuneTreeInfoMsgReply, error)
		// 用户收获发财树
		UserOpsFortuneTree(ctx context.Context, in *UserOpsFortuneTreeMsgReq, opts ...grpc.CallOption) (*UserOpsFortuneTreeMsgReply, error)
		// 校验二级密码
		VerifySecondaryPassword(ctx context.Context, in *VerifySecondaryPasswordMsgReq, opts ...grpc.CallOption) (*VerifySecondaryPasswordMsgReply, error)
		// 币商列表
		GetMerchantList(ctx context.Context, in *GetMerchantListMsgReq, opts ...grpc.CallOption) (*GetMerchantListMsgReply, error)
		// 币商金币汇率设置
		SetMerchantExchangeRate(ctx context.Context, in *MerchantExchangeRateMsgReq, opts ...grpc.CallOption) (*MerchantExchangeRateMsgReply, error)
		// 提交兑换
		SubmitForRedemption(ctx context.Context, in *SubmitForRedemptionMsgReq, opts ...grpc.CallOption) (*SubmitForRedemptionMsgReply, error)
		// 用户农场交易操作记录
		FarmTransactionRecords(ctx context.Context, in *FarmTransactionRecordsMsgReq, opts ...grpc.CallOption) (*FarmTransactionRecordsMsgReply, error)
	}

	defaultUserInnerService struct {
		cli zrpc.Client
	}
)

func NewUserInnerService(cli zrpc.Client) UserInnerService {
	return &defaultUserInnerService{
		cli: cli,
	}
}

// 用户连接
func (m *defaultUserInnerService) UserConnected(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*MsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserConnected(ctx, in, opts...)
}

// 用户断开连接
func (m *defaultUserInnerService) UserDisconnected(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*MsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserDisconnected(ctx, in, opts...)
}

// 用户认证
func (m *defaultUserInnerService) UserAuthentication(ctx context.Context, in *UserAuthInfoMsgReq, opts ...grpc.CallOption) (*UserAuthInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserAuthentication(ctx, in, opts...)
}

// 用户个人信息
func (m *defaultUserInnerService) UserPersonalInfo(ctx context.Context, in *UserPersonalInfoMsgReq, opts ...grpc.CallOption) (*UserPersonalInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserPersonalInfo(ctx, in, opts...)
}

// 修改个人信息
func (m *defaultUserInnerService) UserEditPersonalInfo(ctx context.Context, in *UserEditPersonalInfoMsgReq, opts ...grpc.CallOption) (*UserEditPersonalInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserEditPersonalInfo(ctx, in, opts...)
}

// 修改个人敏感信息
func (m *defaultUserInnerService) UserEditSensitiveInfo(ctx context.Context, in *UserEditSensitiveInfoMsgReq, opts ...grpc.CallOption) (*UserEditSensitiveInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserEditSensitiveInfo(ctx, in, opts...)
}

// 用户仓库信息
func (m *defaultUserInnerService) UserStorageInfo(ctx context.Context, in *UserStorageInfoMsgReq, opts ...grpc.CallOption) (*UserStorageInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserStorageInfo(ctx, in, opts...)
}

// 用户农场信息
func (m *defaultUserInnerService) UserFarmInfo(ctx context.Context, in *UserFarmInfoMsgReq, opts ...grpc.CallOption) (*UserFarmInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserFarmInfo(ctx, in, opts...)
}

// 用户土地信息
func (m *defaultUserInnerService) UserLandInfo(ctx context.Context, in *UserLandInfoMsgReq, opts ...grpc.CallOption) (*UserLandInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserLandInfo(ctx, in, opts...)
}

// 用户操作农场
func (m *defaultUserInnerService) UserFarmOps(ctx context.Context, in *UserFarmOpsMsgReq, opts ...grpc.CallOption) (*UserFarmOpsMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserFarmOps(ctx, in, opts...)
}

// 获取好友列表及排名
func (m *defaultUserInnerService) UserFriendRankingInfo(ctx context.Context, in *UserFriendRankingInfoMsgReq, opts ...grpc.CallOption) (*UserFriendRankingInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserFriendRankingInfo(ctx, in, opts...)
}

// 获取全局用户列表和排名
func (m *defaultUserInnerService) AllUserRankingInfo(ctx context.Context, in *AllUserRankingInfoMsgReq, opts ...grpc.CallOption) (*AllUserRankingInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.AllUserRankingInfo(ctx, in, opts...)
}

// 查看用户农场信息
func (m *defaultUserInnerService) LookUserFarmsInfo(ctx context.Context, in *LookUserFarmsInfoMsgReq, opts ...grpc.CallOption) (*LookUserFarmsInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.LookUserFarmsInfo(ctx, in, opts...)
}

// 用户购买商品
func (m *defaultUserInnerService) UserPurchaseGoods(ctx context.Context, in *UserPurchaseGoodsMsgReq, opts ...grpc.CallOption) (*UserPurchaseGoodsMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserPurchaseGoods(ctx, in, opts...)
}

// 用户的发财树信息
func (m *defaultUserInnerService) UserFortuneTreeInfo(ctx context.Context, in *UserFortuneTreeInfoMsgReq, opts ...grpc.CallOption) (*UserFortuneTreeInfoMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserFortuneTreeInfo(ctx, in, opts...)
}

// 用户收获发财树
func (m *defaultUserInnerService) UserOpsFortuneTree(ctx context.Context, in *UserOpsFortuneTreeMsgReq, opts ...grpc.CallOption) (*UserOpsFortuneTreeMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserOpsFortuneTree(ctx, in, opts...)
}

// 校验二级密码
func (m *defaultUserInnerService) VerifySecondaryPassword(ctx context.Context, in *VerifySecondaryPasswordMsgReq, opts ...grpc.CallOption) (*VerifySecondaryPasswordMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.VerifySecondaryPassword(ctx, in, opts...)
}

// 币商列表
func (m *defaultUserInnerService) GetMerchantList(ctx context.Context, in *GetMerchantListMsgReq, opts ...grpc.CallOption) (*GetMerchantListMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.GetMerchantList(ctx, in, opts...)
}

// 币商金币汇率设置
func (m *defaultUserInnerService) SetMerchantExchangeRate(ctx context.Context, in *MerchantExchangeRateMsgReq, opts ...grpc.CallOption) (*MerchantExchangeRateMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.SetMerchantExchangeRate(ctx, in, opts...)
}

// 提交兑换
func (m *defaultUserInnerService) SubmitForRedemption(ctx context.Context, in *SubmitForRedemptionMsgReq, opts ...grpc.CallOption) (*SubmitForRedemptionMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.SubmitForRedemption(ctx, in, opts...)
}

// 用户农场交易操作记录
func (m *defaultUserInnerService) FarmTransactionRecords(ctx context.Context, in *FarmTransactionRecordsMsgReq, opts ...grpc.CallOption) (*FarmTransactionRecordsMsgReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.FarmTransactionRecords(ctx, in, opts...)
}
