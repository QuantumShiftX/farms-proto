// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userinnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ForgotPasswordReq       = v1.ForgotPasswordReq
	RequestClientInfo       = v1.RequestClientInfo
	UserAuthenticationReply = v1.UserAuthenticationReply
	UserAuthenticationReq   = v1.UserAuthenticationReq
	UserIdReq               = v1.UserIdReq
	UserLoginResp           = v1.UserLoginResp
	UserRegisterReq         = v1.UserRegisterReq
	UserReply               = v1.UserReply
	UserReq                 = v1.UserReq
	UserSignInReq           = v1.UserSignInReq
	UserSignOutReq          = v1.UserSignOutReq
	VerifyAccountReq        = v1.VerifyAccountReq

	UserInnerService interface {
		UserConnected(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error)
		UserDisconnected(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error)
		UserAuthentication(ctx context.Context, in *UserAuthenticationReq, opts ...grpc.CallOption) (*UserAuthenticationReply, error)
	}

	defaultUserInnerService struct {
		cli zrpc.Client
	}
)

func NewUserInnerService(cli zrpc.Client) UserInnerService {
	return &defaultUserInnerService{
		cli: cli,
	}
}

func (m *defaultUserInnerService) UserConnected(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserConnected(ctx, in, opts...)
}

func (m *defaultUserInnerService) UserDisconnected(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserDisconnected(ctx, in, opts...)
}

func (m *defaultUserInnerService) UserAuthentication(ctx context.Context, in *UserAuthenticationReq, opts ...grpc.CallOption) (*UserAuthenticationReply, error) {
	client := v1.NewUserInnerServiceClient(m.cli.Conn())
	return client.UserAuthentication(ctx, in, opts...)
}
