// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userauthservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ForgotPasswordReq       = v1.ForgotPasswordReq
	RequestClientInfo       = v1.RequestClientInfo
	UserAuthenticationReply = v1.UserAuthenticationReply
	UserAuthenticationReq   = v1.UserAuthenticationReq
	UserIdReq               = v1.UserIdReq
	UserLoginReq            = v1.UserLoginReq
	UserLoginResp           = v1.UserLoginResp
	UserRegisterReq         = v1.UserRegisterReq
	UserReply               = v1.UserReply
	UserReq                 = v1.UserReq
	VerifyAccountReq        = v1.VerifyAccountReq

	UserAuthService interface {
		Register(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserReply, error)
		Login(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error)
		ForgotPwd(ctx context.Context, in *ForgotPasswordReq, opts ...grpc.CallOption) (*UserReply, error)
		VerifyAccount(ctx context.Context, in *VerifyAccountReq, opts ...grpc.CallOption) (*UserReply, error)
		LoginOut(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error)
	}

	defaultUserAuthService struct {
		cli zrpc.Client
	}
)

func NewUserAuthService(cli zrpc.Client) UserAuthService {
	return &defaultUserAuthService{
		cli: cli,
	}
}

func (m *defaultUserAuthService) Register(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserAuthService) Login(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserAuthService) ForgotPwd(ctx context.Context, in *ForgotPasswordReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.ForgotPwd(ctx, in, opts...)
}

func (m *defaultUserAuthService) VerifyAccount(ctx context.Context, in *VerifyAccountReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.VerifyAccount(ctx, in, opts...)
}

func (m *defaultUserAuthService) LoginOut(ctx context.Context, in *UserIdReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.LoginOut(ctx, in, opts...)
}
