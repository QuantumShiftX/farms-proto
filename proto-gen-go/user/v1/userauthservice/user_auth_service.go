// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userauthservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdjustHarvestTimeRequest      = v1.AdjustHarvestTimeRequest
	AdjustHarvestTimeResponse     = v1.AdjustHarvestTimeResponse
	AllUserRankingInfoMsgData     = v1.AllUserRankingInfoMsgData
	AllUserRankingInfoMsgReply    = v1.AllUserRankingInfoMsgReply
	AllUserRankingInfoMsgReq      = v1.AllUserRankingInfoMsgReq
	ForgotPasswordReq             = v1.ForgotPasswordReq
	FriendRankingInfo             = v1.FriendRankingInfo
	GetOnlineUserListReply        = v1.GetOnlineUserListReply
	GetOnlineUserListReq          = v1.GetOnlineUserListReq
	GrowthProgressRequest         = v1.GrowthProgressRequest
	GrowthProgressResponse        = v1.GrowthProgressResponse
	LookUserFarmsInfoMsgData      = v1.LookUserFarmsInfoMsgData
	LookUserFarmsInfoMsgReply     = v1.LookUserFarmsInfoMsgReply
	LookUserFarmsInfoMsgReq       = v1.LookUserFarmsInfoMsgReq
	MaintenanceNeeds              = v1.MaintenanceNeeds
	MaintenanceNeedsRequest       = v1.MaintenanceNeedsRequest
	MaintenanceNeedsResponse      = v1.MaintenanceNeedsResponse
	MsgData                       = v1.MsgData
	MsgReply                      = v1.MsgReply
	MsgReq                        = v1.MsgReq
	MyRankingInfo                 = v1.MyRankingInfo
	PlantInfo                     = v1.PlantInfo
	PlantStateInfo                = v1.PlantStateInfo
	PlantStateRequest             = v1.PlantStateRequest
	PlantStateResponse            = v1.PlantStateResponse
	PlantStatusRequest            = v1.PlantStatusRequest
	PlantStatusResponse           = v1.PlantStatusResponse
	RequestClientInfo             = v1.RequestClientInfo
	StageTime                     = v1.StageTime
	StageTimelinesRequest         = v1.StageTimelinesRequest
	StageTimelinesResponse        = v1.StageTimelinesResponse
	TimeReductionRequest          = v1.TimeReductionRequest
	TimeReductionResponse         = v1.TimeReductionResponse
	UserAuthInfoMsgData           = v1.UserAuthInfoMsgData
	UserAuthInfoMsgReply          = v1.UserAuthInfoMsgReply
	UserAuthInfoMsgReq            = v1.UserAuthInfoMsgReq
	UserAuthenticationReply       = v1.UserAuthenticationReply
	UserAuthenticationReq         = v1.UserAuthenticationReq
	UserBalance                   = v1.UserBalance
	UserEditPersonalInfoMsgReply  = v1.UserEditPersonalInfoMsgReply
	UserEditPersonalInfoMsgReq    = v1.UserEditPersonalInfoMsgReq
	UserEditSensitiveInfoMsgReply = v1.UserEditSensitiveInfoMsgReply
	UserEditSensitiveInfoMsgReq   = v1.UserEditSensitiveInfoMsgReq
	UserFarmInfoMsgData           = v1.UserFarmInfoMsgData
	UserFarmInfoMsgReply          = v1.UserFarmInfoMsgReply
	UserFarmInfoMsgReq            = v1.UserFarmInfoMsgReq
	UserFarmOpsMsgReply           = v1.UserFarmOpsMsgReply
	UserFarmOpsMsgReq             = v1.UserFarmOpsMsgReq
	UserFortuneTreeInfo           = v1.UserFortuneTreeInfo
	UserFortuneTreeInfoMsgData    = v1.UserFortuneTreeInfoMsgData
	UserFortuneTreeInfoMsgReply   = v1.UserFortuneTreeInfoMsgReply
	UserFortuneTreeInfoMsgReq     = v1.UserFortuneTreeInfoMsgReq
	UserFriendRankingInfoMsgData  = v1.UserFriendRankingInfoMsgData
	UserFriendRankingInfoMsgReply = v1.UserFriendRankingInfoMsgReply
	UserFriendRankingInfoMsgReq   = v1.UserFriendRankingInfoMsgReq
	UserIdReq                     = v1.UserIdReq
	UserLandDetail                = v1.UserLandDetail
	UserLandInfoMsgData           = v1.UserLandInfoMsgData
	UserLandInfoMsgReply          = v1.UserLandInfoMsgReply
	UserLandInfoMsgReq            = v1.UserLandInfoMsgReq
	UserLoginResp                 = v1.UserLoginResp
	UserPersonalInfoMsgData       = v1.UserPersonalInfoMsgData
	UserPersonalInfoMsgReply      = v1.UserPersonalInfoMsgReply
	UserPersonalInfoMsgReq        = v1.UserPersonalInfoMsgReq
	UserPlantingDetail            = v1.UserPlantingDetail
	UserPurchaseGoodsMsgReply     = v1.UserPurchaseGoodsMsgReply
	UserPurchaseGoodsMsgReq       = v1.UserPurchaseGoodsMsgReq
	UserRegisterReq               = v1.UserRegisterReq
	UserReply                     = v1.UserReply
	UserReq                       = v1.UserReq
	UserSignInReq                 = v1.UserSignInReq
	UserSignOutReq                = v1.UserSignOutReq
	UserStorageDetail             = v1.UserStorageDetail
	UserStorageInfoMsgData        = v1.UserStorageInfoMsgData
	UserStorageInfoMsgReply       = v1.UserStorageInfoMsgReply
	UserStorageInfoMsgReq         = v1.UserStorageInfoMsgReq
	UserWallet                    = v1.UserWallet
	VerifyAccountReq              = v1.VerifyAccountReq

	UserAuthService interface {
		Register(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserReply, error)
		Login(ctx context.Context, in *UserSignInReq, opts ...grpc.CallOption) (*UserLoginResp, error)
		ForgotPwd(ctx context.Context, in *ForgotPasswordReq, opts ...grpc.CallOption) (*UserReply, error)
		VerifyAccount(ctx context.Context, in *VerifyAccountReq, opts ...grpc.CallOption) (*UserReply, error)
		LoginOut(ctx context.Context, in *UserSignOutReq, opts ...grpc.CallOption) (*UserReply, error)
	}

	defaultUserAuthService struct {
		cli zrpc.Client
	}
)

func NewUserAuthService(cli zrpc.Client) UserAuthService {
	return &defaultUserAuthService{
		cli: cli,
	}
}

func (m *defaultUserAuthService) Register(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUserAuthService) Login(ctx context.Context, in *UserSignInReq, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserAuthService) ForgotPwd(ctx context.Context, in *ForgotPasswordReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.ForgotPwd(ctx, in, opts...)
}

func (m *defaultUserAuthService) VerifyAccount(ctx context.Context, in *VerifyAccountReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.VerifyAccount(ctx, in, opts...)
}

func (m *defaultUserAuthService) LoginOut(ctx context.Context, in *UserSignOutReq, opts ...grpc.CallOption) (*UserReply, error) {
	client := v1.NewUserAuthServiceClient(m.cli.Conn())
	return client.LoginOut(ctx, in, opts...)
}
