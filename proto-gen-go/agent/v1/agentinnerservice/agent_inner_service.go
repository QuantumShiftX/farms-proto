// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: agent.proto

package agentinnerservice

import (
	"context"

	"farms-rpc-server/app/agent/pb/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AgentReply = v1.AgentReply
	AgentReq   = v1.AgentReq

	AgentInnerService interface {
		Test(ctx context.Context, in *AgentReq, opts ...grpc.CallOption) (*AgentReply, error)
	}

	defaultAgentInnerService struct {
		cli zrpc.Client
	}
)

func NewAgentInnerService(cli zrpc.Client) AgentInnerService {
	return &defaultAgentInnerService{
		cli: cli,
	}
}

func (m *defaultAgentInnerService) Test(ctx context.Context, in *AgentReq, opts ...grpc.CallOption) (*AgentReply, error) {
	client := v1.NewAgentInnerServiceClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
