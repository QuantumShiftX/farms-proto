// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: payment.proto

package agentpayinnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/payment/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AgentPayApplyReply    = v1.AgentPayApplyReply
	AgentPayApplyReq      = v1.AgentPayApplyReq
	AgentPayBalanceReply  = v1.AgentPayBalanceReply
	AgentPayBalanceReq    = v1.AgentPayBalanceReq
	AgentPayNotifyReq     = v1.AgentPayNotifyReq
	AgentPayQueryCepReply = v1.AgentPayQueryCepReply
	AgentPayQueryReply    = v1.AgentPayQueryReply
	AgentPayQueryReq      = v1.AgentPayQueryReq
	VerifyNotifyReply     = v1.VerifyNotifyReply

	AgentPayInnerService interface {
		// 申请代付
		Apply(ctx context.Context, in *AgentPayApplyReq, opts ...grpc.CallOption) (*AgentPayApplyReply, error)
		// 查询代付订单
		QueryOrder(ctx context.Context, in *AgentPayQueryReq, opts ...grpc.CallOption) (*AgentPayQueryReply, error)
		// 查询代付凭证
		QueryCep(ctx context.Context, in *AgentPayQueryReq, opts ...grpc.CallOption) (*AgentPayQueryCepReply, error)
		// 查询余额
		QueryBalance(ctx context.Context, in *AgentPayBalanceReq, opts ...grpc.CallOption) (*AgentPayBalanceReply, error)
		// 验证回调通知
		VerifyNotify(ctx context.Context, in *AgentPayNotifyReq, opts ...grpc.CallOption) (*VerifyNotifyReply, error)
	}

	defaultAgentPayInnerService struct {
		cli zrpc.Client
	}
)

func NewAgentPayInnerService(cli zrpc.Client) AgentPayInnerService {
	return &defaultAgentPayInnerService{
		cli: cli,
	}
}

// 申请代付
func (m *defaultAgentPayInnerService) Apply(ctx context.Context, in *AgentPayApplyReq, opts ...grpc.CallOption) (*AgentPayApplyReply, error) {
	client := v1.NewAgentPayInnerServiceClient(m.cli.Conn())
	return client.Apply(ctx, in, opts...)
}

// 查询代付订单
func (m *defaultAgentPayInnerService) QueryOrder(ctx context.Context, in *AgentPayQueryReq, opts ...grpc.CallOption) (*AgentPayQueryReply, error) {
	client := v1.NewAgentPayInnerServiceClient(m.cli.Conn())
	return client.QueryOrder(ctx, in, opts...)
}

// 查询代付凭证
func (m *defaultAgentPayInnerService) QueryCep(ctx context.Context, in *AgentPayQueryReq, opts ...grpc.CallOption) (*AgentPayQueryCepReply, error) {
	client := v1.NewAgentPayInnerServiceClient(m.cli.Conn())
	return client.QueryCep(ctx, in, opts...)
}

// 查询余额
func (m *defaultAgentPayInnerService) QueryBalance(ctx context.Context, in *AgentPayBalanceReq, opts ...grpc.CallOption) (*AgentPayBalanceReply, error) {
	client := v1.NewAgentPayInnerServiceClient(m.cli.Conn())
	return client.QueryBalance(ctx, in, opts...)
}

// 验证回调通知
func (m *defaultAgentPayInnerService) VerifyNotify(ctx context.Context, in *AgentPayNotifyReq, opts ...grpc.CallOption) (*VerifyNotifyReply, error) {
	client := v1.NewAgentPayInnerServiceClient(m.cli.Conn())
	return client.VerifyNotify(ctx, in, opts...)
}
