// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: payment.proto

package paymentinnerservice

import (
	"context"

	"github.com/QuantumShiftX/farms-proto/proto-gen-go/payment/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AgentPayNotifyRequest            = v1.AgentPayNotifyRequest
	AgentPayNotifyResponse           = v1.AgentPayNotifyResponse
	ApplyAgentPayRequest             = v1.ApplyAgentPayRequest
	ApplyAgentPayResponse            = v1.ApplyAgentPayResponse
	CommonRequest                    = v1.CommonRequest
	CreateCashierRequest             = v1.CreateCashierRequest
	CreateCashierResponse            = v1.CreateCashierResponse
	CreateOrderRequest               = v1.CreateOrderRequest
	CreateOrderResponse              = v1.CreateOrderResponse
	PayNotifyData                    = v1.PayNotifyData
	PayNotifyResponse                = v1.PayNotifyResponse
	PayParams                        = v1.PayParams
	PaymentNotificationReq           = v1.PaymentNotificationReq
	PaymentReply                     = v1.PaymentReply
	PaymentReq                       = v1.PaymentReq
	QueryAgentPayBalanceRequest      = v1.QueryAgentPayBalanceRequest
	QueryAgentPayBalanceResponse     = v1.QueryAgentPayBalanceResponse
	QueryAgentPayCertificateRequest  = v1.QueryAgentPayCertificateRequest
	QueryAgentPayCertificateResponse = v1.QueryAgentPayCertificateResponse
	QueryAgentPayOrderRequest        = v1.QueryAgentPayOrderRequest
	QueryAgentPayOrderResponse       = v1.QueryAgentPayOrderResponse
	QueryOrderByUTRRequest           = v1.QueryOrderByUTRRequest
	QueryOrderRequest                = v1.QueryOrderRequest
	QueryOrderResponse               = v1.QueryOrderResponse
	RechargeChannel                  = v1.RechargeChannel
	RechargeChannelsInfoMsgReply     = v1.RechargeChannelsInfoMsgReply
	RechargeChannelsInfoMsgReq       = v1.RechargeChannelsInfoMsgReq
	UserRechargeInfoMsgReply         = v1.UserRechargeInfoMsgReply
	UserRechargeInfoMsgReq           = v1.UserRechargeInfoMsgReq
	UserSetWithdrawChannelMsgReply   = v1.UserSetWithdrawChannelMsgReply
	UserSetWithdrawChannelMsgReq     = v1.UserSetWithdrawChannelMsgReq
	UserWithdrawChannelInfoMsgReply  = v1.UserWithdrawChannelInfoMsgReply
	UserWithdrawChannelInfoMsgReq    = v1.UserWithdrawChannelInfoMsgReq
	UserWithdrawInfoMsgReply         = v1.UserWithdrawInfoMsgReply
	UserWithdrawInfoMsgReq           = v1.UserWithdrawInfoMsgReq
	WithdrawChannel                  = v1.WithdrawChannel

	PaymentInnerService interface {
		// 统一下单接口
		CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
		// 查询订单接口
		QueryOrder(ctx context.Context, in *QueryOrderRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error)
		// 通过UTR查询订单接口
		QueryOrderByUTR(ctx context.Context, in *QueryOrderByUTRRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error)
		// 创建收银台接口
		CreateCashier(ctx context.Context, in *CreateCashierRequest, opts ...grpc.CallOption) (*CreateCashierResponse, error)
	}

	defaultPaymentInnerService struct {
		cli zrpc.Client
	}
)

func NewPaymentInnerService(cli zrpc.Client) PaymentInnerService {
	return &defaultPaymentInnerService{
		cli: cli,
	}
}

// 统一下单接口
func (m *defaultPaymentInnerService) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	client := v1.NewPaymentInnerServiceClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

// 查询订单接口
func (m *defaultPaymentInnerService) QueryOrder(ctx context.Context, in *QueryOrderRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error) {
	client := v1.NewPaymentInnerServiceClient(m.cli.Conn())
	return client.QueryOrder(ctx, in, opts...)
}

// 通过UTR查询订单接口
func (m *defaultPaymentInnerService) QueryOrderByUTR(ctx context.Context, in *QueryOrderByUTRRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error) {
	client := v1.NewPaymentInnerServiceClient(m.cli.Conn())
	return client.QueryOrderByUTR(ctx, in, opts...)
}

// 创建收银台接口
func (m *defaultPaymentInnerService) CreateCashier(ctx context.Context, in *CreateCashierRequest, opts ...grpc.CallOption) (*CreateCashierResponse, error) {
	client := v1.NewPaymentInnerServiceClient(m.cli.Conn())
	return client.CreateCashier(ctx, in, opts...)
}
