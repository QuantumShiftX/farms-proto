// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.3
// source: payment/v1/payment.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 代付申请请求
type AgentPayApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId          string `protobuf:"bytes,1,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`
	ProductId      string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MchOrderNo     string `protobuf:"bytes,3,opt,name=mch_order_no,json=mchOrderNo,proto3" json:"mch_order_no,omitempty"`
	Amount         int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency       string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	CollectionType string `protobuf:"bytes,6,opt,name=collection_type,json=collectionType,proto3" json:"collection_type,omitempty"`
	BankName       string `protobuf:"bytes,7,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	AccountName    string `protobuf:"bytes,8,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountNo      string `protobuf:"bytes,9,opt,name=account_no,json=accountNo,proto3" json:"account_no,omitempty"`
	Province       string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`
	City           string `protobuf:"bytes,11,opt,name=city,proto3" json:"city,omitempty"`
	AccountAttr    string `protobuf:"bytes,12,opt,name=account_attr,json=accountAttr,proto3" json:"account_attr,omitempty"`
	BankNumber     string `protobuf:"bytes,13,opt,name=bank_number,json=bankNumber,proto3" json:"bank_number,omitempty"`
	Uid            string `protobuf:"bytes,14,opt,name=uid,proto3" json:"uid,omitempty"`
	UserName       string `protobuf:"bytes,15,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserMobile     string `protobuf:"bytes,16,opt,name=user_mobile,json=userMobile,proto3" json:"user_mobile,omitempty"`
	UserEmail      string `protobuf:"bytes,17,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	NotifyUrl      string `protobuf:"bytes,18,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	Remark         string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	Extra          string `protobuf:"bytes,20,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *AgentPayApplyReq) Reset() {
	*x = AgentPayApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayApplyReq) ProtoMessage() {}

func (x *AgentPayApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayApplyReq.ProtoReflect.Descriptor instead.
func (*AgentPayApplyReq) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

func (x *AgentPayApplyReq) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AgentPayApplyReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AgentPayApplyReq) GetMchOrderNo() string {
	if x != nil {
		return x.MchOrderNo
	}
	return ""
}

func (x *AgentPayApplyReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AgentPayApplyReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AgentPayApplyReq) GetCollectionType() string {
	if x != nil {
		return x.CollectionType
	}
	return ""
}

func (x *AgentPayApplyReq) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *AgentPayApplyReq) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AgentPayApplyReq) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *AgentPayApplyReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AgentPayApplyReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AgentPayApplyReq) GetAccountAttr() string {
	if x != nil {
		return x.AccountAttr
	}
	return ""
}

func (x *AgentPayApplyReq) GetBankNumber() string {
	if x != nil {
		return x.BankNumber
	}
	return ""
}

func (x *AgentPayApplyReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AgentPayApplyReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgentPayApplyReq) GetUserMobile() string {
	if x != nil {
		return x.UserMobile
	}
	return ""
}

func (x *AgentPayApplyReq) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *AgentPayApplyReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *AgentPayApplyReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AgentPayApplyReq) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

// 代付申请响应
type AgentPayApplyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode         string `protobuf:"bytes,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg          string `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	AgentpayOrderId string `protobuf:"bytes,3,opt,name=agentpay_order_id,json=agentpayOrderId,proto3" json:"agentpay_order_id,omitempty"`
	Fee             int64  `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Extra           string `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Sign            string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AgentPayApplyReply) Reset() {
	*x = AgentPayApplyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayApplyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayApplyReply) ProtoMessage() {}

func (x *AgentPayApplyReply) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayApplyReply.ProtoReflect.Descriptor instead.
func (*AgentPayApplyReply) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

func (x *AgentPayApplyReply) GetRetCode() string {
	if x != nil {
		return x.RetCode
	}
	return ""
}

func (x *AgentPayApplyReply) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *AgentPayApplyReply) GetAgentpayOrderId() string {
	if x != nil {
		return x.AgentpayOrderId
	}
	return ""
}

func (x *AgentPayApplyReply) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AgentPayApplyReply) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *AgentPayApplyReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentPayApplyReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 代付查询请求
type AgentPayQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId           string `protobuf:"bytes,1,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`
	MchOrderNo      string `protobuf:"bytes,2,opt,name=mch_order_no,json=mchOrderNo,proto3" json:"mch_order_no,omitempty"`
	AgentpayOrderId string `protobuf:"bytes,3,opt,name=agentpay_order_id,json=agentpayOrderId,proto3" json:"agentpay_order_id,omitempty"`
}

func (x *AgentPayQueryReq) Reset() {
	*x = AgentPayQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayQueryReq) ProtoMessage() {}

func (x *AgentPayQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayQueryReq.ProtoReflect.Descriptor instead.
func (*AgentPayQueryReq) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

func (x *AgentPayQueryReq) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AgentPayQueryReq) GetMchOrderNo() string {
	if x != nil {
		return x.MchOrderNo
	}
	return ""
}

func (x *AgentPayQueryReq) GetAgentpayOrderId() string {
	if x != nil {
		return x.AgentpayOrderId
	}
	return ""
}

// 代付查询响应
type AgentPayQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode         string `protobuf:"bytes,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	MchOrderNo      string `protobuf:"bytes,2,opt,name=mch_order_no,json=mchOrderNo,proto3" json:"mch_order_no,omitempty"`
	AgentpayOrderId string `protobuf:"bytes,3,opt,name=agentpay_order_id,json=agentpayOrderId,proto3" json:"agentpay_order_id,omitempty"`
	Amount          int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee             int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	TransMsg        string `protobuf:"bytes,7,opt,name=trans_msg,json=transMsg,proto3" json:"trans_msg,omitempty"`
	Extra           string `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	Sign            string `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AgentPayQueryReply) Reset() {
	*x = AgentPayQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayQueryReply) ProtoMessage() {}

func (x *AgentPayQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayQueryReply.ProtoReflect.Descriptor instead.
func (*AgentPayQueryReply) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{3}
}

func (x *AgentPayQueryReply) GetRetCode() string {
	if x != nil {
		return x.RetCode
	}
	return ""
}

func (x *AgentPayQueryReply) GetMchOrderNo() string {
	if x != nil {
		return x.MchOrderNo
	}
	return ""
}

func (x *AgentPayQueryReply) GetAgentpayOrderId() string {
	if x != nil {
		return x.AgentpayOrderId
	}
	return ""
}

func (x *AgentPayQueryReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AgentPayQueryReply) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AgentPayQueryReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentPayQueryReply) GetTransMsg() string {
	if x != nil {
		return x.TransMsg
	}
	return ""
}

func (x *AgentPayQueryReply) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *AgentPayQueryReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 代付凭证查询响应
type AgentPayQueryCepReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode         string `protobuf:"bytes,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	MchOrderNo      string `protobuf:"bytes,2,opt,name=mch_order_no,json=mchOrderNo,proto3" json:"mch_order_no,omitempty"`
	AgentpayOrderId string `protobuf:"bytes,3,opt,name=agentpay_order_id,json=agentpayOrderId,proto3" json:"agentpay_order_id,omitempty"`
	Amount          int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee             int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	TransMsg        string `protobuf:"bytes,7,opt,name=trans_msg,json=transMsg,proto3" json:"trans_msg,omitempty"`
	Extra           string `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	UrlCep          string `protobuf:"bytes,9,opt,name=url_cep,json=urlCep,proto3" json:"url_cep,omitempty"`
	Sign            string `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AgentPayQueryCepReply) Reset() {
	*x = AgentPayQueryCepReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayQueryCepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayQueryCepReply) ProtoMessage() {}

func (x *AgentPayQueryCepReply) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayQueryCepReply.ProtoReflect.Descriptor instead.
func (*AgentPayQueryCepReply) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{4}
}

func (x *AgentPayQueryCepReply) GetRetCode() string {
	if x != nil {
		return x.RetCode
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetMchOrderNo() string {
	if x != nil {
		return x.MchOrderNo
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetAgentpayOrderId() string {
	if x != nil {
		return x.AgentpayOrderId
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AgentPayQueryCepReply) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AgentPayQueryCepReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentPayQueryCepReply) GetTransMsg() string {
	if x != nil {
		return x.TransMsg
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetUrlCep() string {
	if x != nil {
		return x.UrlCep
	}
	return ""
}

func (x *AgentPayQueryCepReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 余额查询请求
type AgentPayBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId string `protobuf:"bytes,1,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`
}

func (x *AgentPayBalanceReq) Reset() {
	*x = AgentPayBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayBalanceReq) ProtoMessage() {}

func (x *AgentPayBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayBalanceReq.ProtoReflect.Descriptor instead.
func (*AgentPayBalanceReq) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{5}
}

func (x *AgentPayBalanceReq) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

// 余额查询响应
type AgentPayBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode                  string `protobuf:"bytes,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	AvailableAgentpayBalance int64  `protobuf:"varint,2,opt,name=available_agentpay_balance,json=availableAgentpayBalance,proto3" json:"available_agentpay_balance,omitempty"`
	AgentpayBalance          int64  `protobuf:"varint,3,opt,name=agentpay_balance,json=agentpayBalance,proto3" json:"agentpay_balance,omitempty"`
	AvailableBalance         int64  `protobuf:"varint,4,opt,name=available_balance,json=availableBalance,proto3" json:"available_balance,omitempty"`
	Balance                  int64  `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	Sign                     string `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AgentPayBalanceReply) Reset() {
	*x = AgentPayBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayBalanceReply) ProtoMessage() {}

func (x *AgentPayBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayBalanceReply.ProtoReflect.Descriptor instead.
func (*AgentPayBalanceReply) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{6}
}

func (x *AgentPayBalanceReply) GetRetCode() string {
	if x != nil {
		return x.RetCode
	}
	return ""
}

func (x *AgentPayBalanceReply) GetAvailableAgentpayBalance() int64 {
	if x != nil {
		return x.AvailableAgentpayBalance
	}
	return 0
}

func (x *AgentPayBalanceReply) GetAgentpayBalance() int64 {
	if x != nil {
		return x.AgentpayBalance
	}
	return 0
}

func (x *AgentPayBalanceReply) GetAvailableBalance() int64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

func (x *AgentPayBalanceReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AgentPayBalanceReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 回调通知请求
type AgentPayNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentpayOrderId string `protobuf:"bytes,1,opt,name=agentpay_order_id,json=agentpayOrderId,proto3" json:"agentpay_order_id,omitempty"`
	MchOrderNo      string `protobuf:"bytes,2,opt,name=mch_order_no,json=mchOrderNo,proto3" json:"mch_order_no,omitempty"`
	Status          int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Amount          int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Fee             int64  `protobuf:"varint,5,opt,name=fee,proto3" json:"fee,omitempty"`
	TransMsg        string `protobuf:"bytes,6,opt,name=trans_msg,json=transMsg,proto3" json:"trans_msg,omitempty"`
	Extra           string `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
	Sign            string `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *AgentPayNotifyReq) Reset() {
	*x = AgentPayNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPayNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPayNotifyReq) ProtoMessage() {}

func (x *AgentPayNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPayNotifyReq.ProtoReflect.Descriptor instead.
func (*AgentPayNotifyReq) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{7}
}

func (x *AgentPayNotifyReq) GetAgentpayOrderId() string {
	if x != nil {
		return x.AgentpayOrderId
	}
	return ""
}

func (x *AgentPayNotifyReq) GetMchOrderNo() string {
	if x != nil {
		return x.MchOrderNo
	}
	return ""
}

func (x *AgentPayNotifyReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentPayNotifyReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AgentPayNotifyReq) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *AgentPayNotifyReq) GetTransMsg() string {
	if x != nil {
		return x.TransMsg
	}
	return ""
}

func (x *AgentPayNotifyReq) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *AgentPayNotifyReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

// 验证通知响应
type VerifyNotifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *VerifyNotifyReply) Reset() {
	*x = VerifyNotifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_v1_payment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyNotifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyNotifyReply) ProtoMessage() {}

func (x *VerifyNotifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyNotifyReply.ProtoReflect.Descriptor instead.
func (*VerifyNotifyReply) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{8}
}

func (x *VerifyNotifyReply) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

var File_payment_v1_payment_proto protoreflect.FileDescriptor

var file_payment_v1_payment_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x22, 0xd6, 0x04, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6d,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22,
	0xc8, 0x01, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x77, 0x0a, 0x10, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xa2, 0x02, 0x0a,
	0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x65,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x65, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x43, 0x65, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x22, 0x2b, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x22, 0xf5,
	0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x70, 0x61, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x63, 0x68, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x22, 0x2e, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x32, 0xa0, 0x03, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x05,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x65, 0x70, 0x12,
	0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payment_v1_payment_proto_rawDescOnce sync.Once
	file_payment_v1_payment_proto_rawDescData = file_payment_v1_payment_proto_rawDesc
)

func file_payment_v1_payment_proto_rawDescGZIP() []byte {
	file_payment_v1_payment_proto_rawDescOnce.Do(func() {
		file_payment_v1_payment_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_v1_payment_proto_rawDescData)
	})
	return file_payment_v1_payment_proto_rawDescData
}

var file_payment_v1_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_payment_v1_payment_proto_goTypes = []interface{}{
	(*AgentPayApplyReq)(nil),      // 0: payment.v1.AgentPayApplyReq
	(*AgentPayApplyReply)(nil),    // 1: payment.v1.AgentPayApplyReply
	(*AgentPayQueryReq)(nil),      // 2: payment.v1.AgentPayQueryReq
	(*AgentPayQueryReply)(nil),    // 3: payment.v1.AgentPayQueryReply
	(*AgentPayQueryCepReply)(nil), // 4: payment.v1.AgentPayQueryCepReply
	(*AgentPayBalanceReq)(nil),    // 5: payment.v1.AgentPayBalanceReq
	(*AgentPayBalanceReply)(nil),  // 6: payment.v1.AgentPayBalanceReply
	(*AgentPayNotifyReq)(nil),     // 7: payment.v1.AgentPayNotifyReq
	(*VerifyNotifyReply)(nil),     // 8: payment.v1.VerifyNotifyReply
}
var file_payment_v1_payment_proto_depIdxs = []int32{
	0, // 0: payment.v1.AgentPayInnerService.Apply:input_type -> payment.v1.AgentPayApplyReq
	2, // 1: payment.v1.AgentPayInnerService.QueryOrder:input_type -> payment.v1.AgentPayQueryReq
	2, // 2: payment.v1.AgentPayInnerService.QueryCep:input_type -> payment.v1.AgentPayQueryReq
	5, // 3: payment.v1.AgentPayInnerService.QueryBalance:input_type -> payment.v1.AgentPayBalanceReq
	7, // 4: payment.v1.AgentPayInnerService.VerifyNotify:input_type -> payment.v1.AgentPayNotifyReq
	1, // 5: payment.v1.AgentPayInnerService.Apply:output_type -> payment.v1.AgentPayApplyReply
	3, // 6: payment.v1.AgentPayInnerService.QueryOrder:output_type -> payment.v1.AgentPayQueryReply
	4, // 7: payment.v1.AgentPayInnerService.QueryCep:output_type -> payment.v1.AgentPayQueryCepReply
	6, // 8: payment.v1.AgentPayInnerService.QueryBalance:output_type -> payment.v1.AgentPayBalanceReply
	8, // 9: payment.v1.AgentPayInnerService.VerifyNotify:output_type -> payment.v1.VerifyNotifyReply
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_payment_v1_payment_proto_init() }
func file_payment_v1_payment_proto_init() {
	if File_payment_v1_payment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payment_v1_payment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayApplyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayQueryCepReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPayNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_v1_payment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyNotifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_v1_payment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_v1_payment_proto_goTypes,
		DependencyIndexes: file_payment_v1_payment_proto_depIdxs,
		MessageInfos:      file_payment_v1_payment_proto_msgTypes,
	}.Build()
	File_payment_v1_payment_proto = out.File
	file_payment_v1_payment_proto_rawDesc = nil
	file_payment_v1_payment_proto_goTypes = nil
	file_payment_v1_payment_proto_depIdxs = nil
}
